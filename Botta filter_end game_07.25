/*@ define:module:header
hidden: true
name: header
*/

/* Built on: Fri May 16 18:45:59 UTC 2025 */
/* Commit: ef2b1e9 */
meta { name = "Botta's filter_July"; description = "Offers an original color scheme with extensive support for category-based styling/filtering."; }



/*@ define:module:default_styling
---
name: Default Styling
subtitle: The first layer of styling items
description: |
  This contains the default styles and options to configure style programmatically.
  
  *Note: These styles can be overridden by modules below.*
*/



/*@ define:input:default_styling
type: style
label: Default Style
group: Default Style
exampleItem: Santa hat
exampleItemId: 1050
*/
#define VAR_GLOBAL_CUSTOMSTYLE fontType = 3;showLootbeam = false;showDespawn = false;

apply (true) {
    VAR_GLOBAL_CUSTOMSTYLE 
}



/*@ define:input:default_styling
type: style
label: "Default Stackable/Noted Style"
group: "Default Stackable/Noted Style"
exampleItem: Magic shortbow (u)
exampleItemId: 73
*/
#define VAR_DEFAULT_STACKABLE_NOTED_CUSTOMSTYLE fontType = 3;

apply (stackable:true || noted:true) {
    VAR_DEFAULT_STACKABLE_NOTED_CUSTOMSTYLE 
}



/*@ define:input:default_styling
type: style
label: Default Untradeable Style
group: Default Untradeable Style
exampleItem: Long bone
exampleItemId: 10976
*/
#define VAR_DEFAULT_UNTRADEABLE_CUSTOMSTYLE fontType = 3;icon = CurrentItem();

apply (tradeable:false) {
    VAR_DEFAULT_UNTRADEABLE_CUSTOMSTYLE 
}

/*@ define:input:default_styling
type: boolean
label: Show Value for Tradeable Items
*/
#define VAR_GLOBAL_SHOW_TRADEABLE_VALUE false

apply ((tradeable:true || name:CONST_GLOBAL_TRADEABLE_NON_TRADEABLE_ITEMS) && VAR_GLOBAL_SHOW_TRADEABLE_VALUE) {
    showValue = true;
}

/*@ define:input:default_styling
type: boolean
label: Show Value for Untradeable Items
*/
#define VAR_GLOBAL_SHOW_UNTRADEABLE_VALUE false

apply (tradeable:false && VAR_GLOBAL_SHOW_UNTRADEABLE_VALUE) {
    showValue = true;
}

/*@ define:input:default_styling
type: number
label: Hide despawn timer for items below this value
group: Value-Based Style Settings
*/
#define VAR_GLOBAL_DESPAWN_TIMER_MINIMUM_VALUE 0

apply ((tradeable:true || name:CONST_GLOBAL_TRADEABLE_NON_TRADEABLE_ITEMS) && value:<VAR_GLOBAL_DESPAWN_TIMER_MINIMUM_VALUE) {
    showDespawn = false;
}

/*@ define:input:default_styling
type: number
label: Hide prices for items below this value
group: Value-Based Style Settings
*/
#define VAR_GLOBAL_SHOW_PRICES_MINIMUM_VALUE 0

apply ((tradeable:true || name:CONST_GLOBAL_TRADEABLE_NON_TRADEABLE_ITEMS) && value:<VAR_GLOBAL_SHOW_PRICES_MINIMUM_VALUE) {
    showValue = false;
}

/*@ define:input:default_styling
type: number
label: Hide icons for items below this value
group: Value-Based Style Settings
*/
#define VAR_GLOBAL_ICON_MINIMUM_VALUE 0

apply ((tradeable:true || name:CONST_GLOBAL_TRADEABLE_NON_TRADEABLE_ITEMS) && value:<VAR_GLOBAL_ICON_MINIMUM_VALUE) {
    // this is a hack to turn off the icon
    icon = Sprite(9000000, 0);
}

/*@ define:input:default_styling
type: stringlist
label: Items to show icons for (if not showing for all items)
*/
#define VAR_GLOBAL_SHOW_ICONS_ITEMLIST ["Vorkath's head","Scaly blue dragonhide","Nihil shard","Mark of grace","Prayer potion","Prayer potion(1)","Super restore","Super restore(1)","Water container"]

apply (name:VAR_GLOBAL_SHOW_ICONS_ITEMLIST) {
    icon = CurrentItem();
}


/*@ define:module:sorting
---
name: Sorting
subtitle: Picking up the good stuff first
description: |
  This allows you to order the pickup menu in a few different ways.

  NOTE: This requires that "Price Sort" in the "Custom Menu Swaps" plugin under "Ground Item Sort" to be DISABLED.
*/

/*@ define:input:sorting
type: boolean
label: Sort by value
*/
#define VAR_SORTING_MENU_SORT_BY_VALUE false

/*@ define:input:sorting
type: boolean
label: Prioritize Stackable/noted
*/
#define VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST false

/*@ define:input:sorting
type: boolean
label: Prioritize Untradeables
*/
#define VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST false

/*@ define:input:sorting
type: stringlist
label: Items to always show first
*/
#define VAR_MENU_SORT_ITEMS_FIRST ["Coins"]


/*@ define:module:filtering
---
name: Filtering
subtitle: Sifting through the junk
description: |
  Provides a few different ways to filter out items.
*/


/*@ define:input:filtering
type: stringlist
label: Items to hide
group: Individual Items
*/
#define VAR_GLOBAL_HIDE []

apply (name:VAR_GLOBAL_HIDE) {
    hidden = true;
}

/*@ define:input:filtering
type: stringlist
label: Items to show
group: Individual Items
*/
#define VAR_GLOBAL_SHOW ["Araxyte venom sack","Vorkath's head","Scaly blue dragonhide","Nihil shard","Mark of grace","Prayer potion(1)","Super restore(1)"]

apply (name:VAR_GLOBAL_SHOW) {
    hidden = false;
}


/*@ define:input:filtering
type: number
label: Hide items below this value
group: Value-Based
*/
#define VAR_GLOBAL_MINIMUM_VALUE 7500

apply ((tradeable:true || name:CONST_GLOBAL_TRADEABLE_NON_TRADEABLE_ITEMS) && value:<VAR_GLOBAL_MINIMUM_VALUE) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Hide stackable items below this value
group: Value-Based
*/
#define VAR_GLOBAL_STACKABLE_MINIMUM_VALUE 0

apply ((tradeable:true || name:CONST_GLOBAL_TRADEABLE_NON_TRADEABLE_ITEMS) && (stackable:true || noted:true) && value:<VAR_GLOBAL_STACKABLE_MINIMUM_VALUE) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Hide non-stackable items below this value
group: Value-Based
*/
#define VAR_GLOBAL_NON_STACKABLE_MINIMUM_VALUE 0

apply ((tradeable:true || name:CONST_GLOBAL_TRADEABLE_NON_TRADEABLE_ITEMS) && stackable:false && noted:false && value:<VAR_GLOBAL_NON_STACKABLE_MINIMUM_VALUE) {
    hidden = true;
}


/*@ define:input:filtering
type: boolean
label: Hide others' drops
group: Ownership
*/
#define VAR_GLOBAL_HIDE_OTHER_PLAYERS_ITEMS false

/*@ define:input:filtering
type: boolean
label: Hide world spawns
group: Ownership
*/
#define VAR_GLOBAL_HIDE_SPAWN_ITEMS true

/*@ define:input:filtering
type: stringlist
label: Exceptions to ownership
group: Ownership
*/
#define VAR_OWNERSHIP_FILTERING_EXCEPTIONS []

rule (ownership:OWNERSHIP_NONE && VAR_GLOBAL_HIDE_SPAWN_ITEMS  && !name:VAR_OWNERSHIP_FILTERING_EXCEPTIONS) {
    hidden = true;
}

rule (ownership:OWNERSHIP_OTHER && VAR_GLOBAL_HIDE_OTHER_PLAYERS_ITEMS && !name:VAR_OWNERSHIP_FILTERING_EXCEPTIONS) {
    hidden = true;
}


/*@ define:input:filtering
type: enumlist
label: Clue tiers to force hidden
group: Clue Scrolls
enum: [
  {
    "value": "Clue scroll (beginner)",
    "label": "Beginner"
  },
  {
    "value": "Clue scroll (easy)",
    "label": "Easy"
  },
  {
    "value": "Clue scroll (medium)",
    "label": "Medium"
  },
  {
    "value": "Clue scroll (hard)",
    "label": "Hard"
  },
  {
    "value": "Clue scroll (elite)",
    "label": "Elite"
  },
  {
    "value": "Clue scroll (master)",
    "label": "Master"
  }
]
*/
#define VAR_CLUE_SCROLLS_HIDE ["Clue scroll (beginner)"]

apply (name:VAR_CLUE_SCROLLS_HIDE) {
    hidden = true;
}

/* TODO: add filtering of specific steps based on item ID */


/*@ define:input:remains
type: number
label: Minimum value to display remains at
group: Remains
*/
#define VAR_REMAINS_MINIMUM_VALUE 0

apply (name:CONST_BONES_LIST && value:<VAR_REMAINS_MINIMUM_VALUE) {
    hidden = true;
}

apply (name:CONST_ASHES_LIST && value:<VAR_REMAINS_MINIMUM_VALUE) {
    hidden = true;
}

apply (name:CONST_SHADES_REMAINS_LIST && value:<VAR_REMAINS_MINIMUM_VALUE) {
    hidden = true;
}

apply (name:CONST_ENSOULED_HEAD_LIST && value:<VAR_REMAINS_MINIMUM_VALUE) {
    hidden = true;
}

/*@ define:input:remains
type: enumlist
label: Bones to force hidden
group: Remains
enum: [
  "Bones",
  "Wolf bones",
  "Burnt bones",
  "Monkey bones",
  "Bat bones",
  "Big bones",
  "Jogre bones",
  "Wyrmling bones",
  "Zogre bones",
  "Shaikahan bones",
  "Babydragon bones",
  "Wyrm bones",
  "Wyvern bones",
  "Dragon bones",
  "Drake bones",
  "Fayrg bones",
  "Lava dragon bones",
  "Raurg bones",
  "Hydra bones",
  "Dagannoth bones",
  "Ourg bones",
  "Superior dragon bones",
  "Bleached bones",
  "Small zombie monkey bones",
  "Large zombie monkey bones",
  "Small ninja monkey bones",
  "Medium ninja monkey bones",
  "Gorilla bones",
  "Bearded gorilla bones"
]
*/
#define VAR_BONES_HIDE ["Bones","Wolf bones","Burnt bones","Monkey bones","Bat bones","Big bones","Jogre bones","Wyrmling bones","Zogre bones","Bearded gorilla bones","Gorilla bones","Medium ninja monkey bones","Small ninja monkey bones","Large zombie monkey bones","Small zombie monkey bones","Bleached bones","Ourg bones","Raurg bones","Fayrg bones","Drake bones","Babydragon bones","Shaikahan bones"]

apply (name:VAR_BONES_HIDE) {
    hidden = true;
}

/*@ define:input:remains
type: enumlist
label: Ashes to force hidden
group: Remains
enum: [
  "Fiendish ashes",
  "Vile ashes",
  "Malicious ashes",
  "Abyssal ashes",
  "Infernal ashes"
]
*/
#define VAR_ASHES_HIDE ["Fiendish ashes","Vile ashes"]

apply (name:VAR_ASHES_HIDE) {
    hidden = true;
}

/*@ define:input:remains
type: enumlist
label: Shades of morton remains to force hidden
group: Remains
enum: [
  "Loar remains",
  "Phrin remains",
  "Riyl remains",
  "Asyn remains",
  "Fiyr remains",
  "Urium remains"
]
*/
#define VAR_SHADES_REMAINS_HIDE []

apply (name:VAR_SHADES_REMAINS_HIDE) {
    hidden = true;
}

/*@ define:input:remains
type: enumlist
label: Ensouled heads to force hidden
group: Remains
enum: [
  "Ensouled goblin head",
  "Ensouled monkey head",
  "Ensouled imp head",
  "Ensouled minotaur head",
  "Ensouled scorpion head",
  "Ensouled bear head",
  "Ensouled unicorn head",
  "Ensouled dog head",
  "Ensouled chaos druid head",
  "Ensouled giant head",
  "Ensouled ogre head",
  "Ensouled elf head",
  "Ensouled troll head",
  "Ensouled horror head",
  "Ensouled kalphite head",
  "Ensouled dagannoth head",
  "Ensouled bloodveld head",
  "Ensouled tzHaar head",
  "Ensouled demon head",
  "Ensouled hellhound head",
  "Ensouled aviansie head",
  "Ensouled abyssal head",
  "Ensouled dragon head"
]
*/
#define VAR_ENSOULED_HEADS_HIDE ["Ensouled goblin head","Ensouled monkey head","Ensouled imp head","Ensouled minotaur head","Ensouled scorpion head","Ensouled bear head","Ensouled unicorn head","Ensouled dog head","Ensouled chaos druid head","Ensouled giant head","Ensouled aviansie head","Ensouled hellhound head","Ensouled demon head","Ensouled bloodveld head","Ensouled tzHaar head","Ensouled dagannoth head","Ensouled kalphite head","Ensouled horror head","Ensouled troll head","Ensouled elf head","Ensouled ogre head"]

apply (name:VAR_ENSOULED_HEADS_HIDE) {
    hidden = true;
}


/*@ define:input:food
type: enumlist
label: Hunter foods to force hidden
group: Food
enum: [
  "Cooked wild kebbit",
  "Cooked larupia",
  "Cooked barb-tailed kebbit",
  "Cooked graahk",
  "Cooked kyatt",
  "Cooked pyre fox",
  "Cooked sunlight antelope",
  "Cooked dashing kebbit",
  "Cooked moonlight antelope"
]
*/
#define VAR_FOOD_HUNTER_FOODS_HIDE ["Cooked wild kebbit","Cooked larupia","Cooked barb-tailed kebbit","Cooked graahk"]

apply (name:VAR_FOOD_HUNTER_FOODS_HIDE) {
    hidden = true;
}

/*@ define:input:food
type: enumlist
label: Fish foods to force hidden
group: Food
enum: [
  "Shrimp",
  "Sardine",
  "Karambwanji",
  "Herring",
  "Anchovies",
  "Mackerel",
  "Trout",
  "Cod",
  "Pike",
  "Slimy eel",
  "Salmon",
  "Tuna",
  "Rainbow fish",
  "Cave eel",
  "Lobster",
  "Bass",
  "Swordfish",
  "Lava eel",
  "Monkfish",
  "Cooked karambwan",
  "Shark",
  "Sea turtle",
  "Manta ray",
  "Anglerfish",
  "Dark crab"
]
*/
#define VAR_FOOD_FISH_FOODS_HIDE ["Shrimp","Sardine","Herring","Anchovies","Mackerel","Trout","Cod","Pike","Salmon","Tuna","Bass","Swordfish","Lobster","Cave eel","Rainbow fish","Slimy eel"]

apply (name:VAR_FOOD_FISH_FOODS_HIDE) {
    hidden = true;
}

/*@ define:input:food
type: enumlist
label: Hunter foods to force shown
group: Food
enum: [
  "Cooked wild kebbit",
  "Cooked larupia",
  "Cooked barb-tailed kebbit",
  "Cooked graahk",
  "Cooked kyatt",
  "Cooked pyre fox",
  "Cooked sunlight antelope",
  "Cooked dashing kebbit",
  "Cooked moonlight antelope"
]
*/
#define VAR_FOOD_HUNTER_FOODS_SHOW ["Cooked sunlight antelope","Cooked dashing kebbit","Cooked moonlight antelope"]

apply (name:VAR_FOOD_HUNTER_FOODS_SHOW) {
    hidden = false;
}

/*@ define:input:food
type: enumlist
label: Fish foods to force shown
group: Food
enum: [
  "Shrimp",
  "Sardine",
  "Karambwanji",
  "Herring",
  "Anchovies",
  "Mackerel",
  "Trout",
  "Cod",
  "Pike",
  "Slimy eel",
  "Salmon",
  "Tuna",
  "Rainbow fish",
  "Cave eel",
  "Lobster",
  "Bass",
  "Swordfish",
  "Lava eel",
  "Monkfish",
  "Cooked karambwan",
  "Shark",
  "Sea turtle",
  "Manta ray",
  "Anglerfish",
  "Dark crab"
]
*/
#define VAR_FOOD_FISH_FOODS_SHOW ["Lava eel","Cooked karambwan","Shark","Sea turtle","Manta ray","Anglerfish","Dark crab"]

apply (name:VAR_FOOD_FISH_FOODS_SHOW) {
    hidden = false;
}


/*@ define:input:potions
type: enumlist
label: Potions to force hidden
group: Potions
enum: [
  {
    "value": "Attack potion(*",
    "label": "Attack potion"
  },
  {
    "value": "Antipoison(*",
    "label": "Antipoison"
  },
  {
    "value": "Strength potion(*",
    "label": "Strength potion"
  },
  {
    "value": "Serum 207(*",
    "label": "Serum 207"
  },
  {
    "value": "Compost potion(*",
    "label": "Compost potion"
  },
  {
    "value": "Restore potion(*",
    "label": "Restore potion"
  },
  {
    "value": "Energy potion(*",
    "label": "Energy potion"
  },
  {
    "value": "Defence potion(*",
    "label": "Defence potion"
  },
  {
    "value": "Agility potion(*",
    "label": "Agility potion"
  },
  {
    "value": "Combat potion(*",
    "label": "Combat potion"
  },
  {
    "value": "Prayer potion(*",
    "label": "Prayer potion"
  },
  {
    "value": "Super attack(*",
    "label": "Super attack"
  },
  {
    "value": "Superantipoison(*",
    "label": "Superantipoison"
  },
  {
    "value": "Fishing potion(*",
    "label": "Fishing potion"
  },
  {
    "value": "Super energy(*",
    "label": "Super energy"
  },
  {
    "value": "Hunter potion(*",
    "label": "Hunter potion"
  },
  {
    "value": "Goading potion(*",
    "label": "Goading potion"
  },
  {
    "value": "Super strength(*",
    "label": "Super strength"
  },
  {
    "value": "Prayer regeneration potion(*",
    "label": "Prayer regeneration potion"
  },
  {
    "value": "Super restore(*",
    "label": "Super restore"
  },
  {
    "value": "Sanfew serum(*",
    "label": "Sanfew serum"
  },
  {
    "value": "Super defence(*",
    "label": "Super defence"
  },
  {
    "value": "Antidote+(*",
    "label": "Antidote+"
  },
  {
    "value": "Antifire potion(*",
    "label": "Antifire potion"
  },
  {
    "value": "Divine super attack potion(*",
    "label": "Divine super attack potion"
  },
  {
    "value": "Divine super defence potion(*",
    "label": "Divine super defence potion"
  },
  {
    "value": "Divine super strength potion(*",
    "label": "Divine super strength potion"
  },
  {
    "value": "Ranging potion(*",
    "label": "Ranging potion"
  },
  {
    "value": "Divine ranging potion(*",
    "label": "Divine ranging potion"
  },
  {
    "value": "Magic potion(*",
    "label": "Magic potion"
  },
  {
    "value": "Stamina potion(*",
    "label": "Stamina potion"
  },
  {
    "value": "Zamorak brew(*",
    "label": "Zamorak brew"
  },
  {
    "value": "Divine magic potion(*",
    "label": "Divine magic potion"
  },
  {
    "value": "Antidote++(*",
    "label": "Antidote++"
  },
  {
    "value": "Bastion potion(*",
    "label": "Bastion potion"
  },
  {
    "value": "Battlemage potion(*",
    "label": "Battlemage potion"
  },
  {
    "value": "Saradomin brew(*",
    "label": "Saradomin brew"
  },
  {
    "value": "Extended antifire(*",
    "label": "Extended antifire"
  },
  {
    "value": "Ancient brew(*",
    "label": "Ancient brew"
  },
  {
    "value": "Divine bastion potion(*",
    "label": "Divine bastion potion"
  },
  {
    "value": "Divine battlemage potion(*",
    "label": "Divine battlemage potion"
  },
  {
    "value": "Anti-venom(*",
    "label": "Anti-venom"
  },
  {
    "value": "Menaphite remedy(*",
    "label": "Menaphite remedy"
  },
  {
    "value": "Super combat potion(*",
    "label": "Super combat potion"
  },
  {
    "value": "Forgotten brew(*",
    "label": "Forgotten brew"
  },
  {
    "value": "Super antifire potion(*",
    "label": "Super antifire potion"
  },
  {
    "value": "Anti-venom+(*",
    "label": "Anti-venom+"
  },
  {
    "value": "Extended anti-venom+(*",
    "label": "Extended anti-venom+"
  },
  {
    "value": "Divine super combat potion(*",
    "label": "Divine super combat potion"
  },
  {
    "value": "Extended super antifire(*",
    "label": "Extended super antifire"
  }
]
*/
#define VAR_POTIONS_HIDE ["Attack potion(*","Strength potion(*","Serum 207(*","Compost potion(*","Restore potion(*","Energy potion(*","Defence potion(*","Agility potion(*","Combat potion(*","Fishing potion(*","Hunter potion(*","Antidote+(*","Antipoison(*"]

apply (name:VAR_POTIONS_HIDE) {
    hidden = true;
}

/*@ define:input:potions
type: enumlist
label: Potions to force shown
group: Potions
enum: [
  {
    "value": "Attack potion(*",
    "label": "Attack potion"
  },
  {
    "value": "Antipoison(*",
    "label": "Antipoison"
  },
  {
    "value": "Strength potion(*",
    "label": "Strength potion"
  },
  {
    "value": "Serum 207(*",
    "label": "Serum 207"
  },
  {
    "value": "Compost potion(*",
    "label": "Compost potion"
  },
  {
    "value": "Restore potion(*",
    "label": "Restore potion"
  },
  {
    "value": "Energy potion(*",
    "label": "Energy potion"
  },
  {
    "value": "Defence potion(*",
    "label": "Defence potion"
  },
  {
    "value": "Agility potion(*",
    "label": "Agility potion"
  },
  {
    "value": "Combat potion(*",
    "label": "Combat potion"
  },
  {
    "value": "Prayer potion(*",
    "label": "Prayer potion"
  },
  {
    "value": "Super attack(*",
    "label": "Super attack"
  },
  {
    "value": "Superantipoison(*",
    "label": "Superantipoison"
  },
  {
    "value": "Fishing potion(*",
    "label": "Fishing potion"
  },
  {
    "value": "Super energy(*",
    "label": "Super energy"
  },
  {
    "value": "Hunter potion(*",
    "label": "Hunter potion"
  },
  {
    "value": "Goading potion(*",
    "label": "Goading potion"
  },
  {
    "value": "Super strength(*",
    "label": "Super strength"
  },
  {
    "value": "Prayer regeneration potion(*",
    "label": "Prayer regeneration potion"
  },
  {
    "value": "Super restore(*",
    "label": "Super restore"
  },
  {
    "value": "Sanfew serum(*",
    "label": "Sanfew serum"
  },
  {
    "value": "Super defence(*",
    "label": "Super defence"
  },
  {
    "value": "Antidote+(*",
    "label": "Antidote+"
  },
  {
    "value": "Antifire potion(*",
    "label": "Antifire potion"
  },
  {
    "value": "Divine super attack potion(*",
    "label": "Divine super attack potion"
  },
  {
    "value": "Divine super defence potion(*",
    "label": "Divine super defence potion"
  },
  {
    "value": "Divine super strength potion(*",
    "label": "Divine super strength potion"
  },
  {
    "value": "Ranging potion(*",
    "label": "Ranging potion"
  },
  {
    "value": "Divine ranging potion(*",
    "label": "Divine ranging potion"
  },
  {
    "value": "Magic potion(*",
    "label": "Magic potion"
  },
  {
    "value": "Stamina potion(*",
    "label": "Stamina potion"
  },
  {
    "value": "Zamorak brew(*",
    "label": "Zamorak brew"
  },
  {
    "value": "Divine magic potion(*",
    "label": "Divine magic potion"
  },
  {
    "value": "Antidote++(*",
    "label": "Antidote++"
  },
  {
    "value": "Bastion potion(*",
    "label": "Bastion potion"
  },
  {
    "value": "Battlemage potion(*",
    "label": "Battlemage potion"
  },
  {
    "value": "Saradomin brew(*",
    "label": "Saradomin brew"
  },
  {
    "value": "Extended antifire(*",
    "label": "Extended antifire"
  },
  {
    "value": "Ancient brew(*",
    "label": "Ancient brew"
  },
  {
    "value": "Divine bastion potion(*",
    "label": "Divine bastion potion"
  },
  {
    "value": "Divine battlemage potion(*",
    "label": "Divine battlemage potion"
  },
  {
    "value": "Anti-venom(*",
    "label": "Anti-venom"
  },
  {
    "value": "Menaphite remedy(*",
    "label": "Menaphite remedy"
  },
  {
    "value": "Super combat potion(*",
    "label": "Super combat potion"
  },
  {
    "value": "Forgotten brew(*",
    "label": "Forgotten brew"
  },
  {
    "value": "Super antifire potion(*",
    "label": "Super antifire potion"
  },
  {
    "value": "Anti-venom+(*",
    "label": "Anti-venom+"
  },
  {
    "value": "Extended anti-venom+(*",
    "label": "Extended anti-venom+"
  },
  {
    "value": "Divine super combat potion(*",
    "label": "Divine super combat potion"
  },
  {
    "value": "Extended super antifire(*",
    "label": "Extended super antifire"
  }
]
*/
#define VAR_POTIONS_SHOW ["Anti-venom(*","Anti-venom+(*","Antidote++(*","Antifire potion(*","Bastion potion(*","Battlemage potion(*","Divine bastion potion(*","Divine battlemage potion(*","Divine magic potion(*","Divine ranging potion(*","Divine super attack potion(*","Divine super combat potion(*","Divine super defence potion(*","Divine super strength potion(*","Extended anti-venom+(*","Extended antifire(*","Extended super antifire(*","Forgotten brew(*","Goading potion(*","Menaphite remedy(*","Prayer regeneration potion(*","Ranging potion(*","Sanfew serum(*","Saradomin brew(*","Stamina potion(*","Super antifire potion(*","Super combat potion(*","Super restore(*","Ancient brew(*","Prayer potion(*","Super attack(*","Super strength(*","Super defence(*"]

apply (name:VAR_POTIONS_SHOW) {
    hidden = false;
}


/*@ define:input:ammo
type: enumlist
label: Standard arrows to force hidden
group: Ammo
enum: [
  {
    "value": "Bronze*",
    "label": "Bronze Arrows"
  },
  {
    "value": "Iron*",
    "label": "Iron Arrows"
  },
  {
    "value": "Steel*",
    "label": "Steel Arrows"
  },
  {
    "value": "Mithril*",
    "label": "Mithril Arrows"
  },
  {
    "value": "Adamant*",
    "label": "Adamant Arrows"
  },
  {
    "value": "Rune*",
    "label": "Rune Arrows"
  },
  {
    "value": "Amethyst*",
    "label": "Amethyst Arrows"
  },
  {
    "value": "Dragon*",
    "label": "Dragon Arrows"
  }
]
*/
#define VAR_AMMO_STANDARD_ARROWS_HIDE ["Bronze*","Iron*","Steel*","Mithril*","Adamant*"]

/*@ define:input:ammo
type: number
label: Standard Arrows minimum value
group: Ammo
*/
#define VAR_AMMO_STANDARD_ARROWS_MIN_VALUE 500

apply (name:CONST_AMMO_STANDARD_ARROWS_LIST && (name:VAR_AMMO_STANDARD_ARROWS_HIDE || value:<VAR_AMMO_STANDARD_ARROWS_MIN_VALUE)) {
    hidden = true;
}

/*@ define:input:ammo
type: enumlist
label: Darts to force hidden
group: Ammo
enum: [
  {
    "value": "Bronze dart*",
    "label": "Bronze darts"
  },
  {
    "value": "Iron dart*",
    "label": "Iron darts"
  },
  {
    "value": "Steel dart*",
    "label": "Steel darts"
  },
  {
    "value": "Black dart*",
    "label": "Black darts"
  },
  {
    "value": "Mithril dart*",
    "label": "Mithril darts"
  },
  {
    "value": "Adamant dart*",
    "label": "Adamant darts"
  },
  {
    "value": "Rune dart*",
    "label": "Rune darts"
  },
  {
    "value": "Amethyst dart*",
    "label": "Amethyst darts"
  },
  {
    "value": "Dragon dart*",
    "label": "Dragon darts"
  },
  {
    "value": "Atlatl dart",
    "label": "Atlatl darts"
  }
]
*/
#define VAR_AMMO_DARTS_HIDE ["Bronze dart*","Iron dart*","Steel dart*","Black dart*","Mithril dart*","Adamant dart*"]

/*@ define:input:ammo
type: number
label: Darts minimum value
group: Ammo
*/
#define VAR_AMMO_DARTS_MIN_VALUE 500

apply (name:CONST_AMMO_DARTS_LIST && (name:VAR_AMMO_DARTS_HIDE || value:<VAR_AMMO_DARTS_MIN_VALUE)) {
    hidden = true;
}

/*@ define:input:ammo
type: enumlist
label: Bolts to force hidden
group: Ammo
enum: [
  {
    "value": "Bronze bolts*",
    "label": "Bronze bolts"
  },
  {
    "value": "Blurite bolts*",
    "label": "Blurite bolts"
  },
  {
    "value": "Silver bolts*",
    "label": "Silver bolts"
  },
  {
    "value": "Iron bolts*",
    "label": "Iron bolts"
  },
  {
    "value": "Steel bolts*",
    "label": "Steel bolts"
  },
  {
    "value": "Mithril bolts*",
    "label": "Mithril bolts"
  },
  {
    "value": "Adamant bolts*",
    "label": "Adamant bolts"
  },
  {
    "value": "Runite bolts*",
    "label": "Runite bolts"
  },
  {
    "value": "Dragon bolts*",
    "label": "Dragon bolts"
  }
]
*/
#define VAR_AMMO_BOLTS_HIDE ["Bronze bolts*","Blurite bolts*","Silver bolts*","Iron bolts*","Steel bolts*","Mithril bolts*"]

/*@ define:input:ammo
type: number
label: Bolts minimum value
group: Ammo
*/
#define VAR_AMMO_BOLTS_MIN_VALUE 500

apply (name:CONST_AMMO_BOLTS_LIST && (name:VAR_AMMO_BOLTS_HIDE || value:<VAR_AMMO_BOLTS_MIN_VALUE)) {
    hidden = true;
}

/*@ define:input:ammo
type: enumlist
label: Enchanted bolts to force hidden
group: Ammo
enum: [
  {
    "value": "Opal bolts (e)",
    "label": "Opal bolts (e)"
  },
  {
    "value": "Jade bolts (e)",
    "label": "Jade bolts (e)"
  },
  {
    "value": "Pearl bolts (e)",
    "label": "Pearl bolts (e)"
  },
  {
    "value": "Topaz bolts (e)",
    "label": "Topaz bolts (e)"
  },
  {
    "value": "Sapphire bolts (e)",
    "label": "Sapphire bolts (e)"
  },
  {
    "value": "Emerald bolts (e)",
    "label": "Emerald bolts (e)"
  },
  {
    "value": "Ruby bolts (e)",
    "label": "Ruby bolts (e)"
  },
  {
    "value": "Diamond bolts (e)",
    "label": "Diamond bolts (e)"
  },
  {
    "value": "Dragonstone bolts (e)",
    "label": "Dragonstone bolts (e)"
  },
  {
    "value": "Onyx bolts (e)",
    "label": "Onyx bolts (e)"
  }
]
*/
#define VAR_AMMO_BOLTS_E_HIDE []

/*@ define:input:ammo
type: number
label: Enchanted bolts minimum value
group: Ammo
*/
#define VAR_AMMO_BOLTS_E_MIN_VALUE 500

apply (name:CONST_AMMO_BOLTS_E_LIST && (name:VAR_AMMO_BOLTS_E_HIDE || value:<VAR_AMMO_BOLTS_E_MIN_VALUE)) {
    hidden = true;
}

/*@ define:input:ammo
type: enumlist
label: Dragon enchanted bolts to force hidden
group: Ammo
enum: [
  {
    "value": "Opal dragon bolts (e)",
    "label": "Opal dragon bolts (e)"
  },
  {
    "value": "Jade dragon bolts (e)",
    "label": "Jade dragon bolts (e)"
  },
  {
    "value": "Pearl dragon bolts (e)",
    "label": "Pearl dragon bolts (e)"
  },
  {
    "value": "Topaz dragon bolts (e)",
    "label": "Topaz dragon bolts (e)"
  },
  {
    "value": "Sapphire dragon bolts (e)",
    "label": "Sapphire dragon bolts (e)"
  },
  {
    "value": "Emerald dragon bolts (e)",
    "label": "Emerald dragon bolts (e)"
  },
  {
    "value": "Ruby dragon bolts (e)",
    "label": "Ruby dragon bolts (e)"
  },
  {
    "value": "Diamond dragon bolts (e)",
    "label": "Diamond dragon bolts (e)"
  },
  {
    "value": "Dragonstone dragon bolts (e)",
    "label": "Dragonstone dragon bolts (e)"
  },
  {
    "value": "Onyx dragon bolts (e)",
    "label": "Onyx dragon bolts (e)"
  }
]
*/
#define VAR_AMMO_DRAGON_BOLTS_E_HIDE []

/*@ define:input:ammo
type: number
label: Dragon enchanted bolts minimum value
group: Ammo
*/
#define VAR_AMMO_DRAGON_BOLTS_E_MIN_VALUE 500

apply (name:CONST_AMMO_DRAGON_BOLTS_E_LIST && (name:VAR_AMMO_DRAGON_BOLTS_E_HIDE || value:<VAR_AMMO_DRAGON_BOLTS_E_MIN_VALUE)) {
    hidden = true;
}

/*@ define:input:ammo
type: enumlist
label: Javelins to force hidden
group: Ammo
enum: [
  {
    "value": "Bronze javelin*",
    "label": "Bronze javelins"
  },
  {
    "value": "Iron javelin*",
    "label": "Iron javelins"
  },
  {
    "value": "Steel javelin*",
    "label": "Steel javelins"
  },
  {
    "value": "Mithril javelin*",
    "label": "Mithril javelins"
  },
  {
    "value": "Adamant javelin*",
    "label": "Adamant javelins"
  },
  {
    "value": "Rune javelin*",
    "label": "Rune javelins"
  },
  {
    "value": "Amethyst javelin*",
    "label": "Amethyst javelins"
  },
  {
    "value": "Dragon javelin*",
    "label": "Dragon javelins"
  }
]
*/
#define VAR_AMMO_JAVELINS_HIDE ["Bronze javelin*","Iron javelin*","Steel javelin*","Mithril javelin*","Adamant javelin*"]

/*@ define:input:ammo
type: number
label: Javelins minimum value
group: Ammo
*/
#define VAR_AMMO_JAVELINS_MIN_VALUE 500

apply (name:CONST_AMMO_JAVELINS_LIST && (name:VAR_AMMO_JAVELINS_HIDE || value:<VAR_AMMO_JAVELINS_MIN_VALUE)) {
    hidden = true;
}

/*@ define:input:ammo
type: enumlist
label: Special bolts to force hidden
group: Ammo
enum: [
  {
    "value": "Sunlight antler bolts",
    "label": "Sunlight antler bolts"
  },
  {
    "value": "Moonlight antler bolts",
    "label": "Moonlight antler bolts"
  },
  {
    "value": "Kebbit bolts",
    "label": "Kebbit bolts"
  },
  {
    "value": "Long kebbit bolts",
    "label": "Long kebbit bolts"
  },
  {
    "value": "Broad bolts",
    "label": "Broad bolts"
  },
  {
    "value": "Amethyst broad bolts",
    "label": "Amethyst broad bolts"
  },
  {
    "value": "Barbed bolts",
    "label": "Barbed bolts"
  },
  {
    "value": "Bone bolts",
    "label": "Bone bolts"
  }
]
*/
#define VAR_AMMO_SPECIAL_BOLTS_HIDE []

/*@ define:input:ammo
type: number
label: Special bolts minimum value
group: Ammo
*/
#define VAR_AMMO_SPECIAL_BOLTS_MIN_VALUE 500

apply (name:CONST_AMMO_SPECIAL_BOLTS_LIST && (name:VAR_AMMO_SPECIAL_BOLTS_HIDE || value:<VAR_AMMO_SPECIAL_BOLTS_MIN_VALUE)) {
    hidden = true;
}

/*@ define:input:ammo
type: enumlist
label: Brutal arrows to force hidden
group: Ammo
enum: [
  {
    "value": "Bronze brutal",
    "label": "Bronze brutal arrows"
  },
  {
    "value": "Iron brutal",
    "label": "Iron brutal arrows"
  },
  {
    "value": "Steel brutal",
    "label": "Steel brutal arrows"
  },
  {
    "value": "Black brutal",
    "label": "Black brutal arrows"
  },
  {
    "value": "Mithril brutal",
    "label": "Mithril brutal arrows"
  },
  {
    "value": "Adamant brutal",
    "label": "Adamant brutal arrows"
  },
  {
    "value": "Rune brutal",
    "label": "Rune brutal arrows"
  }
]
*/
#define VAR_AMMO_BRUTAL_ARROWS_HIDE ["Bronze brutal","Iron brutal","Steel brutal","Black brutal","Mithril brutal"]

/*@ define:input:ammo
type: number
label: Brutal Arrows minimum value
group: Ammo
*/
#define VAR_AMMO_BRUTAL_ARROWS_MIN_VALUE 500

apply (name:CONST_AMMO_BRUTAL_ARROWS_LIST && (name:VAR_AMMO_BRUTAL_ARROWS_HIDE || value:<VAR_AMMO_BRUTAL_ARROWS_MIN_VALUE)) {
    hidden = true;
}

/*@ define:input:ammo
type: enumlist
label: Special arrows to force hidden
group: Ammo
enum: [
  {
    "value": "Training Arrow",
    "label": "Training Arrows"
  },
  {
    "value": "Ogre Arrow",
    "label": "Ogre Arrows"
  },
  {
    "value": "Ice Arrow",
    "label": "Ice Arrows"
  },
  {
    "value": "Broad Arrow",
    "label": "Broad Arrows"
  }
]
*/
#define VAR_AMMO_SPECIAL_ARROWS_HIDE ["Training Arrow","Ogre Arrow","Ice Arrow","Broad Arrow"]

/*@ define:input:ammo
type: number
label: Special Arrows minimum value
group: Ammo
*/
#define VAR_AMMO_SPECIAL_ARROWS_MIN_VALUE 500

apply (name:CONST_AMMO_SPECIAL_ARROWS_LIST && (name:VAR_AMMO_SPECIAL_ARROWS_HIDE || value:<VAR_AMMO_SPECIAL_ARROWS_MIN_VALUE)) {
    hidden = true;
}


/*@ define:input:filtering
type: enumlist
label: Gems to force hidden
group: Gems
enum: [
  {
    "value": "*Sapphire",
    "label": "Sapphire"
  },
  {
    "value": "*Emerald",
    "label": "Emerald"
  },
  {
    "value": "*Ruby",
    "label": "Ruby"
  },
  {
    "value": "*Diamond",
    "label": "Diamond"
  },
  {
    "value": "*Opal",
    "label": "Opal"
  },
  {
    "value": "*Jade",
    "label": "Jade"
  },
  {
    "value": "*Red topaz",
    "label": "Red topaz"
  },
  {
    "value": "*Dragonstone",
    "label": "Dragonstone"
  },
  {
    "value": "*Onyx",
    "label": "Onyx"
  }
]
*/
#define VAR_GEMS_HIDE []

apply (name:VAR_GEMS_HIDE) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Sapphire minimum quantity
group: Gems
*/
#define VAR_SAPPHIRE_MIN_QUANTITY 0

apply (name:["Uncut sapphire",   "Sapphire", ] && quantity:<VAR_SAPPHIRE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Emerald minimum quantity
group: Gems
*/
#define VAR_EMERALD_MIN_QUANTITY 0

apply (name:["Uncut emerald",   "Emerald", ] && quantity:<VAR_EMERALD_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Ruby minimum quantity
group: Gems
*/
#define VAR_RUBY_MIN_QUANTITY 0

apply (name:["Uncut ruby",   "Ruby", ] && quantity:<VAR_RUBY_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Diamond minimum quantity
group: Gems
*/
#define VAR_DIAMOND_MIN_QUANTITY 0

apply (name:["Uncut diamond",   "Diamond", ] && quantity:<VAR_DIAMOND_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Opal minimum quantity
group: Gems
*/
#define VAR_OPAL_MIN_QUANTITY 0

apply (name:["Uncut opal",   "Opal", ] && quantity:<VAR_OPAL_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Jade minimum quantity
group: Gems
*/
#define VAR_JADE_MIN_QUANTITY 0

apply (name:["Uncut jade",   "Jade", ] && quantity:<VAR_JADE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Red topaz minimum quantity
group: Gems
*/
#define VAR_RED_TOPAZ_MIN_QUANTITY 0

apply (name:["Uncut red topaz",   "Red topaz", ] && quantity:<VAR_RED_TOPAZ_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Dragonstone minimum quantity
group: Gems
*/
#define VAR_DRAGONSTONE_MIN_QUANTITY 0

apply (name:["Uncut dragonstone",   "Dragonstone", ] && quantity:<VAR_DRAGONSTONE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Onyx minimum quantity
group: Gems
*/
#define VAR_ONYX_MIN_QUANTITY 0

apply (name:["Uncut onyx",   "Onyx", ] && quantity:<VAR_ONYX_MIN_QUANTITY) {
    hidden = true;
}


/*@ define:input:runes
type: enumlist
label: Runes to force hidden
group: Runes
enum: [
  "Air rune",
  "Mind rune",
  "Water rune",
  "Earth rune",
  "Fire rune",
  "Body rune",
  "Cosmic rune",
  "Chaos rune",
  "Nature rune",
  "Law rune",
  "Death rune",
  "Sunfire rune",
  "Astral rune",
  "Blood rune",
  "Soul rune",
  "Wrath rune",
  "Mist rune",
  "Dust rune",
  "Mud rune",
  "Smoke rune",
  "Steam rune",
  "Lava rune"
]
*/
#define VAR_RUNES_HIDE ["Mind rune","Body rune"]

/*@ define:input:runes
type: boolean
label: Force runes to be shown if they're above min quantity
group: Runes
*/
#define VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY true

/*@ define:input:runes
type: number
label: Air rune minimum quantity
group: Runes
*/
#define VAR_AIR_RUNE_MIN_QUANTITY 200

/*@ define:input:runes
type: number
label: Water rune minimum quantity
group: Runes
*/
#define VAR_WATER_RUNE_MIN_QUANTITY 200

/*@ define:input:runes
type: number
label: Earth rune minimum quantity
group: Runes
*/
#define VAR_EARTH_RUNE_MIN_QUANTITY 200

/*@ define:input:runes
type: number
label: Fire rune minimum quantity
group: Runes
*/
#define VAR_FIRE_RUNE_MIN_QUANTITY 200

/*@ define:input:runes
type: number
label: Mind rune minimum quantity
group: Runes
*/
#define VAR_MIND_RUNE_MIN_QUANTITY 100000000

/*@ define:input:runes
type: number
label: Body rune minimum quantity
group: Runes
*/
#define VAR_BODY_RUNE_MIN_QUANTITY 100000000

/*@ define:input:runes
type: number
label: Cosmic rune minimum quantity
group: Runes
*/
#define VAR_COSMIC_RUNE_MIN_QUANTITY 20

/*@ define:input:runes
type: number
label: Chaos rune minimum quantity
group: Runes
*/
#define VAR_CHAOS_RUNE_MIN_QUANTITY 50

/*@ define:input:runes
type: number
label: Nature rune minimum quantity
group: Runes
*/
#define VAR_NATURE_RUNE_MIN_QUANTITY 20

/*@ define:input:runes
type: number
label: Law rune minimum quantity
group: Runes
*/
#define VAR_LAW_RUNE_MIN_QUANTITY 10

/*@ define:input:runes
type: number
label: Death rune minimum quantity
group: Runes
*/
#define VAR_DEATH_RUNE_MIN_QUANTITY 10

/*@ define:input:runes
type: number
label: Sunfire rune minimum quantity
group: Runes
*/
#define VAR_SUNFIRE_RUNE_MIN_QUANTITY 10

/*@ define:input:runes
type: number
label: Astral rune minimum quantity
group: Runes
*/
#define VAR_ASTRAL_RUNE_MIN_QUANTITY 20

/*@ define:input:runes
type: number
label: Blood rune minimum quantity
group: Runes
*/
#define VAR_BLOOD_RUNE_MIN_QUANTITY 10

/*@ define:input:runes
type: number
label: Soul rune minimum quantity
group: Runes
*/
#define VAR_SOUL_RUNE_MIN_QUANTITY 10

/*@ define:input:runes
type: number
label: Wrath rune minimum quantity
group: Runes
*/
#define VAR_WRATH_RUNE_MIN_QUANTITY 10

/*@ define:input:runes
type: number
label: Mist rune minimum quantity
group: Runes
*/
#define VAR_MIST_RUNE_MIN_QUANTITY 50

/*@ define:input:runes
type: number
label: Dust rune minimum quantity
group: Runes
*/
#define VAR_DUST_RUNE_MIN_QUANTITY 50

/*@ define:input:runes
type: number
label: Mud rune minimum quantity
group: Runes
*/
#define VAR_MUD_RUNE_MIN_QUANTITY 50

/*@ define:input:runes
type: number
label: Smoke rune minimum quantity
group: Runes
*/
#define VAR_SMOKE_RUNE_MIN_QUANTITY 50

/*@ define:input:runes
type: number
label: Steam rune minimum quantity
group: Runes
*/
#define VAR_STEAM_RUNE_MIN_QUANTITY 50

/*@ define:input:runes
type: number
label: Lava rune minimum quantity
group: Runes
*/
#define VAR_LAVA_RUNE_MIN_QUANTITY 50

apply (name:VAR_RUNES_HIDE) {
    hidden = true;
}

apply (name:"Air rune" && quantity:<VAR_AIR_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Mind rune" && quantity:<VAR_MIND_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Water rune" && quantity:<VAR_WATER_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Earth rune" && quantity:<VAR_EARTH_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Fire rune" && quantity:<VAR_FIRE_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Body rune" && quantity:<VAR_BODY_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Cosmic rune" && quantity:<VAR_COSMIC_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Chaos rune" && quantity:<VAR_CHAOS_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Nature rune" && quantity:<VAR_NATURE_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Law rune" && quantity:<VAR_LAW_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Death rune" && quantity:<VAR_DEATH_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Sunfire rune" && quantity:<VAR_SUNFIRE_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Astral rune" && quantity:<VAR_ASTRAL_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Blood rune" && quantity:<VAR_BLOOD_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Soul rune" && quantity:<VAR_SOUL_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Wrath rune" && quantity:<VAR_WRATH_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Mist rune" && quantity:<VAR_MIST_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Dust rune" && quantity:<VAR_DUST_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Mud rune" && quantity:<VAR_MUD_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Smoke rune" && quantity:<VAR_SMOKE_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Steam rune" && quantity:<VAR_STEAM_RUNE_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Lava rune" && quantity:<VAR_LAVA_RUNE_MIN_QUANTITY) {
    hidden = true;
}


apply (name:"Air rune" && quantity:>=VAR_AIR_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Mind rune" && quantity:>=VAR_MIND_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Water rune" && quantity:>=VAR_WATER_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Earth rune" && quantity:>=VAR_EARTH_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Fire rune" && quantity:>=VAR_FIRE_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Body rune" && quantity:>=VAR_BODY_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Cosmic rune" && quantity:>=VAR_COSMIC_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Chaos rune" && quantity:>=VAR_CHAOS_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Nature rune" && quantity:>=VAR_NATURE_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Law rune" && quantity:>=VAR_LAW_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Death rune" && quantity:>=VAR_DEATH_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Sunfire rune" && quantity:>=VAR_SUNFIRE_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Astral rune" && quantity:>=VAR_ASTRAL_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Blood rune" && quantity:>=VAR_BLOOD_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Soul rune" && quantity:>=VAR_SOUL_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Wrath rune" && quantity:>=VAR_WRATH_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Mist rune" && quantity:>=VAR_MIST_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Dust rune" && quantity:>=VAR_DUST_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Mud rune" && quantity:>=VAR_MUD_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Smoke rune" && quantity:>=VAR_SMOKE_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Steam rune" && quantity:>=VAR_STEAM_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}
apply (name:"Lava rune" && quantity:>=VAR_LAVA_RUNE_MIN_QUANTITY && VAR_RUNES_SHOW_ABOVE_MIN_QUANTITY) {
  hidden = false;
}


/*@ define:input:herbs
type: number
label: Hide herbs below this value
group: Herbs
*/
#define VAR_HERBS_MINIMUM_VALUE 0

apply (name:CONST_ALL_HERBS && value:<VAR_HERBS_MINIMUM_VALUE) {
    hidden = true;
}

/*@ define:input:herbs
type: enumlist
label: Herbs to force hidden
group: Herbs
enum: [
  {
    "value": "*Guam leaf",
    "label": "Guam leaf"
  },
  {
    "value": "*Marrentill",
    "label": "Marrentill"
  },
  {
    "value": "*Tarromin",
    "label": "Tarromin"
  },
  {
    "value": "*Harralander",
    "label": "Harralander"
  },
  {
    "value": "*Ranarr weed",
    "label": "Ranarr weed"
  },
  {
    "value": "*Toadflax",
    "label": "Toadflax"
  },
  {
    "value": "*Irit leaf",
    "label": "Irit leaf"
  },
  {
    "value": "*Avantoe",
    "label": "Avantoe"
  },
  {
    "value": "*Kwuarm",
    "label": "Kwuarm"
  },
  {
    "value": "*Huasca",
    "label": "Huasca"
  },
  {
    "value": "*Snapdragon",
    "label": "Snapdragon"
  },
  {
    "value": "*Cadantine",
    "label": "Cadantine"
  },
  {
    "value": "*Lantadyme",
    "label": "Lantadyme"
  },
  {
    "value": "*Dwarf weed",
    "label": "Dwarf weed"
  },
  {
    "value": "*Torstol",
    "label": "Torstol"
  }
]
*/
#define VAR_HERBS_HIDE ["*Guam leaf","*Marrentill"]

apply (name:VAR_HERBS_HIDE) {
    hidden = true;
}

/*@ define:input:herbs
type: enumlist
label: Herbs to force shown
group: Herbs
enum: [
  {
    "value": "*Guam leaf",
    "label": "Guam leaf"
  },
  {
    "value": "*Marrentill",
    "label": "Marrentill"
  },
  {
    "value": "*Tarromin",
    "label": "Tarromin"
  },
  {
    "value": "*Harralander",
    "label": "Harralander"
  },
  {
    "value": "*Ranarr weed",
    "label": "Ranarr weed"
  },
  {
    "value": "*Toadflax",
    "label": "Toadflax"
  },
  {
    "value": "*Irit leaf",
    "label": "Irit leaf"
  },
  {
    "value": "*Avantoe",
    "label": "Avantoe"
  },
  {
    "value": "*Kwuarm",
    "label": "Kwuarm"
  },
  {
    "value": "*Huasca",
    "label": "Huasca"
  },
  {
    "value": "*Snapdragon",
    "label": "Snapdragon"
  },
  {
    "value": "*Cadantine",
    "label": "Cadantine"
  },
  {
    "value": "*Lantadyme",
    "label": "Lantadyme"
  },
  {
    "value": "*Dwarf weed",
    "label": "Dwarf weed"
  },
  {
    "value": "*Torstol",
    "label": "Torstol"
  }
]
*/
#define VAR_HERBS_SHOW ["*Ranarr weed","*Huasca","*Snapdragon","*Torstol","*Tarromin","*Harralander","*Toadflax","*Irit leaf","*Avantoe","*Kwuarm","*Cadantine","*Lantadyme","*Dwarf weed"]

apply (name:VAR_HERBS_SHOW) {
    hidden = false;
}

/*@ define:input:herbs
type: number
label: Guam leaf minimum quantity
group: Herbs
*/
#define VAR_HERBS_GUAM_LEAF_MIN_QUANTITY 0

apply (name:"*guam leaf" && quantity:<VAR_HERBS_GUAM_LEAF_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Guam leaf noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_GUAM_LEAF_NOTED_MIN_QUANTITY 0

apply (name:"*guam leaf" && noted:true && quantity:<VAR_HERBS_GUAM_LEAF_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Marrentill minimum quantity
group: Herbs
*/
#define VAR_HERBS_MARRENTILL_MIN_QUANTITY 0

apply (name:"*marrentill" && quantity:<VAR_HERBS_MARRENTILL_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Marrentill noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_MARRENTILL_NOTED_MIN_QUANTITY 0

apply (name:"*marrentill" && noted:true && quantity:<VAR_HERBS_MARRENTILL_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Tarromin minimum quantity
group: Herbs
*/
#define VAR_HERBS_TARROMIN_MIN_QUANTITY 0

apply (name:"*tarromin" && quantity:<VAR_HERBS_TARROMIN_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Tarromin noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_TARROMIN_NOTED_MIN_QUANTITY 0

apply (name:"*tarromin" && noted:true && quantity:<VAR_HERBS_TARROMIN_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Harralander minimum quantity
group: Herbs
*/
#define VAR_HERBS_HARRALANDER_MIN_QUANTITY 0

apply (name:"*harralander" && quantity:<VAR_HERBS_HARRALANDER_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Harralander noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_HARRALANDER_NOTED_MIN_QUANTITY 0

apply (name:"*harralander" && noted:true && quantity:<VAR_HERBS_HARRALANDER_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Ranarr weed minimum quantity
group: Herbs
*/
#define VAR_HERBS_RANARR_WEED_MIN_QUANTITY 0

apply (name:"*ranarr weed" && quantity:<VAR_HERBS_RANARR_WEED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Ranarr weed noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_RANARR_WEED_NOTED_MIN_QUANTITY 0

apply (name:"*ranarr weed" && noted:true && quantity:<VAR_HERBS_RANARR_WEED_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Toadflax minimum quantity
group: Herbs
*/
#define VAR_HERBS_TOADFLAX_MIN_QUANTITY 0

apply (name:"*toadflax" && quantity:<VAR_HERBS_TOADFLAX_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Toadflax noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_TOADFLAX_NOTED_MIN_QUANTITY 0

apply (name:"*toadflax" && noted:true && quantity:<VAR_HERBS_TOADFLAX_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Irit leaf minimum quantity
group: Herbs
*/
#define VAR_HERBS_IRIT_LEAF_MIN_QUANTITY 0

apply (name:"*irit leaf" && quantity:<VAR_HERBS_IRIT_LEAF_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Irit leaf noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_IRIT_LEAF_NOTED_MIN_QUANTITY 0

apply (name:"*irit leaf" && noted:true && quantity:<VAR_HERBS_IRIT_LEAF_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Avantoe minimum quantity
group: Herbs
*/
#define VAR_HERBS_AVANTOE_MIN_QUANTITY 0

apply (name:"*avantoe" && quantity:<VAR_HERBS_AVANTOE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Avantoe noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_AVANTOE_NOTED_MIN_QUANTITY 0

apply (name:"*avantoe" && noted:true && quantity:<VAR_HERBS_AVANTOE_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Kwuarm minimum quantity
group: Herbs
*/
#define VAR_HERBS_KWUARM_MIN_QUANTITY 0

apply (name:"*kwuarm" && quantity:<VAR_HERBS_KWUARM_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Kwuarm noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_KWUARM_NOTED_MIN_QUANTITY 0

apply (name:"*kwuarm" && noted:true && quantity:<VAR_HERBS_KWUARM_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Huasca minimum quantity
group: Herbs
*/
#define VAR_HERBS_HUASCA_MIN_QUANTITY 0

apply (name:"*huasca" && quantity:<VAR_HERBS_HUASCA_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Huasca noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_HUASCA_NOTED_MIN_QUANTITY 0

apply (name:"*huasca" && noted:true && quantity:<VAR_HERBS_HUASCA_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Snapdragon minimum quantity
group: Herbs
*/
#define VAR_HERBS_SNAPDRAGON_MIN_QUANTITY 0

apply (name:"*snapdragon" && quantity:<VAR_HERBS_SNAPDRAGON_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Snapdragon noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_SNAPDRAGON_NOTED_MIN_QUANTITY 0

apply (name:"*snapdragon" && noted:true && quantity:<VAR_HERBS_SNAPDRAGON_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Cadantine minimum quantity
group: Herbs
*/
#define VAR_HERBS_CADANTINE_MIN_QUANTITY 0

apply (name:"*cadantine" && quantity:<VAR_HERBS_CADANTINE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Cadantine noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_CADANTINE_NOTED_MIN_QUANTITY 0

apply (name:"*cadantine" && noted:true && quantity:<VAR_HERBS_CADANTINE_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Lantadyme minimum quantity
group: Herbs
*/
#define VAR_HERBS_LANTADYME_MIN_QUANTITY 0

apply (name:"*lantadyme" && quantity:<VAR_HERBS_LANTADYME_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Lantadyme noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_LANTADYME_NOTED_MIN_QUANTITY 0

apply (name:"*lantadyme" && noted:true && quantity:<VAR_HERBS_LANTADYME_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Dwarf weed minimum quantity
group: Herbs
*/
#define VAR_HERBS_DWARF_WEED_MIN_QUANTITY 0

apply (name:"*dwarf weed" && quantity:<VAR_HERBS_DWARF_WEED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Dwarf weed noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_DWARF_WEED_NOTED_MIN_QUANTITY 0

apply (name:"*dwarf weed" && noted:true && quantity:<VAR_HERBS_DWARF_WEED_NOTED_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Torstol minimum quantity
group: Herbs
*/
#define VAR_HERBS_TORSTOL_MIN_QUANTITY 0

apply (name:"*torstol" && quantity:<VAR_HERBS_TORSTOL_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:herbs
type: number
label: Torstol noted minimum quantity
group: Herbs
*/
#define VAR_HERBS_TORSTOL_NOTED_MIN_QUANTITY 0

apply (name:"*torstol" && noted:true && quantity:<VAR_HERBS_TORSTOL_NOTED_MIN_QUANTITY) {
    hidden = true;
}


/*@ define:input:filtering
type: enumlist
label: Fishing equipment to force hidden
group: Fishing
enum: [
  "Small fishing net",
  "Big fishing net",
  "Drift net",
  "Fishing rod",
  "Fly fishing rod",
  "Oily fishing rod",
  "Harpoon",
  "Lobster pot",
  "Karambwan vessel"
]
*/
#define VAR_FISHING_EQUIPMENT_HIDE ["Small fishing net","Big fishing net","Fishing rod","Fly fishing rod","Harpoon","Lobster pot","Karambwan vessel","Oily fishing rod","Drift net"]

apply (name:VAR_FISHING_EQUIPMENT_HIDE) {
    hidden = true;
}

/*@ define:input:filtering
type: enumlist
label: Fishing bait to force hidden
group: Fishing
enum: [
  "Sandworms",
  "Fishing bait",
  "Feather",
  "Stripy feather",
  "Dark fishing bait",
  "King worm",
  "Fish chunks",
  "Raw karambwanji"
]
*/
#define VAR_FISHING_BAIT_HIDE ["Fishing bait","Feather","Stripy feather","King worm","Fish chunks"]

apply (name:VAR_FISHING_BAIT_HIDE) {
    hidden = true;
}

/*@ define:input:filtering
type: enumlist
label: Raw fish to force hidden
group: Fishing
enum: [
  "Raw shrimps",
  "Raw anchovies",
  "Raw guppy",
  "Raw cavefish",
  "Raw tetra",
  "Frog spawn",
  "Raw monkfish",
  "Minnow",
  "Raw mackerel",
  "Raw cod",
  "Raw bass",
  "Raw catfish",
  "Raw sardine",
  "Raw herring",
  "Raw pike",
  "Raw slimy eel",
  "Raw cave eel",
  "Raw anglerfish",
  "Sacred eel",
  "Raw trout",
  "Raw salmon",
  "Raw rainbow fish",
  "Raw lava eel",
  "Infernal eel",
  "Leaping trout",
  "Leaping salmon",
  "Leaping sturgeon",
  "Raw tuna",
  "Raw swordfish",
  "Raw shark",
  "Raw lobster",
  "Raw dark crab",
  "Bluegill",
  "Common tench",
  "Mottled eel",
  "Greater siren",
  "Raw karambwan"
]
*/
#define VAR_FISHING_RAW_FISH_HIDE ["Raw shrimps","Raw anchovies","Raw guppy","Raw cavefish","Raw tetra","Frog spawn","Raw mackerel","Raw cod","Raw bass","Raw sardine","Raw herring","Raw pike","Raw trout","Raw salmon","Raw rainbow fish","Leaping trout","Leaping salmon","Leaping sturgeon","Raw tuna","Bluegill","Common tench","Mottled eel","Greater siren"]

apply (name:VAR_FISHING_RAW_FISH_HIDE) {
    hidden = true;
}


/*@ define:input:filtering
type: enumlist
label: Ores to force hidden
group: Ores
enum: [
  "Copper ore",
  "Tin ore",
  "Iron ore",
  "Silver ore",
  "Coal",
  "Gold ore",
  "Mithril ore",
  "Adamantite ore",
  "Runite ore",
  "Daeyalt ore",
  "Blasted ore",
  "Blurite ore",
  "Lovakite ore"
]
*/
#define VAR_ORES_HIDE ["Copper ore","Tin ore"]

apply (name:VAR_ORES_HIDE) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Copper ore minimum quantity
group: Ores
*/
#define VAR_COPPER_ORE_MIN_QUANTITY 0

apply (name:"copper ore" && quantity:<VAR_COPPER_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Tin ore minimum quantity
group: Ores
*/
#define VAR_TIN_ORE_MIN_QUANTITY 0

apply (name:"tin ore" && quantity:<VAR_TIN_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Iron ore minimum quantity
group: Ores
*/
#define VAR_IRON_ORE_MIN_QUANTITY 0

apply (name:"iron ore" && quantity:<VAR_IRON_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Silver ore minimum quantity
group: Ores
*/
#define VAR_SILVER_ORE_MIN_QUANTITY 0

apply (name:"silver ore" && quantity:<VAR_SILVER_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Coal minimum quantity
group: Ores
*/
#define VAR_COAL_ORE_MIN_QUANTITY 0

apply (name:"coal" && quantity:<VAR_COAL_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Gold ore minimum quantity
group: Ores
*/
#define VAR_GOLD_ORE_MIN_QUANTITY 0

apply (name:"gold ore" && quantity:<VAR_GOLD_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Mithril ore minimum quantity
group: Ores
*/
#define VAR_MITHRIL_ORE_MIN_QUANTITY 0

apply (name:"mithril ore" && quantity:<VAR_MITHRIL_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Adamantite ore minimum quantity
group: Ores
*/
#define VAR_ADAMANTITE_ORE_MIN_QUANTITY 0

apply (name:"adamantite ore" && quantity:<VAR_ADAMANTITE_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Runite ore minimum quantity
group: Ores
*/
#define VAR_RUNITE_ORE_MIN_QUANTITY 0

apply (name:"runite ore" && quantity:<VAR_RUNITE_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Daeyalt ore minimum quantity
group: Ores
*/
#define VAR_DAEYALT_ORE_MIN_QUANTITY 0

apply (name:"daeyalt ore" && quantity:<VAR_DAEYALT_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Blasted ore minimum quantity
group: Ores
*/
#define VAR_BLASTED_ORE_MIN_QUANTITY 0

apply (name:"blasted ore" && quantity:<VAR_BLASTED_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Blurite ore minimum quantity
group: Ores
*/
#define VAR_BLURITE_ORE_MIN_QUANTITY 0

apply (name:"blurite ore" && quantity:<VAR_BLURITE_ORE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:filtering
type: number
label: Lovakite ore minimum quantity
group: Ores
*/
#define VAR_LOVAKITE_ORE_MIN_QUANTITY 0

apply (name:"lovakite ore" && quantity:<VAR_LOVAKITE_ORE_MIN_QUANTITY) {
    hidden = true;
}


/*@ define:input:bars
type: enumlist
label: Bars to force hidden
group: Bars
enum: [
  "Bronze bar",
  "Iron bar",
  "Silver bar",
  "Steel bar",
  "Gold bar",
  "Mithril bar",
  "Adamantite bar",
  "Runite bar",
  "Elemental metal",
  "Primed bar",
  "Primed mind bar",
  "Blurite bar",
  "Enchanted bar",
  "Lovakite bar",
  "'Perfect' gold bar"
]
*/
#define VAR_BARS_HIDE ["Bronze bar","Iron bar","Silver bar","Gold bar"]

apply (name:VAR_BARS_HIDE) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Bronze bar minimum quantity
group: Bars
*/
#define VAR_BRONZE_BAR_MIN_QUANTITY 0

apply (name:"Bronze bar" && quantity:<VAR_BRONZE_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Iron bar minimum quantity
group: Bars
*/
#define VAR_IRON_BAR_MIN_QUANTITY 0

apply (name:"Iron bar" && quantity:<VAR_IRON_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Silver bar minimum quantity
group: Bars
*/
#define VAR_SILVER_BAR_MIN_QUANTITY 0

apply (name:"Silver bar" && quantity:<VAR_SILVER_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Steel bar minimum quantity
group: Bars
*/
#define VAR_STEEL_BAR_MIN_QUANTITY 0

apply (name:"Steel bar" && quantity:<VAR_STEEL_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Gold bar minimum quantity
group: Bars
*/
#define VAR_GOLD_BAR_MIN_QUANTITY 0

apply (name:"Gold bar" && quantity:<VAR_GOLD_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Mithril bar minimum quantity
group: Bars
*/
#define VAR_MITHRIL_BAR_MIN_QUANTITY 0

apply (name:"Mithril bar" && quantity:<VAR_MITHRIL_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Adamantite bar minimum quantity
group: Bars
*/
#define VAR_ADAMANTITE_BAR_MIN_QUANTITY 0

apply (name:"Adamantite bar" && quantity:<VAR_ADAMANTITE_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Runite bar minimum quantity
group: Bars
*/
#define VAR_RUNITE_BAR_MIN_QUANTITY 0

apply (name:"Runite bar" && quantity:<VAR_RUNITE_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Elemental metal minimum quantity
group: Bars
*/
#define VAR_ELEMENTAL_METAL_MIN_QUANTITY 0

apply (name:"Elemental metal" && quantity:<VAR_ELEMENTAL_METAL_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Primed bar minimum quantity
group: Bars
*/
#define VAR_PRIMED_BAR_MIN_QUANTITY 0

apply (name:"Primed bar" && quantity:<VAR_PRIMED_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Primed mind bar minimum quantity
group: Bars
*/
#define VAR_PRIMED_MIND_BAR_MIN_QUANTITY 0

apply (name:"Primed mind bar" && quantity:<VAR_PRIMED_MIND_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Blurite bar minimum quantity
group: Bars
*/
#define VAR_BLURITE_BAR_MIN_QUANTITY 0

apply (name:"Blurite bar" && quantity:<VAR_BLURITE_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Enchanted bar minimum quantity
group: Bars
*/
#define VAR_ENCHANTED_BAR_MIN_QUANTITY 0

apply (name:"Enchanted bar" && quantity:<VAR_ENCHANTED_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: Lovakite bar minimum quantity
group: Bars
*/
#define VAR_LOVAKITE_BAR_MIN_QUANTITY 0

apply (name:"Lovakite bar" && quantity:<VAR_LOVAKITE_BAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:bars
type: number
label: "'Perfect' gold bar minimum quantity"
group: Bars
*/
#define VAR_PERFECT_GOLD_BAR_MIN_QUANTITY 0

apply (name:"'Perfect' gold bar" && quantity:<VAR_PERFECT_GOLD_BAR_MIN_QUANTITY) {
    hidden = true;
}


/*@ define:input:logs
type: enumlist
label: Logs to force hidden
group: Logs
enum: [
  "Logs",
  "Oak logs",
  "Willow logs",
  "Maple logs",
  "Yew logs",
  "Magic logs",
  "Redwood logs",
  "Teak logs",
  "Mahogany logs",
  "Achey tree logs",
  "Arctic pine logs",
  "Scrapey tree logs",
  "Juniper logs",
  "Bark",
  "Blisterwood logs"
]
*/
#define VAR_LOGS_HIDE []

/*@ define:input:logs
type: number
label: Logs minimum quantity
group: Logs
*/
#define VAR_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Oak logs minimum quantity
group: Logs
*/
#define VAR_OAK_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Willow logs minimum quantity
group: Logs
*/
#define VAR_WILLOW_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Maple logs minimum quantity
group: Logs
*/
#define VAR_MAPLE_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Yew logs minimum quantity
group: Logs
*/
#define VAR_YEW_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Magic logs minimum quantity
group: Logs
*/
#define VAR_MAGIC_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Redwood logs minimum quantity
group: Logs
*/
#define VAR_REDWOOD_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Teak logs minimum quantity
group: Logs
*/
#define VAR_TEAK_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Mahogany logs minimum quantity
group: Logs
*/
#define VAR_MAHOGANY_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Achey tree logs minimum quantity
group: Logs
*/
#define VAR_ACHEY_TREE_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Arctic pine logs minimum quantity
group: Logs
*/
#define VAR_ARCTIC_PINE_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Scrapey tree logs minimum quantity
group: Logs
*/
#define VAR_SCRAPEY_TREE_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Juniper logs minimum quantity
group: Logs
*/
#define VAR_JUNIPER_LOGS_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Bark minimum quantity
group: Logs
*/
#define VAR_BARK_MIN_QUANTITY 0

/*@ define:input:logs
type: number
label: Blisterwood logs minimum quantity
group: Logs
*/
#define VAR_BLISTERWOOD_LOGS_MIN_QUANTITY 0

apply (name:VAR_LOGS_HIDE) {
    hidden = true;
}

apply (name:"Logs" && quantity:<VAR_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Oak logs" && quantity:<VAR_OAK_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Willow logs" && quantity:<VAR_WILLOW_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Maple logs" && quantity:<VAR_MAPLE_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Yew logs" && quantity:<VAR_YEW_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Magic logs" && quantity:<VAR_MAGIC_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Redwood logs" && quantity:<VAR_REDWOOD_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Teak logs" && quantity:<VAR_TEAK_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Mahogany logs" && quantity:<VAR_MAHOGANY_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Achey tree logs" && quantity:<VAR_ACHEY_TREE_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Arctic pine logs" && quantity:<VAR_ARCTIC_PINE_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Scrapey tree logs" && quantity:<VAR_SCRAPEY_TREE_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Juniper logs" && quantity:<VAR_JUNIPER_LOGS_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Bark" && quantity:<VAR_BARK_MIN_QUANTITY) {
    hidden = true;
}

apply (name:"Blisterwood logs" && quantity:<VAR_BLISTERWOOD_LOGS_MIN_QUANTITY) {
    hidden = true;
}


/*@ define:input:farming_seeds
type: number
label: Hide seeds below this value
group: Farming seeds
*/
#define VAR_FARMING_SEEDS_MINIMUM_VALUE 0

apply ((name:CONST_FARMING_SEEDS_ALLOTMENT_LIST || name:CONST_FARMING_SEEDS_FLOWER_LIST || name:CONST_FARMING_SEEDS_HERB_LIST || name:CONST_FARMING_SEEDS_HOPS_LIST || name:CONST_FARMING_SEEDS_BUSH_LIST || name:CONST_FARMING_SEEDS_TREE_LIST || name:CONST_FARMING_SEEDS_FRUIT_TREE_LIST || name:CONST_FARMING_SEEDS_SPECIAL_TREE_LIST || name:CONST_FARMING_SEEDS_SPECIAL_LIST || name:CONST_FARMING_SEEDS_ANIMA_LIST) && value:<VAR_FARMING_SEEDS_MINIMUM_VALUE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Allotment seeds to force hidden
group: Farming seeds
enum: [
  "Potato seed",
  "Onion seed",
  "Cabbage seed",
  "Tomato seed",
  "Sweetcorn seed",
  "Strawberry seed",
  "Watermelon seed",
  "Snape grass seed"
]
*/
#define VAR_FARMING_SEEDS_ALLOTMENT_HIDE ["Potato seed","Onion seed","Cabbage seed","Tomato seed","Sweetcorn seed"]

apply (name:VAR_FARMING_SEEDS_ALLOTMENT_HIDE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Flower seeds to force hidden
group: Farming seeds
enum: [
  "Marigold seed",
  "Rosemary seed",
  "Nasturtium seed",
  "Woad seed",
  "Limpwurt seed",
  "White lily seed"
]
*/
#define VAR_FARMING_SEEDS_FLOWER_HIDE ["Marigold seed","Rosemary seed","Nasturtium seed","Woad seed"]

apply (name:VAR_FARMING_SEEDS_FLOWER_HIDE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Herb seeds to force hidden
group: Farming seeds
enum: [
  "Guam seed",
  "Marrentill seed",
  "Tarromin seed",
  "Harralander seed",
  "Ranarr seed",
  "Toadflax seed",
  "Irit seed",
  "Avantoe seed",
  "Kwuarm seed",
  "Snapdragon seed",
  "Huasca seed",
  "Cadantine seed",
  "Lantadyme seed",
  "Dwarf weed seed",
  "Torstol seed"
]
*/
#define VAR_FARMING_SEEDS_HERB_HIDE ["Guam seed","Marrentill seed","Tarromin seed","Harralander seed","Toadflax seed"]

apply (name:VAR_FARMING_SEEDS_HERB_HIDE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Hops seeds to force hidden
group: Farming seeds
enum: [
  "Barley seed",
  "Hammerstone seed",
  "Asgarnian seed",
  "Jute seed",
  "Yanillian seed",
  "Krandorian seed",
  "Wildblood seed"
]
*/
#define VAR_FARMING_SEEDS_HOPS_HIDE ["Barley seed","Hammerstone seed","Asgarnian seed","Jute seed","Yanillian seed","Krandorian seed","Wildblood seed"]

apply (name:VAR_FARMING_SEEDS_HOPS_HIDE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Bush seeds to force hidden
group: Farming seeds
enum: [
  "Redberry seed",
  "Cadavaberry seed",
  "Dwellberry seed",
  "Jangerberry seed",
  "Whiteberry seed",
  "Poison ivy seed"
]
*/
#define VAR_FARMING_SEEDS_BUSH_HIDE ["Redberry seed","Cadavaberry seed","Dwellberry seed","Jangerberry seed","Poison ivy seed"]

apply (name:VAR_FARMING_SEEDS_BUSH_HIDE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Tree seeds to force hidden
group: Farming seeds
enum: [
  "Acorn",
  "Willow seed",
  "Maple seed",
  "Yew seed",
  "Magic seed"
]
*/
#define VAR_FARMING_SEEDS_TREE_HIDE ["Acorn","Willow seed"]

apply (name:VAR_FARMING_SEEDS_TREE_HIDE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Fruit tree seeds to force hidden
group: Farming seeds
enum: [
  "Apple seed",
  "Banana seed",
  "Orange seed",
  "Curry seed",
  "Pineapple seed",
  "Papaya seed",
  "Palm tree seed",
  "Dragonfruit seed"
]
*/
#define VAR_FARMING_SEEDS_FRUIT_TREE_HIDE ["Apple seed","Banana seed","Orange seed","Curry seed","Pineapple seed"]

apply (name:VAR_FARMING_SEEDS_FRUIT_TREE_HIDE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Fruit tree seeds to force hidden
group: Farming seeds
enum: [
  "Teak seed",
  "Mahogany seed",
  "Calquat tree seed",
  "Crystal acorn",
  "Spirit seed",
  "Celastrus seed",
  "Redwood tree seed"
]
*/
#define VAR_FARMING_SEEDS_SPECIAL_TREE_HIDE []

apply (name:VAR_FARMING_SEEDS_SPECIAL_TREE_HIDE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Special seeds to force hidden
group: Farming seeds
enum: [
  "Seaweed spore",
  "Grape seed",
  "Mushroom spore",
  "Belladonna seed",
  "Hespori seed",
  "Cactus seed",
  "Potato cactus seed"
]
*/
#define VAR_FARMING_SEEDS_SPECIAL_HIDE ["Mushroom spore","Belladonna seed","Cactus seed","Potato cactus seed"]

apply (name:VAR_FARMING_SEEDS_SPECIAL_HIDE) {
    hidden = true;
}

/*@ define:input:farming_seeds
type: enumlist
label: Anima seeds to force hidden
group: Farming seeds
enum: [
  "Kronos seed",
  "Iasor seed",
  "Attas seed"
]
*/
#define VAR_FARMING_SEEDS_ANIMA_HIDE []

apply (name:VAR_FARMING_SEEDS_ANIMA_HIDE) {
    hidden = true;
}


/*@ define:input:farming_seeds
type: enumlist
label: Allotment seeds to force shown
group: Farming seeds
enum: [
  "Potato seed",
  "Onion seed",
  "Cabbage seed",
  "Tomato seed",
  "Sweetcorn seed",
  "Strawberry seed",
  "Watermelon seed",
  "Snape grass seed"
]
*/
#define VAR_FARMING_SEEDS_ALLOTMENT_SHOW ["Snape grass seed","Watermelon seed"]

apply (name:VAR_FARMING_SEEDS_ALLOTMENT_SHOW) {
    hidden = false;
}

/*@ define:input:farming_seeds
type: enumlist
label: Flower seeds to force shown
group: Farming seeds
enum: [
  "Marigold seed",
  "Rosemary seed",
  "Nasturtium seed",
  "Woad seed",
  "Limpwurt seed",
  "White lily seed"
]
*/
#define VAR_FARMING_SEEDS_FLOWER_SHOW ["White lily seed","Limpwurt seed"]

apply (name:VAR_FARMING_SEEDS_FLOWER_SHOW) {
    hidden = false;
}

/*@ define:input:farming_seeds
type: enumlist
label: Herb seeds to force shown
group: Farming seeds
enum: [
  "Guam seed",
  "Marrentill seed",
  "Tarromin seed",
  "Harralander seed",
  "Ranarr seed",
  "Toadflax seed",
  "Irit seed",
  "Avantoe seed",
  "Kwuarm seed",
  "Snapdragon seed",
  "Huasca seed",
  "Cadantine seed",
  "Lantadyme seed",
  "Dwarf weed seed",
  "Torstol seed"
]
*/
#define VAR_FARMING_SEEDS_HERB_SHOW ["Ranarr seed","Irit seed","Kwuarm seed","Snapdragon seed","Huasca seed","Cadantine seed","Torstol seed"]

apply (name:VAR_FARMING_SEEDS_HERB_SHOW) {
    hidden = false;
}

/*@ define:input:farming_seeds
type: enumlist
label: Hops seeds to force shown
group: Farming seeds
enum: [
  "Barley seed",
  "Hammerstone seed",
  "Asgarnian seed",
  "Jute seed",
  "Yanillian seed",
  "Krandorian seed",
  "Wildblood seed"
]
*/
#define VAR_FARMING_SEEDS_HOPS_SHOW []

apply (name:VAR_FARMING_SEEDS_HOPS_SHOW) {
    hidden = false;
}

/*@ define:input:farming_seeds
type: enumlist
label: Bush seeds to force shown
group: Farming seeds
enum: [
  "Redberry seed",
  "Cadavaberry seed",
  "Dwellberry seed",
  "Jangerberry seed",
  "Whiteberry seed",
  "Poison ivy seed"
]
*/
#define VAR_FARMING_SEEDS_BUSH_SHOW []

apply (name:VAR_FARMING_SEEDS_BUSH_SHOW) {
    hidden = false;
}

/*@ define:input:farming_seeds
type: enumlist
label: Tree seeds to force shown
group: Farming seeds
enum: [
  "Acorn",
  "Willow seed",
  "Maple seed",
  "Yew seed",
  "Magic seed"
]
*/
#define VAR_FARMING_SEEDS_TREE_SHOW ["Magic seed","Yew seed"]

apply (name:VAR_FARMING_SEEDS_TREE_SHOW) {
    hidden = false;
}

/*@ define:input:farming_seeds
type: enumlist
label: Fruit tree seeds to force shown
group: Farming seeds
enum: [
  "Apple seed",
  "Banana seed",
  "Orange seed",
  "Curry seed",
  "Pineapple seed",
  "Papaya seed",
  "Palm tree seed",
  "Dragonfruit seed"
]
*/
#define VAR_FARMING_SEEDS_FRUIT_TREE_SHOW ["Dragonfruit seed","Palm tree seed","Papaya seed"]

apply (name:VAR_FARMING_SEEDS_FRUIT_TREE_SHOW) {
    hidden = false;
}

/*@ define:input:farming_seeds
type: enumlist
label: Fruit tree seeds to force shown
group: Farming seeds
enum: [
  "Teak seed",
  "Mahogany seed",
  "Calquat tree seed",
  "Crystal acorn",
  "Spirit seed",
  "Celastrus seed",
  "Redwood tree seed"
]
*/
#define VAR_FARMING_SEEDS_SPECIAL_TREE_SHOW ["Redwood tree seed","Celastrus seed","Spirit seed","Crystal acorn","Calquat tree seed","Mahogany seed","Teak seed"]

apply (name:VAR_FARMING_SEEDS_SPECIAL_TREE_SHOW) {
    hidden = false;
}

/*@ define:input:farming_seeds
type: enumlist
label: Special seeds to force shown
group: Farming seeds
enum: [
  "Seaweed spore",
  "Grape seed",
  "Mushroom spore",
  "Belladonna seed",
  "Hespori seed",
  "Cactus seed",
  "Potato cactus seed"
]
*/
#define VAR_FARMING_SEEDS_SPECIAL_SHOW ["Seaweed spore"]

apply (name:VAR_FARMING_SEEDS_SPECIAL_SHOW) {
    hidden = false;
}

/*@ define:input:farming_seeds
type: enumlist
label: Anima seeds to force shown
group: Farming seeds
enum: [
  "Kronos seed",
  "Iasor seed",
  "Attas seed"
]
*/
#define VAR_FARMING_SEEDS_ANIMA_SHOW []

apply (name:VAR_FARMING_SEEDS_ANIMA_SHOW) {
    hidden = false;
}


/*@ define:input:herblore_secondaries
type: enumlist
label: Secondaries to force hidden
group: Herblore secondaries
enum: [
  "Eye of newt",
  "Unicorn horn dust",
  "Limpwurt root",
  "Volcanic ash",
  "Red spiders' eggs",
  "Chocolate dust",
  "White berries",
  "Toad's legs",
  "Goat horn dust",
  "Snape grass",
  "Mort myre fungus",
  "Kebbit teeth dust",
  "Dragon scale dust",
  "Nail beast nails",
  "Yew roots",
  "Wine of zamorak",
  "Potato cactus",
  "Jangerberries",
  "Magic roots",
  "Crushed nest",
  "Poison ivy berries",
  "Nihil dust",
  "Lily of the sands",
  "Aldarium",
  "Araxyte venom sack"
]
*/
#define VAR_SECONDARIES_HIDE ["Eye of newt","Volcanic ash","Chocolate dust"]

/*@ define:input:herblore_secondaries
type: enumlist
label: Secondaries to force shown
group: Herblore secondaries
enum: [
  "Eye of newt",
  "Unicorn horn dust",
  "Limpwurt root",
  "Volcanic ash",
  "Red spiders' eggs",
  "Chocolate dust",
  "White berries",
  "Toad's legs",
  "Goat horn dust",
  "Snape grass",
  "Mort myre fungus",
  "Kebbit teeth dust",
  "Dragon scale dust",
  "Nail beast nails",
  "Yew roots",
  "Wine of zamorak",
  "Potato cactus",
  "Jangerberries",
  "Magic roots",
  "Crushed nest",
  "Poison ivy berries",
  "Nihil dust",
  "Lily of the sands",
  "Aldarium",
  "Araxyte venom sack"
]
*/
#define VAR_SECONDARIES_SHOW ["Crushed nest","Nihil dust","Lily of the sands","Aldarium","Araxyte venom sack"]

/*@ define:input:herblore_secondaries
type: number
label: Minimum value to display secondaries at
group: Herblore secondaries
*/
#define VAR_SECONDARIES_MINIMUM_VALUE 0

apply (name:CONST_SECONDARIES_LIST && value:<VAR_SECONDARIES_MINIMUM_VALUE) {
    hidden = true;
}

apply (name:VAR_SECONDARIES_HIDE) {
    hidden = true;
}

apply (name:VAR_SECONDARIES_SHOW) {
    hidden = false;
}


/*@ define:input:currency
type: stringlist
label: Currency to force hidden
group: Currency
*/
#define VAR_CURRENCY_HIDE ["Archery ticket"]

apply (name:VAR_CURRENCY_HIDE) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Abyssal pearls minimum quantity
group: Currency
*/
#define VAR_ABYSSAL_PEARLS_MIN_QUANTITY 0

apply (name:"Archery ticket" && quantity:<VAR_ARCHERY_TICKET_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Agility arena ticket minimum quantity
group: Currency
*/
#define VAR_AGILITY_ARENA_TICKET_MIN_QUANTITY 0

apply (name:"Coins" && quantity:<VAR_COINS_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Anima-infused bark minimum quantity
group: Currency
*/
#define VAR_ANIMA_INFUSED_BARK_MIN_QUANTITY 0

apply (name:"Mole claw" && quantity:<VAR_MOLE_CLAW_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Archery ticket minimum quantity
group: Currency
*/
#define VAR_ARCHERY_TICKET_MIN_QUANTITY 0

apply (name:"Mole skin" && quantity:<VAR_MOLE_SKIN_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Barronite shards minimum quantity
group: Currency
*/
#define VAR_BARRONITE_SHARDS_MIN_QUANTITY 0

apply (name:"Numulite" && quantity:<VAR_NUMULITE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Blood money minimum quantity
group: Currency
*/
#define VAR_BLOOD_MONEY_MIN_QUANTITY 0

apply (name:"Platinum token" && quantity:<VAR_PLATINUM_TOKEN_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Brimhaven voucher minimum quantity
group: Currency
*/
#define VAR_BRIMHAVEN_VOUCHER_MIN_QUANTITY 0

apply (name:"Trading sticks" && quantity:<VAR_TRADING_STICKS_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Castle wars ticket minimum quantity
group: Currency
*/
#define VAR_CASTLE_WARS_TICKET_MIN_QUANTITY 0

apply (name:"Shantay pass" && quantity:<VAR_SHANTAY_PASS_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Coins minimum quantity
group: Currency
*/
#define VAR_COINS_MIN_QUANTITY 0

apply (name:"Ship ticket" && quantity:<VAR_SHIP_TICKET_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Ecto-token minimum quantity
group: Currency
*/
#define VAR_ECTO_TOKEN_MIN_QUANTITY 0

apply (name:"Abyssal pearls" && quantity:<VAR_ABYSSAL_PEARLS_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Frog token minimum quantity
group: Currency
*/
#define VAR_FROG_TOKEN_MIN_QUANTITY 0

apply (name:"Anima-infused bark" && quantity:<VAR_ANIMA_INFUSED_BARK_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Glistening tear minimum quantity
group: Currency
*/
#define VAR_GLISTENING_TEAR_MIN_QUANTITY 0

apply (name:"Agility arena ticket" && quantity:<VAR_AGILITY_ARENA_TICKET_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Golden nugget minimum quantity
group: Currency
*/
#define VAR_GOLDEN_NUGGET_MIN_QUANTITY 0

apply (name:"Barronite shards" && quantity:<VAR_BARRONITE_SHARDS_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Hallowed mark minimum quantity
group: Currency
*/
#define VAR_HALLOWED_MARK_MIN_QUANTITY 0

apply (name:"Blood money" && quantity:<VAR_BLOOD_MONEY_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Intelligence minimum quantity
group: Currency
*/
#define VAR_INTELLIGENCE_MIN_QUANTITY 0

apply (name:"Brimhaven voucher" && quantity:<VAR_BRIMHAVEN_VOUCHER_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Mark of grace minimum quantity
group: Currency
*/
#define VAR_MARK_OF_GRACE_MIN_QUANTITY 0

apply (name:"Castle wars ticket" && quantity:<VAR_CASTLE_WARS_TICKET_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Mermaid's tear minimum quantity
group: Currency
*/
#define VAR_MERMAIDS_TEAR_MIN_QUANTITY 0

apply (name:"Ecto-token" && quantity:<VAR_ECTO_TOKEN_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Minnow minimum quantity
group: Currency
*/
#define VAR_MINNOW_MIN_QUANTITY 0

apply (name:"Frog token" && quantity:<VAR_FROG_TOKEN_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Molch pearl minimum quantity
group: Currency
*/
#define VAR_MOLCH_PEARL_MIN_QUANTITY 0

apply (name:"Golden nugget" && quantity:<VAR_GOLDEN_NUGGET_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Mole claw minimum quantity
group: Currency
*/
#define VAR_MOLE_CLAW_MIN_QUANTITY 0

apply (name:"Glistening tear" && quantity:<VAR_GLISTENING_TEAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Mole skin minimum quantity
group: Currency
*/
#define VAR_MOLE_SKIN_MIN_QUANTITY 0

apply (name:"Hallowed mark" && quantity:<VAR_HALLOWED_MARK_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Nuggets minimum quantity
group: Currency
*/
#define VAR_NUGGETS_MIN_QUANTITY 0

apply (name:"Intelligence" && quantity:<VAR_INTELLIGENCE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Numulite minimum quantity
group: Currency
*/
#define VAR_NUMULITE_MIN_QUANTITY 0

apply (name:"Mark of grace" && quantity:<VAR_MARK_OF_GRACE_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Paramaya ticket minimum quantity
group: Currency
*/
#define VAR_PARAMAYA_TICKET_MIN_QUANTITY 0

apply (name:"Mermaid's tear" && quantity:<VAR_MERMAIDS_TEAR_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Platinum token minimum quantity
group: Currency
*/
#define VAR_PLATINUM_TOKEN_MIN_QUANTITY 0

apply (name:"Minnow" && quantity:<VAR_MINNOW_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Rare creature parts minimum quantity
group: Currency
*/
#define VAR_RARE_CREATURE_PARTS_MIN_QUANTITY 0

apply (name:"Molch pearl" && quantity:<VAR_MOLCH_PEARL_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Reward token credits minimum quantity
group: Currency
*/
#define VAR_REWARD_TOKEN_CREDITS_MIN_QUANTITY 0

apply (name:"Nuggets" && quantity:<VAR_NUGGETS_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Shantay pass minimum quantity
group: Currency
*/
#define VAR_SHANTAY_PASS_MIN_QUANTITY 0

apply (name:"Paramaya ticket" && quantity:<VAR_PARAMAYA_TICKET_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Ship ticket minimum quantity
group: Currency
*/
#define VAR_SHIP_TICKET_MIN_QUANTITY 0

apply (name:"Rare creature parts" && quantity:<VAR_RARE_CREATURE_PARTS_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Stardust minimum quantity
group: Currency
*/
#define VAR_STARDUST_MIN_QUANTITY 0

apply (name:"Reward token credits" && quantity:<VAR_REWARD_TOKEN_CREDITS_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Termites minimum quantity
group: Currency
*/
#define VAR_TERMITES_MIN_QUANTITY 0

apply (name:"Stardust" && quantity:<VAR_STARDUST_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Tokkul minimum quantity
group: Currency
*/
#define VAR_TOKKUL_MIN_QUANTITY 0

apply (name:"Tokkul" && quantity:<VAR_TOKKUL_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Trading sticks minimum quantity
group: Currency
*/
#define VAR_TRADING_STICKS_MIN_QUANTITY 0

apply (name:"Termites" && quantity:<VAR_TERMITES_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Unidentified minerals minimum quantity
group: Currency
*/
#define VAR_UNIDENTIFIED_MINERALS_MIN_QUANTITY 0

apply (name:"Unidentified minerals" && quantity:<VAR_UNIDENTIFIED_MINERALS_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:currency
type: number
label: Warrior guild token minimum quantity
group: Currency
*/
#define VAR_WARRIOR_GUILD_TOKEN_MIN_QUANTITY 0

apply (name:"Warrior guild token" && quantity:<VAR_WARRIOR_GUILD_TOKEN_MIN_QUANTITY) {
    hidden = true;
}


/*@ define:input:metal_equipment
type: enumlist
label: Metal equipment to force hidden
group: Metal Equipment
enum: [
  "Bronze*",
  "Iron*",
  "Steel*",
  "Black*",
  "Mithril*",
  "Adamant*",
  "Rune*",
  "Dragon*"
]
*/
#define VAR_METAL_EQUIPMENT_TIERS_HIDE ["Bronze*","Iron*","Steel*","Black*","Mithril*"]

apply (name:CONST_BRONZE_ONE_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_BRONZE_TWO_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_BRONZE_RANGED_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_BRONZE_AMMO && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_BRONZE_ARMOUR && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}

apply (name:CONST_BRONZE_OTHER && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_IRON_ONE_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_IRON_TWO_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_IRON_RANGED_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_IRON_AMMO && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_IRON_ARMOUR && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}

apply (name:CONST_IRON_OTHER && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_STEEL_ONE_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_STEEL_TWO_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_STEEL_RANGED_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_STEEL_AMMO && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_STEEL_ARMOUR && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_STEEL_OTHER && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}

apply (name:CONST_BLACK_ONE_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_BLACK_TWO_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_BLACK_RANGED_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_BLACK_AMMO && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_BLACK_ARMOUR && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_BLACK_OTHER && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}

apply (name:CONST_MITHRIL_ONE_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_MITHRIL_TWO_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_MITHRIL_RANGED_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_MITHRIL_AMMO && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_MITHRIL_ARMOUR && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_MITHRIL_OTHER && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}

apply (name:CONST_ADAMANT_ONE_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_ADAMANT_TWO_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_ADAMANT_RANGED_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_ADAMANT_AMMO && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_ADAMANT_ARMOUR && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_ADAMANT_OTHER && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}

apply (name:CONST_RUNE_ONE_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_RUNE_TWO_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_RUNE_RANGED_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_RUNE_AMMO && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_RUNE_ARMOUR && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_DRAGON_ONE_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_DRAGON_TWO_HANDED_MELEE_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_DRAGON_RANGED_WEAPONS && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}
apply (name:CONST_DRAGON_AMMO && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}

apply (name:CONST_DRAGON_ARMOUR && name:VAR_METAL_EQUIPMENT_TIERS_HIDE) {
    hidden = true;
}


/*@ define:module:area_based_filtering
---
name: Area-Based Filtering
subtitle: Sifting through the junk (in specific areas)
description: |
  This module provides filtering for items based on the area they are in.
*/




/*@ define:input:chambers_of_xeric
type: enumlist
label: Fish to force hidden
group: Chambers of Xeric
enum: [
  {
    "value": "Pysk fish (0)",
    "label": "Pysk fish"
  },
  {
    "value": "Suphi fish (1)",
    "label": "Suphi fish"
  },
  {
    "value": "Leckish fish (2)",
    "label": "Leckish fish"
  },
  {
    "value": "Brawk fish (3)",
    "label": "Brawk fish"
  },
  {
    "value": "Mycil fish (4)",
    "label": "Mycil fish"
  },
  {
    "value": "Roqed fish (5)",
    "label": "Roqed fish"
  },
  {
    "value": "Kyren fish (6)",
    "label": "Kyren fish"
  }
]
*/
#define VAR_COX_FISH_HIDE ["Pysk fish (0)","Suphi fish (1)","Leckish fish (2)","Brawk fish (3)","Mycil fish (4)","Roqed fish (5)","Kyren fish (6)"]

/*@ define:input:chambers_of_xeric
type: enumlist
label: Bats to force hidden
group: Chambers of Xeric
enum: [
  {
    "value": "Guanic bat (0)",
    "label": "Guanic bat (0)"
  },
  {
    "value": "Prael bat (1)",
    "label": "Prael bat (1)"
  },
  {
    "value": "Giral bat (2)",
    "label": "Giral bat (2)"
  },
  {
    "value": "Phluxia bat (3)",
    "label": "Phluxia bat (3)"
  },
  {
    "value": "Kryket bat (4)",
    "label": "Kryket bat (4)"
  },
  {
    "value": "Murng bat (5)",
    "label": "Murng bat (5)"
  }
]
*/
#define VAR_COX_BATS_HIDE ["Guanic bat (0)","Prael bat (1)","Giral bat (2)","Phluxia bat (3)","Kryket bat (4)","Murng bat (5)"]

/*@ define:input:chambers_of_xeric
type: enumlist
label: Seeds to force hidden
group: Chambers of Xeric
enum: [
  "Buchu seed",
  "Noxifer seed"
]
*/
#define VAR_COX_SEEDS_HIDE []

/*@ define:input:chambers_of_xeric
type: enumlist
label: Misc drops to force hidden
group: Chambers of Xeric
enum: [
  "Bones",
  "Big bones",
  "Lockpick",
  "Fishing rod",
  "Iron pickaxe",
  "Iron axe",
  "Butterfly net",
  "Hammer",
  "Tinderbox",
  "Cave worms",
  "Cavern grubs",
  "Empty gourd vial",
  "Water-filled gourd vial",
  "Spade",
  "Seed dipper",
  "Rake"
]
*/
#define VAR_COX_MISC_DROPS_HIDE ["Bones","Big bones","Fishing rod","Iron pickaxe","Iron axe","Butterfly net","Hammer","Tinderbox","Cave worms"]

apply (area:CONST_COX_AREA && name:VAR_COX_FISH_HIDE) {
    hidden = true;
}
apply (area:CONST_COX_AREA && name:VAR_COX_BATS_HIDE) {
    hidden = true;
}
apply (area:CONST_COX_AREA && name:VAR_COX_SEEDS_HIDE) {
    hidden = true;
}
apply (area:CONST_COX_AREA && name:VAR_COX_MISC_DROPS_HIDE) {
    hidden = true;
}


/*@ define:input:area_based_filtering
type: enumlist
label: Supplies to force shown
group: Tombs of Amascut
enum: [
  {
    "value": "Honey locust (*",
    "label": "Honey locust"
  },
  {
    "value": "Ambrosia (*",
    "label": "Ambrosia"
  },
  {
    "value": "Blessed crystal scarab (*",
    "label": "Blessed crystal scarab"
  },
  {
    "value": "Liquid adrenaline (*",
    "label": "Liquid adrenaline"
  },
  {
    "value": "Nectar (*",
    "label": "Nectar"
  },
  {
    "value": "Silk dressing (*",
    "label": "Silk dressing"
  },
  {
    "value": "Smelling salts (*",
    "label": "Smelling salts"
  },
  {
    "value": "Tears of Elidinis (*",
    "label": "Tears of Elidinis"
  }
]
*/
#define VAR_TOA_SUPPLIES_SHOW []

/*@ define:input:area_based_filtering
type: enumlist
label: Supplies to force hidden
group: Tombs of Amascut
enum: [
  {
    "value": "Honey locust (*",
    "label": "Honey locust"
  },
  {
    "value": "Ambrosia (*",
    "label": "Ambrosia"
  },
  {
    "value": "Blessed crystal scarab (*",
    "label": "Blessed crystal scarab"
  },
  {
    "value": "Liquid adrenaline (*",
    "label": "Liquid adrenaline"
  },
  {
    "value": "Nectar (*",
    "label": "Nectar"
  },
  {
    "value": "Silk dressing (*",
    "label": "Silk dressing"
  },
  {
    "value": "Smelling salts (*",
    "label": "Smelling salts"
  },
  {
    "value": "Tears of Elidinis (*",
    "label": "Tears of Elidinis"
  }
]
*/
#define VAR_TOA_SUPPLIES_HIDE ["Honey locust (*","Ambrosia (*","Blessed crystal scarab (*","Liquid adrenaline (*","Nectar (*","Silk dressing (*","Smelling salts (*","Tears of Elidinis (*"]

/*@ define:input:area_based_filtering
type: enumlist
label: Room items to force shown
group: Tombs of Amascut
enum: [
  "Neutralising potion",
  "Water container"
]
*/
#define VAR_TOA_ROOM_ITEMS_SHOW ["Water container"]

/*@ define:input:area_based_filtering
type: enumlist
label: Room items to force hidden
group: Tombs of Amascut
enum: [
  "Neutralising potion",
  "Water container"
]
*/
#define VAR_TOA_ROOM_ITEMS_HIDE ["Neutralising potion"]

/*@ define:input:area_based_filtering
type: enumlist
label: MVP items to force shown
group: Tombs of Amascut
enum: [
  "Big banana",
  "Eldritch ashes",
  "Fang",
  "Scarab dung"
]
*/
#define VAR_TOA_MVP_ITEMS_SHOW ["Big banana","Eldritch ashes","Fang","Scarab dung"]

/*@ define:input:area_based_filtering
type: enumlist
label: MVP items to force hidden
group: Tombs of Amascut
enum: [
  "Big banana",
  "Eldritch ashes",
  "Fang",
  "Scarab dung"
]
*/
#define VAR_TOA_MVP_ITEMS_HIDE []

/*@ define:input:area_based_filtering
type: enumlist
label: Books to force shown
group: Tombs of Amascut
enum: [
  "Akila's journal",
  "Apmeken's Capture",
  "Crondis' Capture",
  "Het's Capture",
  "Scabaras' Capture",
  "The Wardens",
  "The Jackal's Torch"
]
*/
#define VAR_TOA_BOOKS_SHOW []

/*@ define:input:area_based_filtering
type: enumlist
label: Books to force hidden
group: Tombs of Amascut
enum: [
  "Akila's journal",
  "Apmeken's Capture",
  "Crondis' Capture",
  "Het's Capture",
  "Scabaras' Capture",
  "The Wardens",
  "The Jackal's Torch"
]
*/
#define VAR_TOA_BOOKS_HIDE ["Akila's journal","Apmeken's Capture","Crondis' Capture","Het's Capture","Scabaras' Capture","The Wardens","The Jackal's Torch"]

apply (area:CONST_TOA_AREA && name:VAR_TOA_SUPPLIES_HIDE) {
    hidden = true;
}
apply (area:CONST_TOA_AREA && name:VAR_TOA_SUPPLIES_SHOW) {
    hidden = false;
}
apply (area:CONST_TOA_AREA && name:VAR_TOA_ROOM_ITEMS_HIDE) {
    hidden = true;
}
apply (area:CONST_TOA_AREA && name:VAR_TOA_ROOM_ITEMS_SHOW) {
    hidden = false;
}
apply (area:CONST_TOA_AREA && name:VAR_TOA_MVP_ITEMS_HIDE) {
    hidden = true;
}
apply (area:CONST_TOA_AREA && name:VAR_TOA_MVP_ITEMS_SHOW) {
    hidden = false;
}
apply (area:CONST_TOA_AREA && name:VAR_TOA_BOOKS_HIDE) {
    hidden = true;
}
apply (area:CONST_TOA_AREA && name:VAR_TOA_BOOKS_SHOW) {
    hidden = false;
}


/*@ define:input:bossing
type: stringlist
label: Yama force shown
group: Yama
*/
#define VAR_BOSSING_YAMA_SHOW ["Chasm teleport scroll","Oathplate shards","Aether catalyst","Diabolic worms","Barrel of demonic tallow (full)","Forgotten lockbox","Rite of vile transference","Soulflame horn","Dossier","Oathplate helm","Oathplate chest","Oathplate legs","Pineapple pizza","Wild pie","Prayer potion(3)","Super combat potion(1)"]

/*@ define:input:bossing
type: stringlist
label: Yama force hidden
group: Yama
*/
#define VAR_BOSSING_YAMA_HIDE []

apply (area:CONST_YAMA_AREA && name:VAR_BOSSING_YAMA_HIDE) {
    hidden = true;
}

apply (area:CONST_YAMA_AREA && name:VAR_BOSSING_YAMA_SHOW) {
    hidden = false;
}


/*@ define:input:bossing
type: stringlist
label: God Wars Dungeon force shown
group: God Wars Dungeon
*/
#define VAR_BOSSING_GOD_WARS_DUNGEON_SHOW ["Hammer"]

/*@ define:input:bossing
type: stringlist
label: God Wars Dungeon force hidden
group: God Wars Dungeon
*/
#define VAR_BOSSING_GOD_WARS_DUNGEON_HIDE []

apply (area:CONST_GOD_WARS_DUNGEON_AREA && name:VAR_BOSSING_GOD_WARS_DUNGEON_HIDE) {
    hidden = true;
}

apply (area:CONST_GOD_WARS_DUNGEON_AREA && name:VAR_BOSSING_GOD_WARS_DUNGEON_SHOW) {
    hidden = false;
}



/*@ define:input:bossing
type: enumlist
label: Unique drops force hidden
group: Commander Zilyana
enum: [
  "Saradomin sword",
  "Saradomin's light",
  "Armadyl crossbow",
  "Saradomin hilt"
]
*/
#define VAR_BOSSING_COMMANDER_ZILYANA_UNIQUES_HIDE []

/*@ define:input:bossing
type: enumlist
label: Unique drops force shown
group: Commander Zilyana
enum: [
  "Saradomin sword",
  "Saradomin's light",
  "Armadyl crossbow",
  "Saradomin hilt"
]
*/
#define VAR_BOSSING_COMMANDER_ZILYANA_UNIQUES_SHOW []

/*@ define:input:bossing
type: enumlist
label: Common drops force hidden
group: Commander Zilyana
enum: [
  "Coins",
  "Grimy ranarr weed",
  "Ranarr seed",
  "Magic seed",
  "Adamant platebody",
  "Rune dart",
  "Rune kiteshield",
  "Rune plateskirt",
  "Law rune",
  "Diamond",
  "Snape grass",
  "Steel arrow",
  "Steel dart",
  "Unicorn horn"
]
*/
#define VAR_BOSSING_COMMANDER_ZILYANA_COMMON_HIDE ["Steel arrow","Steel dart","Unicorn horn"]

/*@ define:input:bossing
type: enumlist
label: Common drops force shown
group: Commander Zilyana
enum: [
  "Coins",
  "Grimy ranarr weed",
  "Ranarr seed",
  "Magic seed",
  "Adamant platebody",
  "Rune dart",
  "Rune kiteshield",
  "Rune plateskirt",
  "Law rune",
  "Diamond",
  "Snape grass",
  "Steel arrow",
  "Steel dart",
  "Unicorn horn"
]
*/
#define VAR_BOSSING_COMMANDER_ZILYANA_COMMON_SHOW []

/*@ define:input:bossing
type: enumlist
label: Supply drops force hidden
group: Commander Zilyana
enum: [
  "Prayer potion(4)",
  "Super defence(3)",
  "Magic potion(3)",
  "Saradomin brew(3)",
  "Super restore(4)",
  "Summer pie",
  "Monkfish",
  "Bones"
]
*/
#define VAR_BOSSING_COMMANDER_ZILYANA_SUPPLY_HIDE []

/*@ define:input:bossing
type: enumlist
label: Supply drops force shown
group: Commander Zilyana
enum: [
  "Prayer potion(4)",
  "Super defence(3)",
  "Magic potion(3)",
  "Saradomin brew(3)",
  "Super restore(4)",
  "Summer pie",
  "Monkfish",
  "Bones"
]
*/
#define VAR_BOSSING_COMMANDER_ZILYANA_SUPPLY_SHOW []

apply (area:CONST_COMMANDER_ZILYANA_AREA && name:VAR_BOSSING_COMMANDER_ZILYANA_UNIQUES_HIDE) {
    hidden = true;
}
apply (area:CONST_COMMANDER_ZILYANA_AREA && name:VAR_BOSSING_COMMANDER_ZILYANA_COMMON_HIDE) {
    hidden = true;
}
apply (area:CONST_COMMANDER_ZILYANA_AREA && name:VAR_BOSSING_COMMANDER_ZILYANA_SUPPLY_HIDE) {
    hidden = true;
}
apply (area:CONST_COMMANDER_ZILYANA_AREA && name:VAR_BOSSING_COMMANDER_ZILYANA_UNIQUES_SHOW) {
    hidden = false;
}
apply (area:CONST_COMMANDER_ZILYANA_AREA && name:VAR_BOSSING_COMMANDER_ZILYANA_COMMON_SHOW) {
    hidden = false;
}
apply (area:CONST_COMMANDER_ZILYANA_AREA && name:VAR_BOSSING_COMMANDER_ZILYANA_SUPPLY_SHOW) {
    hidden = false;
}




/*@ define:input:bossing
type: enumlist
label: Unique drops force hidden
group: General Graardor
enum: [
  "Bandos chestplate",
  "Bandos tassets",
  "Bandos boots",
  "Bandos hilt"
]
*/
#define VAR_BOSSING_GENERAL_GRAARDOR_UNIQUES_HIDE []

/*@ define:input:bossing
type: enumlist
label: Unique drops force shown
group: General Graardor
enum: [
  "Bandos chestplate",
  "Bandos tassets",
  "Bandos boots",
  "Bandos hilt"
]
*/
#define VAR_BOSSING_GENERAL_GRAARDOR_UNIQUES_SHOW []

/*@ define:input:bossing
type: enumlist
label: Common drops force hidden
group: General Graardor
enum: [
  "Coins",
  "Grimy snapdragon",
  "Snapdragon seed",
  "Adamantite ore",
  "Coal",
  "Nature rune",
  "Cosmic rune",
  "Magic logs",
  "Limpwurt root",
  "Rune longsword",
  "Rune 2h sword",
  "Rune platebody",
  "Rune pickaxe",
  "Steel arrow",
  "Steel dart",
  "Right eye patch"
]
*/
#define VAR_BOSSING_GENERAL_GRAARDOR_COMMON_HIDE ["Steel arrow","Steel dart","Right eye patch"]

/*@ define:input:bossing
type: enumlist
label: Common drops force shown
group: General Graardor
enum: [
  "Coins",
  "Grimy snapdragon",
  "Snapdragon seed",
  "Adamantite ore",
  "Coal",
  "Nature rune",
  "Cosmic rune",
  "Magic logs",
  "Limpwurt root",
  "Rune longsword",
  "Rune 2h sword",
  "Rune platebody",
  "Rune pickaxe",
  "Steel arrow",
  "Steel dart",
  "Right eye patch"
]
*/
#define VAR_BOSSING_GENERAL_GRAARDOR_COMMON_SHOW []

/*@ define:input:bossing
type: enumlist
label: Supply drops force hidden
group: General Graardor
enum: [
  "Bones",
  "Big bones",
  "Super restore(4)",
  "Shark",
  "Chilli potato",
  "Kebab",
  "Combat potion(3)",
  "Super strength(3)",
  "Beer"
]
*/
#define VAR_BOSSING_GENERAL_GRAARDOR_SUPPLY_HIDE ["Combat potion(3)","Super strength(3)","Beer","Kebab"]

/*@ define:input:bossing
type: enumlist
label: Supply drops force shown
group: General Graardor
enum: [
  "Bones",
  "Big bones",
  "Super restore(4)",
  "Shark",
  "Chilli potato",
  "Kebab",
  "Combat potion(3)",
  "Super strength(3)",
  "Beer"
]
*/
#define VAR_BOSSING_GENERAL_GRAARDOR_SUPPLY_SHOW ["Bones","Big bones","Super restore(4)","Shark","Chilli potato"]

apply (area:CONST_GENERAL_GRAARDOR_AREA && name:VAR_BOSSING_GENERAL_GRAARDOR_UNIQUES_HIDE) {
    hidden = true;
}
apply (area:CONST_GENERAL_GRAARDOR_AREA && name:VAR_BOSSING_GENERAL_GRAARDOR_COMMON_HIDE) {
    hidden = true;
}
apply (area:CONST_GENERAL_GRAARDOR_AREA && name:VAR_BOSSING_GENERAL_GRAARDOR_SUPPLY_HIDE) {
    hidden = true;
}
apply (area:CONST_GENERAL_GRAARDOR_AREA && name:VAR_BOSSING_GENERAL_GRAARDOR_UNIQUES_SHOW) {
    hidden = false;
}
apply (area:CONST_GENERAL_GRAARDOR_AREA && name:VAR_BOSSING_GENERAL_GRAARDOR_COMMON_SHOW) {
    hidden = false;
}
apply (area:CONST_GENERAL_GRAARDOR_AREA && name:VAR_BOSSING_GENERAL_GRAARDOR_SUPPLY_SHOW) {
    hidden = false;
}




/*@ define:input:bossing
type: enumlist
label: Unique drops force hidden
group: Kree'arra
enum: [
  "Armadyl helmet",
  "Armadyl chestplate",
  "Armadyl chainskirt",
  "Armadyl hilt"
]
*/
#define VAR_BOSSING_KREEARRA_UNIQUES_HIDE []

/*@ define:input:bossing
type: enumlist
label: Unique drops force shown
group: Kree'arra
enum: [
  "Armadyl helmet",
  "Armadyl chestplate",
  "Armadyl chainskirt",
  "Armadyl hilt"
]
*/
#define VAR_BOSSING_KREEARRA_UNIQUES_SHOW []

/*@ define:input:bossing
type: enumlist
label: Common drops force hidden
group: Kree'arra
enum: [
  "Coins",
  "Grimy dwarf weed",
  "Dwarf weed seed",
  "Dragonstone bolts (e)",
  "Smoke rune",
  "Yew seed",
  "Crushed nest",
  "Grimy kwuarm",
  "Feather",
  "Black d'hide body",
  "Rune crossbow",
  "Mind rune",
  "Rune arrow",
  "Runite bolts",
  "Crystal key",
  "Steel dart",
  "Steel arrow"
]
*/
#define VAR_BOSSING_KREEARRA_COMMON_HIDE ["Feather","Black d'hide body","Rune crossbow","Mind rune","Rune arrow","Runite bolts","Crystal key","Steel dart","Steel arrow"]

/*@ define:input:bossing
type: enumlist
label: Common drops force shown
group: Kree'arra
enum: [
  "Coins",
  "Grimy dwarf weed",
  "Dwarf weed seed",
  "Dragonstone bolts (e)",
  "Smoke rune",
  "Yew seed",
  "Crushed nest",
  "Grimy kwuarm",
  "Feather",
  "Black d'hide body",
  "Rune crossbow",
  "Mind rune",
  "Rune arrow",
  "Runite bolts",
  "Crystal key",
  "Steel dart",
  "Steel arrow"
]
*/
#define VAR_BOSSING_KREEARRA_COMMON_SHOW []

/*@ define:input:bossing
type: enumlist
label: Supply drops force hidden
group: Kree'arra
enum: [
  "Bones",
  "Big bones",
  "Ranging potion(3)",
  "Super defence(3)",
  "Manta ray",
  "Mushroom potato"
]
*/
#define VAR_BOSSING_KREEARRA_SUPPLY_HIDE []

/*@ define:input:bossing
type: enumlist
label: Supply drops force shown
group: Kree'arra
enum: [
  "Bones",
  "Big bones",
  "Ranging potion(3)",
  "Super defence(3)",
  "Manta ray",
  "Mushroom potato"
]
*/
#define VAR_BOSSING_KREEARRA_SUPPLY_SHOW ["Bones","Big bones","Ranging potion(3)","Super defence(3)","Manta ray","Mushroom potato"]

apply (area:CONST_KREEARRA_AREA && name:VAR_BOSSING_KREEARRA_UNIQUES_HIDE) {
    hidden = true;
}
apply (area:CONST_KREEARRA_AREA && name:VAR_BOSSING_KREEARRA_COMMON_HIDE) {
    hidden = true;
}
apply (area:CONST_KREEARRA_AREA && name:VAR_BOSSING_KREEARRA_SUPPLY_HIDE) {
    hidden = true;
}
apply (area:CONST_KREEARRA_AREA && name:VAR_BOSSING_KREEARRA_UNIQUES_SHOW) {
    hidden = false;
}
apply (area:CONST_KREEARRA_AREA && name:VAR_BOSSING_KREEARRA_COMMON_SHOW) {
    hidden = false;
}
apply (area:CONST_KREEARRA_AREA && name:VAR_BOSSING_KREEARRA_SUPPLY_SHOW) {
    hidden = false;
}




/*@ define:input:bossing
type: enumlist
label: Unique drops force hidden
group: K'ril Tsutsaroth
enum: [
  "Steam battlestaff",
  "Zamorakian spear",
  "Staff of the dead",
  "Zamorak hilt"
]
*/
#define VAR_BOSSING_KRIL_TSUTSAROTH_UNIQUES_HIDE []

/*@ define:input:bossing
type: enumlist
label: Unique drops force shown
group: K'ril Tsutsaroth
enum: [
  "Steam battlestaff",
  "Zamorakian spear",
  "Staff of the dead",
  "Zamorak hilt"
]
*/
#define VAR_BOSSING_KRIL_TSUTSAROTH_UNIQUES_SHOW []

/*@ define:input:bossing
type: enumlist
label: Common drops force hidden
group: K'ril Tsutsaroth
enum: [
  "Coins",
  "Rune platelegs",
  "Grimy lantadyme",
  "Lantadyme seed",
  "Death rune",
  "Blood rune",
  "Wine of zamorak",
  "Rune scimitar",
  "Adamant platebody",
  "Dragon dagger(p++)",
  "Infernal ashes",
  "Malicious ashes",
  "Adamant arrow(p++)",
  "Steel dart",
  "Steel arrow"
]
*/
#define VAR_BOSSING_KRIL_TSUTSAROTH_COMMON_HIDE ["Infernal ashes","Malicious ashes","Adamant arrow(p++)","Steel dart","Steel arrow"]

/*@ define:input:bossing
type: enumlist
label: Common drops force shown
group: K'ril Tsutsaroth
enum: [
  "Coins",
  "Rune platelegs",
  "Grimy lantadyme",
  "Lantadyme seed",
  "Death rune",
  "Blood rune",
  "Wine of zamorak",
  "Rune scimitar",
  "Adamant platebody",
  "Dragon dagger(p++)",
  "Infernal ashes",
  "Malicious ashes",
  "Adamant arrow(p++)",
  "Steel dart",
  "Steel arrow"
]
*/
#define VAR_BOSSING_KRIL_TSUTSAROTH_COMMON_SHOW []

/*@ define:input:bossing
type: enumlist
label: Supply drops force hidden
group: K'ril Tsutsaroth
enum: [
  "Shark",
  "Tuna potato",
  "Super restore(3)",
  "Zamorak brew(3)",
  "Super attack(3)",
  "Super strength(3)"
]
*/
#define VAR_BOSSING_KRIL_TSUTSAROTH_SUPPLY_HIDE ["Zamorak brew(3)","Super attack(3)","Super strength(3)"]

/*@ define:input:bossing
type: enumlist
label: Supply drops force shown
group: K'ril Tsutsaroth
enum: [
  "Shark",
  "Tuna potato",
  "Super restore(3)",
  "Zamorak brew(3)",
  "Super attack(3)",
  "Super strength(3)"
]
*/
#define VAR_BOSSING_KRIL_TSUTSAROTH_SUPPLY_SHOW []

apply (area:CONST_KRIL_TSUTSAROTH_AREA && name:VAR_BOSSING_KRIL_TSUTSAROTH_UNIQUES_HIDE) {
    hidden = true;
}
apply (area:CONST_KRIL_TSUTSAROTH_AREA && name:VAR_BOSSING_KRIL_TSUTSAROTH_COMMON_HIDE) {
    hidden = true;
}
apply (area:CONST_KRIL_TSUTSAROTH_AREA && name:VAR_BOSSING_KRIL_TSUTSAROTH_SUPPLY_HIDE) {
    hidden = true;
}
apply (area:CONST_KRIL_TSUTSAROTH_AREA && name:VAR_BOSSING_KRIL_TSUTSAROTH_UNIQUES_SHOW) {
    hidden = false;
}
apply (area:CONST_KRIL_TSUTSAROTH_AREA && name:VAR_BOSSING_KRIL_TSUTSAROTH_COMMON_SHOW) {
    hidden = false;
}
apply (area:CONST_KRIL_TSUTSAROTH_AREA && name:VAR_BOSSING_KRIL_TSUTSAROTH_SUPPLY_SHOW) {
    hidden = false;
}




/*@ define:input:bossing
type: enumlist
label: Unique drops force hidden
group: Nex
enum: [
  "Zaryte vambraces",
  "Nihil horn",
  "Torva full helm (damaged)",
  "Torva platebody (damaged)",
  "Torva platelegs (damaged)",
  "Ancient hilt",
  "Ancient ceremonial mask",
  "Ancient ceremonial top",
  "Ancient ceremonial legs",
  "Ancient ceremonial gloves",
  "Ancient ceremonial boots"
]
*/
#define VAR_BOSSING_NEX_UNIQUES_HIDE []

/*@ define:input:bossing
type: enumlist
label: Unique drops force shown
group: Nex
enum: [
  "Zaryte vambraces",
  "Nihil horn",
  "Torva full helm (damaged)",
  "Torva platebody (damaged)",
  "Torva platelegs (damaged)",
  "Ancient hilt",
  "Ancient ceremonial mask",
  "Ancient ceremonial top",
  "Ancient ceremonial legs",
  "Ancient ceremonial gloves",
  "Ancient ceremonial boots"
]
*/
#define VAR_BOSSING_NEX_UNIQUES_SHOW []

/*@ define:input:bossing
type: enumlist
label: Common drops force hidden
group: Nex
enum: [
  "Rune sword",
  "Runite ore",
  "Ecumenical key shard",
  "Nihil shard",
  "Blood essence",
  "Onyx bolts (e)",
  "Dragon bolts (unf)",
  "Coins",
  "Blood rune",
  "Death rune",
  "Soul rune",
  "Cannonball",
  "Uncut ruby",
  "Uncut diamond",
  "Wine of zamorak",
  "Air rune",
  "Fire rune",
  "Water rune",
  "Air orb",
  "Coal"
]
*/
#define VAR_BOSSING_NEX_COMMON_HIDE []

/*@ define:input:bossing
type: enumlist
label: Common drops force shown
group: Nex
enum: [
  "Rune sword",
  "Runite ore",
  "Ecumenical key shard",
  "Nihil shard",
  "Blood essence",
  "Onyx bolts (e)",
  "Dragon bolts (unf)",
  "Coins",
  "Blood rune",
  "Death rune",
  "Soul rune",
  "Cannonball",
  "Uncut ruby",
  "Uncut diamond",
  "Wine of zamorak",
  "Air rune",
  "Fire rune",
  "Water rune",
  "Air orb",
  "Coal"
]
*/
#define VAR_BOSSING_NEX_COMMON_SHOW []

/*@ define:input:bossing
type: enumlist
label: Supply drops force hidden
group: Nex
enum: [
  "Shark",
  "Prayer potion(4)",
  "Saradomin brew(4)",
  "Super restore(4)"
]
*/
#define VAR_BOSSING_NEX_SUPPLY_HIDE []

/*@ define:input:bossing
type: enumlist
label: Supply drops force shown
group: Nex
enum: [
  "Shark",
  "Prayer potion(4)",
  "Saradomin brew(4)",
  "Super restore(4)"
]
*/
#define VAR_BOSSING_NEX_SUPPLY_SHOW []

apply (area:CONST_NEX_AREA && name:VAR_BOSSING_NEX_UNIQUES_HIDE) {
    hidden = true;
}

apply (area:CONST_NEX_AREA && name:VAR_BOSSING_NEX_COMMON_HIDE) {
    hidden = true;
}

apply (area:CONST_NEX_AREA && name:VAR_BOSSING_NEX_SUPPLY_HIDE) {
    hidden = true;
}

apply (area:CONST_NEX_AREA && name:VAR_BOSSING_NEX_UNIQUES_SHOW) {
    hidden = false;
}

apply (area:CONST_NEX_AREA && name:VAR_BOSSING_NEX_COMMON_SHOW) {
    hidden = false;
}

apply (area:CONST_NEX_AREA && name:VAR_BOSSING_NEX_SUPPLY_SHOW) {
    hidden = false;
}


/*@ define:input:slayer
type: enumlist
label: Wilderness slayer drops force hidden
group: Wilderness Slayer
enum: [
  "Slayer's enchantment"
]
*/
#define VAR_SLAYER_WILDERNESS_SLAYER_HIDE ["Slayer's enchantment"]

/*@ define:input:slayer
type: enumlist
label: Wilderness slayer drops force shown
group: Wilderness Slayer
enum: [
  "Slayer's enchantment"
]
*/
#define VAR_SLAYER_WILDERNESS_SLAYER_SHOW []

apply (name:VAR_SLAYER_WILDERNESS_SLAYER_HIDE) {
    hidden = true;
}

apply (name:VAR_SLAYER_WILDERNESS_SLAYER_SHOW) {
    hidden = false;
}

/*@ define:input:slayer
type: enumlist
label: Wilderness slayer cave drops force hidden
group: Wilderness Slayer
enum: [
  "Blighted entangle sack",
  "Blighted anglerfish",
  "Blighted manta ray",
  "Blighted karambwan",
  "Blighted teleport spell sack",
  "Blighted ancient ice sack",
  "Blighted vengeance sack",
  "Blighted super restore(4)",
  "Revenant cave teleport",
  "Dareeyak teleport (tablet)",
  "Wilderness crabs teleport",
  "Carrallanger teleport (tablet)",
  "Paddewwa teleport (tablet)",
  "Annakarl teleport (tablet)",
  "Lassar teleport (tablet)",
  "Kharyrll teleport (tablet)",
  "Senntisten teleport (tablet)",
  "Ghorrock teleport (tablet)",
  "Target teleport",
  "Magic shortbow scroll",
  "Ring of wealth scroll",
  "Trouver parchment",
  "Looting bag note"
]
*/
#define VAR_SLAYER_WILDERNESS_SLAYER_CAVE_HIDE ["Blighted entangle sack","Blighted teleport spell sack"]

/*@ define:input:slayer
type: enumlist
label: Wilderness slayer cave drops force shown
group: Wilderness Slayer
enum: [
  "Blighted entangle sack",
  "Blighted anglerfish",
  "Blighted manta ray",
  "Blighted karambwan",
  "Blighted teleport spell sack",
  "Blighted ancient ice sack",
  "Blighted vengeance sack",
  "Blighted super restore(4)",
  "Revenant cave teleport",
  "Dareeyak teleport (tablet)",
  "Wilderness crabs teleport",
  "Carrallanger teleport (tablet)",
  "Paddewwa teleport (tablet)",
  "Annakarl teleport (tablet)",
  "Lassar teleport (tablet)",
  "Kharyrll teleport (tablet)",
  "Senntisten teleport (tablet)",
  "Ghorrock teleport (tablet)",
  "Target teleport",
  "Magic shortbow scroll",
  "Ring of wealth scroll",
  "Trouver parchment",
  "Looting bag note"
]
*/
#define VAR_SLAYER_WILDERNESS_SLAYER_CAVE_SHOW []

apply (area:CONST_SLAYER_WILDERNESS_SLAYER_CAVE_AREA && name:VAR_SLAYER_WILDERNESS_SLAYER_CAVE_HIDE) {
    hidden = true;
}
apply (area:CONST_SLAYER_WILDERNESS_SLAYER_CAVE_AREA && name:VAR_SLAYER_WILDERNESS_SLAYER_CAVE_SHOW) {
    hidden = false;
}



/*@ define:input:slayer
type: enumlist
label: Unique drop force hidden
group: Smoke Devils
enum: [
  "Occult necklace",
  "Dragon chainbody"
]
*/
#define VAR_SLAYER_SMOKE_DEVIL_UNIQUES_HIDE []

/*@ define:input:slayer
type: enumlist
label: Unique drop force shown
group: Smoke Devils
enum: [
  "Occult necklace",
  "Dragon chainbody"
]
*/
#define VAR_SLAYER_SMOKE_DEVIL_UNIQUES_SHOW []

/*@ define:input:slayer
type: enumlist
label: Common drop force hidden
group: Smoke Devils
enum: [
  "Adamant battleaxe",
  "Adamantite bar",
  "Air battlestaff",
  "Air rune",
  "Ashes",
  "Black d'hide vambraces",
  "Coal",
  "Coins",
  "Crossbow string",
  "Fire battlestaff",
  "Fire rune",
  "Magic logs",
  "Mithril plateskirt",
  "Red d'hide body",
  "Rune arrow",
  "Rune chainbody",
  "Rune dagger",
  "Rune full helm",
  "Runite bolts",
  "Shark",
  "Smoke rune",
  "Soul rune",
  "Steel bar",
  "Ugthanki kebab"
]
*/
#define VAR_SLAYER_SMOKE_DEVIL_COMMON_HIDE []

/*@ define:input:slayer
type: enumlist
label: Common drop force shown
group: Smoke Devils
enum: [
  "Adamant battleaxe",
  "Adamantite bar",
  "Air battlestaff",
  "Air rune",
  "Ashes",
  "Black d'hide vambraces",
  "Coal",
  "Coins",
  "Crossbow string",
  "Fire battlestaff",
  "Fire rune",
  "Magic logs",
  "Mithril plateskirt",
  "Red d'hide body",
  "Rune arrow",
  "Rune chainbody",
  "Rune dagger",
  "Rune full helm",
  "Runite bolts",
  "Shark",
  "Smoke rune",
  "Soul rune",
  "Steel bar",
  "Ugthanki kebab"
]
*/
#define VAR_SLAYER_SMOKE_DEVIL_COMMON_SHOW []

/*@ define:input:slayer
type: enumlist
label: Herb drop force hidden
group: Smoke Devils
enum: [
  "Grimy guam leaf",
  "Grimy marrentill",
  "Grimy tarromin",
  "Grimy harralander",
  "Grimy ranarr weed",
  "Grimy irit leaf",
  "Grimy avantoe",
  "Grimy kwuarm",
  "Grimy cadantine",
  "Grimy lantadyme",
  "Grimy dwarf weed"
]
*/
#define VAR_SLAYER_SMOKE_DEVIL_HERBS_HIDE []

/*@ define:input:slayer
type: enumlist
label: Herb drop force shown
group: Smoke Devils
enum: [
  "Grimy guam leaf",
  "Grimy marrentill",
  "Grimy tarromin",
  "Grimy harralander",
  "Grimy ranarr weed",
  "Grimy irit leaf",
  "Grimy avantoe",
  "Grimy kwuarm",
  "Grimy cadantine",
  "Grimy lantadyme",
  "Grimy dwarf weed"
]
*/
#define VAR_SLAYER_SMOKE_DEVIL_HERBS_SHOW []

apply (area:CONST_SLAYER_SMOKE_DEVILS_AREA && name:VAR_SLAYER_SMOKE_DEVIL_UNIQUES_HIDE) {
    hidden = true;
}
apply (area:CONST_SLAYER_SMOKE_DEVILS_AREA && name:VAR_SLAYER_SMOKE_DEVIL_UNIQUES_SHOW) {
    hidden = false;
}
apply (area:CONST_SLAYER_SMOKE_DEVILS_AREA && name:VAR_SLAYER_SMOKE_DEVIL_COMMON_HIDE) {
    hidden = true;
}
apply (area:CONST_SLAYER_SMOKE_DEVILS_AREA && name:VAR_SLAYER_SMOKE_DEVIL_COMMON_SHOW) {
    hidden = false;
}
apply (area:CONST_SLAYER_SMOKE_DEVILS_AREA && name:VAR_SLAYER_SMOKE_DEVIL_HERBS_HIDE) {
    hidden = true;
}
apply (area:CONST_SLAYER_SMOKE_DEVILS_AREA && name:VAR_SLAYER_SMOKE_DEVIL_HERBS_SHOW) {
    hidden = false;
}


/*@ define:input:area_based_filtering
type: stringlist
label: List of items to force hidden at tormented demons
group: "Ancient Guthixian Temple (Tormented Demons)"
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_HIDE []

apply (area:CONST_ANCIENT_GUTHIXIAN_TEMPLE_AREA && name:VAR_MONSTERS_TORMENTED_DEMONS_HIDE) {
    hidden = true;
}

/*@ define:input:area_based_filtering
type: stringlist
label: List of items to force shown at tormented demons
group: "Ancient Guthixian Temple (Tormented Demons)"
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_SHOW ["Smouldering gland","Smouldering heart","Smouldering pile of flesh"]

apply (area:CONST_ANCIENT_GUTHIXIAN_TEMPLE_AREA && name:VAR_MONSTERS_TORMENTED_DEMONS_SHOW) {
    hidden = false;
}


/*@ define:input:area_based_filtering
type: enumlist
label: Tools to force hidden
group: The Gauntlet
enum: [
  {
    "value": "* sceptre",
    "label": "Crystal sceptre"
  },
  {
    "value": "* harpoon",
    "label": "Crystal harpoon"
  },
  {
    "value": "* axe",
    "label": "Crystal axe"
  },
  {
    "value": "* pickaxe",
    "label": "Crystal pickaxe"
  },
  {
    "value": "Pestle and mortar",
    "label": "Pestle and mortar"
  },
  {
    "value": "*teleport crystal",
    "label": "Teleport crystal"
  },
  {
    "value": "*escape crystal",
    "label": "Escape crystal"
  }
]
*/
#define VAR_GAUNTLET_TOOLS_HIDE ["* sceptre","* harpoon","* axe","* pickaxe","Pestle and mortar"]

apply (area:CONST_GAUNTLET_AREA && name:VAR_GAUNTLET_TOOLS_HIDE) {
    hidden = true;
}

/*@ define:input:area_based_filtering
type: enumlist
label: Resources to force hidden
group: The Gauntlet
enum: [
  {
    "value": "* shards",
    "label": "Crystal shards"
  },
  {
    "value": "Crystal dust",
    "label": "Crystal dust"
  },
  {
    "value": "Vial",
    "label": "Vial"
  },
  {
    "value": "Water-filled vial",
    "label": "Water-filled vial"
  },
  {
    "value": "Grym leaf",
    "label": "Grym leaf"
  },
  {
    "value": "Grym potion (unf)",
    "label": "Grym potion (unf)"
  },
  {
    "value": "Raw paddlefish",
    "label": "Raw paddlefish"
  },
  {
    "value": "Weapon frame",
    "label": "Weapon frame"
  },
  {
    "value": "* spike",
    "label": "Crystal spike"
  },
  {
    "value": "* orb",
    "label": "Crystal orb"
  },
  {
    "value": "* bowstring",
    "label": "Crystalline bowstring"
  },
  {
    "value": "Linum tirinum*",
    "label": "Linum tirinum"
  },
  {
    "value": "Phren bark*",
    "label": "Phren bark"
  },
  {
    "value": "* ore",
    "label": "Crystal ore"
  }
]
*/
#define VAR_GAUNTLET_RESOURCES_HIDE ["Vial","Water-filled vial","Grym potion (unf)"]

apply (area:CONST_GAUNTLET_AREA && name:VAR_GAUNTLET_RESOURCES_HIDE) {
    hidden = true;
}

/*@ define:input:area_based_filtering
type: enumlist
label: Supplies to force hidden
group: The Gauntlet
enum: [
  {
    "value": "Egniol potion (*",
    "label": "Egniol potion"
  },
  {
    "value": "Paddlefish",
    "label": "Paddlefish"
  },
  {
    "value": "Crystal paddlefish",
    "label": "Crystal paddlefish"
  },
  {
    "value": "Corrupted paddlefish",
    "label": "Corrupted paddlefish"
  }
]
*/
#define VAR_GAUNTLET_SUPPLIES_HIDE ["Egniol potion (*"]

apply (area:CONST_GAUNTLET_AREA && name:VAR_GAUNTLET_SUPPLIES_HIDE) {
    hidden = true;
}

/*@ define:input:area_based_filtering
type: enumlist
label: Equipment to force hidden
group: The Gauntlet
enum: [
  {
    "value": "* halberd *",
    "label": "Crystal halberd"
  },
  {
    "value": "* bow *",
    "label": "Crystal bow"
  },
  {
    "value": "* staff *",
    "label": "Crystal staff"
  },
  {
    "value": "* helm *",
    "label": "Crystal helm"
  },
  {
    "value": "* body *",
    "label": "Crystal body"
  },
  {
    "value": "* legs *",
    "label": "Crystal legs"
  }
]
*/
#define VAR_GAUNTLET_EQUIPMENT_HIDE []

apply (area:CONST_GAUNTLET_AREA && name:VAR_GAUNTLET_EQUIPMENT_HIDE) {
    hidden = true;
}


/*@ define:input:area_based_filtering
type: boolean
label: Hide starting gear
group: Last Man Standing
*/
#define VAR_LAST_MAN_STANDING_STARTER_GEAR_HIDE true

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:CONST_LAST_MAN_STANDING_STARTER_GEAR_LIST && VAR_LAST_MAN_STANDING_STARTER_GEAR_HIDE) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:CONST_LAST_MAN_STANDING_STARTER_GEAR_LIST && VAR_LAST_MAN_STANDING_STARTER_GEAR_HIDE) {
    hidden = true;
}

/*@ define:input:area_based_filtering
type: number
label: Hide ammo under this quantity
group: Last Man Standing
*/
#define VAR_LAST_MAN_STANDING_AMMO_MIN_QUANTITY 100

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:CONST_LAST_MAN_STANDING_AMMO_LIST && quantity:<VAR_LAST_MAN_STANDING_AMMO_MIN_QUANTITY) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:CONST_LAST_MAN_STANDING_AMMO_LIST && quantity:<VAR_LAST_MAN_STANDING_AMMO_MIN_QUANTITY) {
    hidden = true;
}

/*@ define:input:area_based_filtering
type: enumlist
label: Misc Hidden Items
group: Last Man Standing
enum: [
  "Mithril seeds"
]
*/
#define VAR_LAST_MAN_STANDING_MISC_HIDE []

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:VAR_LAST_MAN_STANDING_MISC_HIDE) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:VAR_LAST_MAN_STANDING_MISC_HIDE) {
    hidden = true;
}
/*@ define:input:area_based_filtering
type: enumlist
label: Weapons Hidden Items
group: Last Man Standing
enum: [
  "Ancient godsword",
  "Armadyl godsword",
  "Dharok's greataxe",
  "Dragon claws",
  "Dual macuahuitl",
  "Elder maul",
  "Ghrazi rapier",
  "Granite maul",
  "Inquisitor's mace",
  "Statius's warhammer",
  "Verac's flail",
  "Vesta's longsword",
  "Voidwaker"
]
*/
#define VAR_LAST_MAN_STANDING_MELEE_WEAPONS_HIDE []

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:VAR_LAST_MAN_STANDING_MELEE_WEAPONS_HIDE) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:VAR_LAST_MAN_STANDING_MELEE_WEAPONS_HIDE) {
    hidden = true;
}
/*@ define:input:area_based_filtering
type: enumlist
label: Armour Hidden Items
group: Last Man Standing
enum: [
  "Amulet of fury",
  "Amulet of torture",
  "Bandos tassets",
  "Blessed spirit shield",
  "Blood moon chestplate",
  "Blood moon helm",
  "Blood moon tassets",
  "Dharok's helm",
  "Dharok's platebody",
  "Dharok's platelegs",
  "Fremennik kilt",
  "Guthan's helm",
  "Guthix halo",
  "Infernal cape",
  "Inquisitor's great helm",
  "Inquisitor's hauberk",
  "Inquisitor's plateskirt",
  "Lightbearer",
  "Saradomin halo",
  "Spiked manacles",
  "Torag's helm",
  "Torag's platelegs",
  "Verac's brassard",
  "Verac's helm",
  "Verac's plateskirt",
  "Zamorak halo"
]
*/
#define VAR_LAST_MAN_STANDING_MELEE_ARMOUR_HIDE []

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:VAR_LAST_MAN_STANDING_MELEE_ARMOUR_HIDE) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:VAR_LAST_MAN_STANDING_MELEE_ARMOUR_HIDE) {
    hidden = true;
}
/*@ define:input:area_based_filtering
type: enumlist
label: Weapons Hidden Items
group: Last Man Standing
enum: [
  "Armadyl crossbow",
  "Dark bow",
  "Dragon knife",
  "Eclipse atlatl",
  "Heavy ballista",
  "Light ballista",
  "Morrigan's javelin",
  "Zaryte crossbow"
]
*/
#define VAR_LAST_MAN_STANDING_RANGED_WEAPONS_HIDE []

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:VAR_LAST_MAN_STANDING_RANGED_WEAPONS_HIDE) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:VAR_LAST_MAN_STANDING_RANGED_WEAPONS_HIDE) {
    hidden = true;
}
/*@ define:input:area_based_filtering
type: enumlist
label: Armour Hidden Items
group: Last Man Standing
enum: [
  "3rd age range coif",
  "3rd age range legs",
  "3rd age range top",
  "Eclipse moon chestplate",
  "Eclipse moon helm",
  "Eclipse moon tassets",
  "Guthix chaps",
  "Karil's leathertop",
  "Necklace of anguish",
  "Rangers' tunic",
  "Saradomin chaps",
  "Zamorak chaps"
]
*/
#define VAR_LAST_MAN_STANDING_RANGED_ARMOUR_HIDE []

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:VAR_LAST_MAN_STANDING_RANGED_ARMOUR_HIDE) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:VAR_LAST_MAN_STANDING_RANGED_ARMOUR_HIDE) {
    hidden = true;
}
/*@ define:input:area_based_filtering
type: enumlist
label: Ammo Hidden Items
group: Last Man Standing
enum: [
  "Atlatl dart",
  "Dragon arrows",
  "Dragon javelins",
  "Opal dragon bolts (e)"
]
*/
#define VAR_LAST_MAN_STANDING_RANGED_AMMO_HIDE []

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:VAR_LAST_MAN_STANDING_RANGED_AMMO_HIDE) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:VAR_LAST_MAN_STANDING_RANGED_AMMO_HIDE) {
    hidden = true;
}
/*@ define:input:area_based_filtering
type: enumlist
label: Weapons Hidden Items
group: Last Man Standing
enum: [
  "Blue moon spear",
  "Kodai wand",
  "Staff of the dead",
  "Volatile nightmare staff",
  "Zuriel's staff"
]
*/
#define VAR_LAST_MAN_STANDING_MAGIC_WEAPONS_HIDE []

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:VAR_LAST_MAN_STANDING_MAGIC_WEAPONS_HIDE) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:VAR_LAST_MAN_STANDING_MAGIC_WEAPONS_HIDE) {
    hidden = true;
}
/*@ define:input:area_based_filtering
type: enumlist
label: Armour Hidden Items
group: Last Man Standing
enum: [
  "3rd age mage hat",
  "3rd age robe",
  "3rd age robe top",
  "Ahrim's robetop",
  "Ahrim's robeskirt",
  "Ancestral hat",
  "Ancestral robe bottom",
  "Ancestral robe top",
  "Blue moon chestplate",
  "Blue moon helm",
  "Blue moon tassets",
  "Elder chaos hood",
  "Elder chaos robe",
  "Elder chaos top",
  "Eternal boots",
  "Infinity boots",
  "Mage's book",
  "Occult necklace",
  "Seers ring (i)",
  "Tormented bracelet",
  "Wizard boots"
]
*/
#define VAR_LAST_MAN_STANDING_MAGIC_ARMOUR_HIDE []

apply (area:CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA && name:VAR_LAST_MAN_STANDING_MAGIC_ARMOUR_HIDE) {
    hidden = true;
}
apply (area:CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA && name:VAR_LAST_MAN_STANDING_MAGIC_ARMOUR_HIDE) {
    hidden = true;
}


/*@ define:module:item_tiers
---
name: Item tiers
subtitle: Pick out the good stuff
description: |
  This highlights items based on their values. By default tiers are 20k, 100k, 1m, and 10m, with loot beams appearing starting at 1m.
*/



/*@ define:input:item_tiers
type: number
label: Minimum value
group: Tier 1
*/
#define VAR_VALUES_TIER_1_VALUE 50001

/*@ define:input:item_tiers
type: stringlist
label: Tier 1 force items shown
group: Tier 1
*/
#define VAR_VALUES_TIER_1_SHOW []

/*@ define:input:item_tiers
type: style
label: Tier 1 custom style
group: Tier 1
exampleItem: Helm of neitiznot
exampleItemId: 10828
*/
#define VAR_VALUES_TIER_1_CUSTOMSTYLE textColor = "#ff01e01e";textAccentColor = "#FF000000";lootbeamColor = "#ff01e01e";menuTextColor = "#ff01e01e";textAccent = 1;fontType = 3;showLootbeam = false;highlightTile = false;

apply ((value:>=VAR_VALUES_TIER_1_VALUE && value:<VAR_VALUES_TIER_2_VALUE) || name:VAR_VALUES_TIER_1_SHOW) {
    VAR_VALUES_TIER_1_CUSTOMSTYLE 
}



/*@ define:input:item_tiers
type: number
label: Minimum value
group: Tier 2
*/
#define VAR_VALUES_TIER_2_VALUE 250001

/*@ define:input:item_tiers
type: stringlist
label: Tier 2 force items shown
group: Tier 2
*/
#define VAR_VALUES_TIER_2_SHOW []

/*@ define:input:item_tiers
type: style
label: Tier 2 custom style
group: Tier 2
exampleItem: Infinity boots
exampleItemId: 6920
*/
#define VAR_VALUES_TIER_2_CUSTOMSTYLE textColor = "#ff007dff";textAccentColor = "#FF000000";lootbeamColor = "#ff007bff";menuTextColor = "#ff007dff";fontType = 3;showLootbeam = true;

apply ((value:>=VAR_VALUES_TIER_2_VALUE && value:<VAR_VALUES_TIER_3_VALUE) || name:VAR_VALUES_TIER_2_SHOW) {
    VAR_VALUES_TIER_2_CUSTOMSTYLE 
}



/*@ define:input:item_tiers
type: number
label: Minimum value
group: Tier 3
*/
#define VAR_VALUES_TIER_3_VALUE 1000001

/*@ define:input:item_tiers
type: stringlist
label: Tier 3 force items shown
group: Tier 3
*/
#define VAR_VALUES_TIER_3_SHOW []

/*@ define:input:item_tiers
type: style
label: Tier 3 custom style
group: Tier 3
exampleItem: Abyssal whip
exampleItemId: 4151
*/
#define VAR_VALUES_TIER_3_CUSTOMSTYLE textColor = "#ffc356d0";backgroundColor = "#00ffffff";borderColor = "#00ff9500";textAccentColor = "#FF000000";lootbeamColor = "#ff38093d";menuTextColor = "#ff80058e";fontType = 3;showLootbeam = true;icon = CurrentItem();

apply ((value:>=VAR_VALUES_TIER_3_VALUE && value:<VAR_VALUES_TIER_4_VALUE) || name:VAR_VALUES_TIER_3_SHOW) {
    VAR_VALUES_TIER_3_CUSTOMSTYLE 
}



/*@ define:input:item_tiers
type: number
label: Minimum value
group: Tier 4
*/
#define VAR_VALUES_TIER_4_VALUE 5000001

/*@ define:input:item_tiers
type: stringlist
label: Tier 4 force items shown
group: Tier 4
*/
#define VAR_VALUES_TIER_4_SHOW []

/*@ define:input:item_tiers
type: style
label: Tier 4 custom style
group: Tier 4
exampleItem: Twisted bow
exampleItemId: 20997
*/
#define VAR_VALUES_TIER_4_CUSTOMSTYLE textColor = "#fff8e600";backgroundColor = "#00ffffff";borderColor = "#00ff66b3";textAccentColor = "#FF000000";lootbeamColor = "#fff7e700";menuTextColor = "#fff8e600";fontType = 3;showLootbeam = true;icon = CurrentItem();

apply (value:>=VAR_VALUES_TIER_4_VALUE || name:VAR_VALUES_TIER_4_SHOW) {
    VAR_VALUES_TIER_4_CUSTOMSTYLE 
}



/*@ define:input:item_tiers
type: boolean
label: Dont let tier 1 items get filtered out or restyled in future modules
group: Power User
*/
#define VAR_VALUES_TIER_1_TERMINATE false

/*@ define:input:item_tiers
type: boolean
label: Dont let tier 2 items get filtered out or restyled in future modules
group: Power User
*/
#define VAR_VALUES_TIER_2_TERMINATE true

/*@ define:input:item_tiers
type: boolean
label: Dont let tier 3 items get filtered out or restyled in future modules
group: Power User
*/
#define VAR_VALUES_TIER_3_TERMINATE true

/*@ define:input:item_tiers
type: boolean
label: Dont let tier 4 items get filtered out or restyled in future modules
group: Power User
*/
#define VAR_VALUES_TIER_4_TERMINATE true

rule (VAR_VALUES_TIER_1_TERMINATE && ((value:>=VAR_VALUES_TIER_1_VALUE && value:<VAR_VALUES_TIER_2_VALUE) || name:VAR_VALUES_TIER_1_SHOW)) {}
rule (VAR_VALUES_TIER_2_TERMINATE && ((value:>=VAR_VALUES_TIER_2_VALUE && value:<VAR_VALUES_TIER_3_VALUE) || name:VAR_VALUES_TIER_2_SHOW)) {}
rule (VAR_VALUES_TIER_3_TERMINATE && ((value:>=VAR_VALUES_TIER_3_VALUE && value:<VAR_VALUES_TIER_4_VALUE) || name:VAR_VALUES_TIER_3_SHOW)) {}
rule (VAR_VALUES_TIER_4_TERMINATE && ((value:>=VAR_VALUES_TIER_4_VALUE) || name:VAR_VALUES_TIER_4_SHOW)) {}



/*@ define:module:uniques
---
name: Uniques
subtitle: Uniques are special! (even if they're not worth a lot)
description: |
  Add custom styling to unique items. By default this gives uniques on this list a loot beam and bold text. This can layer with other styling such as item tiers.
*/

/*@ define:input:uniques
type: style
label: Uniques custom style
exampleItem: Tanzanite fang
exampleItemId: 12922
*/
#define VAR_UNIQUES_CUSTOMSTYLE fontType = 3;showLootbeam = false;icon = CurrentItem();



/*@ define:input:uniques
type: stringlist
label: Uniques
group: Uniques List
*/
#define VAR_UNIQUES_LIST ["Jar of dirt","Jar of swamp","Jar of sand","Jar of souls","Jar of miasma","Jar of darkness","Jar of stone","Jar of decay","Jar of chemicals","Jar of eyes","Jar of dreams","Jar of spirits","Jar of smoke","Jar of venom","Black tourmaline core","Granite gloves","Granite ring","Granite hammer","Abyssal head","Bludgeon spine","Bludgeon claw","Bludgeon axon","Abyssal dagger","Abyssal whip","Kraken tentacle","Trident of the seas","Eternal crystal","Pegasian crystal","Primordial crystal","Smouldering stone","Araxyte fang","Noxious point","Noxious blade","Noxious pommel","Araxyte head","Occult necklace","Smoke battlestaff","Dragon chainbody","Hydra's claw","Hydra tail","Hydra leather","Hydra's fang","Hydra's eye","Hydra's heart","Alchemical hydra heads","Godsword shard 1","Godsword shard 2","Godsword shard 3","Saradomin sword","Saradomin's light","Kbd heads","Draconic visage","Ancient crystal","Ring of the gods","Skull of vet'ion","Voidwaker blade","Treasonous ring","Fangs of venenatis","Voidwaker gem","Tyrannical ring","Claws of callisto","Voidwaker hilt","Holy elixir","Spirit shield","Kq head","Dragon chainbody","Glacial temotli","Fire element staff crown","Ice element staff crown","Tanzanite mutagen","Magma mutagen","Magic fang","Serpentine visage","Tanzanite fang","Uncut onyx","Draconic visage","Skeletal visage","Dragonbone necklace","Venator shard","Parasitic egg","Magus vestige","Eye of the duke","Ice quartz","Venator vestige","Leviathan's lure","Smoke quartz","Bellator vestige","Siren's staff","Shadow quartz","Ultor vestige","Executioner's axe head","Blood quartz","Hill giant club","Bryophyta's essence","Bottomless compost bucket","Dark claw","Dark totem","Twisted ancestral colour kit","Metamorphic dust","Holy ornament kit","Sanguine ornament kit","Sanguine dust","Breach of the scarab","Eye of the corruptor","Jewel of the sun","Zenyte shard","Light frame","Heavy frame","Ballista limbs","Monkey tail","Ballista spring","Tormented synapse","Burning claw","Dragon warhammer","Big swordfish","Big shark","Big bass","Dark bow","Uncharged trident","Dragon sword","Drake's tooth","Drake's claw","Crawling hand","Cockatrice head","Basilisk head","Kurask head","Oathplate helm","Oathplate chest","Oathplate legs","Brimstone key","Dark totem top","Dark totem middle","Dark totem base","Araxyte venom sack","Araxyte venom sack (5)","Ancient shard","Coins","Bronze defender","Iron defender","Steel defender","Black defender","Mithril defender","Adamant defender","Rune defender","Dragon defender","Loop half of key","Tooth half of key","Mark of grace","Diabolic worms","Chasm teleport scroll","Soulflame hornRite of vile transference","Forgotten lockbox","Dossier","Barrel of demonic tallow (full)","Oathplate shards","Aether catalyst"]

apply (name:VAR_UNIQUES_LIST) {
    VAR_UNIQUES_CUSTOMSTYLE 
}



/*@ define:input:uniques
type: boolean
label: Disable loot filters sounds for uniques for bosses that already have a unique sound
group: Power User
*/
#define VAR_DISABLE_UNIQUES_SOUND true

apply (   VAR_DISABLE_UNIQUES_SOUND   && name:VAR_UNIQUES_LIST   && (
    area:CONST_MUSPAH_AREA     || area:CONST_THE_WHISPERER_AREA     || area:CONST_VARDORVIS_AREA     || area:CONST_DUKE_SUCELLUS_AREA     || area:CONST_THE_LEVIATHAN_AREA     || area:CONST_YAMA_AREA     || area:CONST_NEX_AREA     || area:CONST_AMOXLIATL_AREA   ) ) {
    sound = 2411; // sound name: silence
}

/*@ define:input:uniques
type: boolean
label: Dont let uniques get filtered out or restyled in future modules
group: Power User
*/
#define VAR_UNIQUES_TERMINATE false

rule (VAR_UNIQUES_TERMINATE && name:VAR_UNIQUES_LIST) {}


/*@ define:module:alchs
---
name: Alchs
subtitle: Ka-ching!
description: |
  Provides styling options for common alchable items.
*/

/*@ define:input:alchs
type: boolean
label: Force items from the alchs list to be shown
*/
#define VAR_ALCHS_FORCE_SHOWN true

apply (VAR_ALCHS_FORCE_SHOWN && name:VAR_ALCHS_ITEM_LIST) {
    hidden = false;
}

/*@ define:input:alchs
type: style
label: Custom style for items on the alchs list
exampleItem: Rune platelegs
exampleItemId: 1079
*/
#define VAR_ALCHS_CUSTOMSTYLE menuTextColor = "#ffa2bd01";fontType = 3;icon = Sprite(41, 0);

apply (name:VAR_ALCHS_ITEM_LIST) {
    VAR_ALCHS_CUSTOMSTYLE
}



/*@ define:input:alchs
type: stringlist
label: List of alchables
group: List of alchables
*/
#define VAR_ALCHS_ITEM_LIST ["Adamant platebody","Air battlestaff","Dragon battleaxe","Dragon dagger","Dragon halberd","Dragon longsword","Dragon mace","Dragon med helm","Dragon platelegs","Dragon plateskirt","Dragon scimitar","Earth battlestaff","Fire battlestaff","Lava battlestaff","Mystic air staff","Mystic earth staff","Mystic fire staff","Mystic lava staff","Mystic robe bottom","Mystic robe top","Mystic water staff","Onyx dragon bolts (e)","Rune 2h sword","Rune battleaxe","Rune chainbody","Rune full helm","Rune halberd","Rune hasta","Rune kiteshield","Rune longsword","Rune med helm","Rune pickaxe","Rune platebody","Rune platelegs","Rune plateskirt","Rune scimitar","Rune spear","Rune sq shield","Rune sword","Runite crossbow (u)","Runite limbs","Water battlestaff"]



/*@ define:input:alchs
type: boolean
label: Dont let alchables get filtered out or restyled in future modules
group: Power User
*/
#define VAR_ALCHS_TERMINATE false

rule (VAR_ALCHS_TERMINATE && name:VAR_ALCHS_ITEM_LIST) {}


/*@ define:module:individual_item_styles
---
name: Individual Item Styles
subtitle: Fancy
description: |
  This module provides styling for individual items.
*/


/*@ define:input:individual_item_styles
type: style
label: Beginner clue scroll custom style
group: Clue Scrolls Styles
exampleItem: Clue scroll (beginner)
*/
#define VAR_CLUE_SCROLLS_BEGINNER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#80908062";borderColor = "#FFCFC8C8";textAccentColor = "#FF000000";menuTextColor = "#FFCFC8C8";

apply (name:"Clue scroll (beginner)") {
    VAR_CLUE_SCROLLS_BEGINNER_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Easy clue scroll custom style
group: Clue Scrolls Styles
exampleItem: Clue scroll (easy)
*/
#define VAR_CLUE_SCROLLS_EASY_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#008f7f61";borderColor = "#00248f25";textAccentColor = "#ff01e01e";lootbeamColor = "#ffffffff";menuTextColor = "#ff01e01e";textAccent = 2;fontType = 3;showLootbeam = true;icon = CurrentItem();

apply (name:"Clue scroll (easy)") {
    VAR_CLUE_SCROLLS_EASY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Medium clue scroll custom style
group: Clue Scrolls Styles
exampleItem: Clue scroll (medium)
*/
#define VAR_CLUE_SCROLLS_MEDIUM_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#008f7f61";borderColor = "#006dbbbf";textAccentColor = "#ff007dff";lootbeamColor = "#ffffffff";menuTextColor = "#ff007dff";textAccent = 2;fontType = 3;showLootbeam = true;icon = CurrentItem();

apply (name:"Clue scroll (medium)") {
    VAR_CLUE_SCROLLS_MEDIUM_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Hard clue scroll custom style
group: Clue Scrolls Styles
exampleItem: Clue scroll (hard)
*/
#define VAR_CLUE_SCROLLS_HARD_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#008f7f61";borderColor = "#00a242bd";textAccentColor = "#ffb72aef";lootbeamColor = "#ffffffff";menuTextColor = "#ffb72aef";textAccent = 2;fontType = 3;showLootbeam = true;icon = CurrentItem();

apply (name:"Clue scroll (hard)") {
    VAR_CLUE_SCROLLS_HARD_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Elite clue scroll custom style
group: Clue Scrolls Styles
exampleItem: Clue scroll (elite)
*/
#define VAR_CLUE_SCROLLS_ELITE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#008f7f61";borderColor = "#00d1be45";textAccentColor = "#ffaf8900";lootbeamColor = "#ffffffff";menuTextColor = "#fff7c100";textAccent = 2;fontType = 3;showLootbeam = true;icon = CurrentItem();

apply (name:"Clue scroll (elite)") {
    VAR_CLUE_SCROLLS_ELITE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Master clue scroll custom style
group: Clue Scrolls Styles
exampleItem: Clue scroll (master)
*/
#define VAR_CLUE_SCROLLS_MASTER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#008f7f61";borderColor = "#00c23d30";textAccentColor = "#ffff1500";lootbeamColor = "#ffffffff";menuTextColor = "#ffff1500";textAccent = 2;fontType = 3;showLootbeam = true;icon = CurrentItem();

apply (name:"Clue scroll (master)") {
    VAR_CLUE_SCROLLS_MASTER_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Larran's key
group: Slayer Styles
exampleItem: Larran's key
*/
#define VAR_SLAYER_LARRANS_KEY_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00ad9715";borderColor = "#00ffffff";textAccentColor = "#FF000000";lootbeamColor = "#ffffffff";menuTextColor = "#FFfada1e";fontType = 3;showLootbeam = true;icon = CurrentItem();

apply (name:"Larran's key") {
    VAR_SLAYER_LARRANS_KEY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Brimstone key
group: Slayer Styles
exampleItem: Brimstone key
*/
#define VAR_SLAYER_BRIMSTONE_KEY_CUSTOMSTYLE textColor = "#ffffffff";backgroundColor = "#00ffffff";borderColor = "#00ffffff";textAccentColor = "#FF000000";lootbeamColor = "#ffffffff";menuTextColor = "#FF41a9b7";fontType = 3;showLootbeam = true;icon = CurrentItem();

apply (name:"Brimstone key") {
    VAR_SLAYER_BRIMSTONE_KEY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Dust battlestaff
group: Slayer Styles
exampleItem: Dust battlestaff
*/
#define VAR_SLAYER_DUST_BATTLESTAFF_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;icon = CurrentItem();

apply (name:"Dust battlestaff") {
    VAR_SLAYER_DUST_BATTLESTAFF_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mist battlestaff
group: Slayer Styles
exampleItem: Mist battlestaff
*/
#define VAR_SLAYER_MIST_BATTLESTAFF_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;icon = CurrentItem();

apply (name:"Mist battlestaff") {
    VAR_SLAYER_MIST_BATTLESTAFF_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Eternal gem
group: Slayer Styles
exampleItem: Eternal gem
*/
#define VAR_SLAYER_ETERNAL_GEM_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Eternal gem") {
    VAR_SLAYER_ETERNAL_GEM_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Imbued heart
group: Slayer Styles
exampleItem: Imbued heart
*/
#define VAR_SLAYER_IMBUED_HEART_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Imbued heart") {
    VAR_SLAYER_IMBUED_HEART_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Overload custom style
group: Chambers of Xeric Styles
exampleItem: Overload
backgroundImage: Chambers of Xeric
*/
#define VAR_COX_OVERLOAD_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:["overload (-)*",   "overload (4)",   "overload (3)",   "overload (2)",   "overload (1)",   "overload (+)*", ]) {
    VAR_COX_OVERLOAD_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Xeric's aid custom style
group: Chambers of Xeric Styles
exampleItem: Xeric's aid
backgroundImage: Chambers of Xeric
*/
#define VAR_COX_XERICS_AID_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:["xeric's aid (-)*",   "xeric's aid (4)",   "xeric's aid (3)",   "xeric's aid (2)",   "xeric's aid (1)",   "xeric's aid (+)*", ]) {
    VAR_COX_XERICS_AID_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Revitalisation potion custom style
group: Chambers of Xeric Styles
exampleItem: Revitalisation potion
backgroundImage: Chambers of Xeric
*/
#define VAR_COX_REVITALISATION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:["revitalisation (-)*",   "revitalisation potion*",   "revitalisation (+)*", ]) {
    VAR_COX_REVITALISATION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Prayer enhance custom style
group: Chambers of Xeric Styles
exampleItem: Prayer enhance
backgroundImage: Chambers of Xeric
*/
#define VAR_COX_PRAYER_ENHANCE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:["prayer enhance (-)*",   "prayer enhance (4)",   "prayer enhance (3)",   "prayer enhance (2)",   "prayer enhance (1)",   "prayer enhance (+)*", ]) {
    VAR_COX_PRAYER_ENHANCE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Elder potion custom style
group: Chambers of Xeric Styles
exampleItem: Elder potion
backgroundImage: Chambers of Xeric
*/
#define VAR_COX_ELDER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:["elder (-)*",   "elder potion*",   "elder (+)*", ]) {
    VAR_COX_ELDER_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Twisted potion custom style
group: Chambers of Xeric Styles
exampleItem: Twisted potion
backgroundImage: Chambers of Xeric
*/
#define VAR_COX_TWISTED_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:["twisted (-)*",   "twisted potion*",   "twisted (+)*", ]) {
    VAR_COX_TWISTED_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Kodai potion custom style
group: Chambers of Xeric Styles
exampleItem: Kodai potion
backgroundImage: Chambers of Xeric
*/
#define VAR_COX_KODAI_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:["kodai (-)*",   "kodai potion*",   "kodai (+)*", ]) {
    VAR_COX_KODAI_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Antipoison custom style
group: Chambers of Xeric Styles
exampleItem: Antipoison
backgroundImage: Chambers of Xeric
*/
#define VAR_COX_ANTIPOISON_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:["antipoison (-)*",   "antipoison (4)",   "antipoison (3)",   "antipoison (2)",   "antipoison (1)",   "antipoison (+)*", ]) {
    VAR_COX_ANTIPOISON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Golpar seed custom style
group: Chambers of Xeric Styles
exampleItem: Golpar seed
backgroundImage: Chambers of Xeric
*/
#define VAR_GOLPAR_SEED_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:"Golpar seed") {
    VAR_GOLPAR_SEED_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Buchu seed custom style
group: Chambers of Xeric Styles
exampleItem: Buchu seed
backgroundImage: Chambers of Xeric
*/
#define VAR_BUCHU_SEED_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:"Buchu seed") {
    VAR_BUCHU_SEED_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Noxifer seed custom style
group: Chambers of Xeric Styles
exampleItem: Noxifer seed
backgroundImage: Chambers of Xeric
*/
#define VAR_NOXIFER_SEED_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:"Noxifer seed") {
    VAR_NOXIFER_SEED_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Grimy golpar custom style
group: Chambers of Xeric Styles
exampleItem: Grimy golpar
backgroundImage: Chambers of Xeric
*/
#define VAR_GRIMY_GOLPAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:"Grimy golpar") {
    VAR_GRIMY_GOLPAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Grimy buchu leaf custom style
group: Chambers of Xeric Styles
exampleItem: Grimy buchu leaf
backgroundImage: Chambers of Xeric
*/
#define VAR_GRIMY_BUCHU_LEAF_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:"Grimy buchu leaf") {
    VAR_GRIMY_BUCHU_LEAF_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Grimy noxifer custom style
group: Chambers of Xeric Styles
exampleItem: Grimy noxifer
backgroundImage: Chambers of Xeric
*/
#define VAR_GRIMY_NOXIFER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:"Grimy noxifer") {
    VAR_GRIMY_NOXIFER_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Golpar custom style
group: Chambers of Xeric Styles
exampleItem: Golpar
backgroundImage: Chambers of Xeric
*/
#define VAR_GOLPAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:"golpar") {
    VAR_GOLPAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Buchu leaf custom style
group: Chambers of Xeric Styles
exampleItem: Buchu leaf
backgroundImage: Chambers of Xeric
*/
#define VAR_BUCHU_LEAF_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:"buchu leaf") {
    VAR_BUCHU_LEAF_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Noxifer custom style
group: Chambers of Xeric Styles
exampleItem: Noxifer
backgroundImage: Chambers of Xeric
*/
#define VAR_NOXIFER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:"noxifer") {
    VAR_NOXIFER_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Endarkened juice custom style
group: Chambers of Xeric Styles
exampleItem: Endarkened juice
backgroundImage: Chambers of Xeric
*/
#define VAR_ENDARKENED_JUICE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:"Endarkened juice") {
    VAR_ENDARKENED_JUICE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Stinkhorn mushroom custom style
group: Chambers of Xeric Styles
exampleItem: Stinkhorn mushroom
backgroundImage: Chambers of Xeric
*/
#define VAR_STINKHORN_MUSHROOM_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:"Stinkhorn mushroom") {
    VAR_STINKHORN_MUSHROOM_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Cicely custom style
group: Chambers of Xeric Styles
exampleItem: Cicely
backgroundImage: Chambers of Xeric
*/
#define VAR_CICELY_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (area:CONST_COX_AREA && name:"Cicely") {
    VAR_CICELY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mallignum root plank custom style
group: Chambers of Xeric Styles
exampleItem: Mallignum root plank
backgroundImage: Chambers of Xeric
*/
#define VAR_MALLIGNUM_ROOT_PLANK_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:"Mallignum root plank") {
    VAR_MALLIGNUM_ROOT_PLANK_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Cavern grubs custom style
group: Chambers of Xeric Styles
exampleItem: Cavern grubs
backgroundImage: Chambers of Xeric
*/
#define VAR_CAVERN_GRUBS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:"Cavern grubs") {
    VAR_CAVERN_GRUBS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Empty gourd vial custom style
group: Chambers of Xeric Styles
exampleItem: Empty gourd vial
backgroundImage: Chambers of Xeric
*/
#define VAR_EMPTY_GOURD_VIAL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:"Empty gourd vial") {
    VAR_EMPTY_GOURD_VIAL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Water-filled gourd vial custom style
group: Chambers of Xeric Styles
exampleItem: Water-filled gourd vial
backgroundImage: Chambers of Xeric
*/
#define VAR_WATER_FILLED_GOURD_VIAL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (area:CONST_COX_AREA && name:"Water-filled gourd vial") {
    VAR_WATER_FILLED_GOURD_VIAL_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Dawnbringer custom style
group: Theatre of Blood Styles
exampleItem: Dawnbringer
backgroundImage: Verzik Vitur
*/
#define VAR_TOB_DAWNBRINGER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00ad63a7";borderColor = "#00b8a12e";textAccentColor = "#FF000000";menuTextColor = "#ffa15af3";fontType = 3;icon = CurrentItem();

/*@ define:input:individual_item_styles
type: style
label: Salve custom style
group: Theatre of Blood Styles
exampleItem: Salve amulet (e)
backgroundImage: Verzik Vitur
*/
#define VAR_TOB_SALVE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffa4a8ff";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Dawnbringer") {
    VAR_TOB_DAWNBRINGER_CUSTOMSTYLE 
    hidden = false;
}
apply (name:"Salve amulet (e)") {
    VAR_TOB_SALVE_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Smelling salts
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_SMELLING_SALTS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00e8cd1e";borderColor = "#00e8cd1e";textAccentColor = "#FF000000";menuTextColor = "#fff69c04";fontType = 3;

apply (area:CONST_TOA_AREA && name:"Smelling salts (*") {
    VAR_SMELLING_SALTS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Ambrosia
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_AMBROSIA_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00e8cd1e";borderColor = "#00e8cd1e";textAccentColor = "#FF000000";menuTextColor = "#fff69c04";fontType = 3;

apply (area:CONST_TOA_AREA && name:"Ambrosia (*") {
    VAR_AMBROSIA_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Tears of Elidinis
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_TEARS_OF_ELIDINIS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00e8cd1e";borderColor = "#00e8cd1e";textAccentColor = "#FF000000";menuTextColor = "#fff69c04";fontType = 3;

apply (area:CONST_TOA_AREA && name:"Tears of Elidinis (*") {
    VAR_TEARS_OF_ELIDINIS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Nectar
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_NECTAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00e8cd1e";borderColor = "#00e8cd1e";textAccentColor = "#FF000000";menuTextColor = "#fff69c04";fontType = 3;

apply (area:CONST_TOA_AREA && name:"Nectar (*") {
    VAR_NECTAR_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Liquid adrenaline
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_LIQUID_ADRENALINE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00e8cd1e";borderColor = "#00e8cd1e";textAccentColor = "#FF000000";menuTextColor = "#fff69c04";fontType = 3;

apply (area:CONST_TOA_AREA && name:"Liquid adrenaline (*") {
    VAR_LIQUID_ADRENALINE_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Blessed crystal scarab
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_BLESSED_CRYSTAL_SCARAB_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00e8cd1e";borderColor = "#00e8cd1e";textAccentColor = "#FF000000";menuTextColor = "#fff69c04";fontType = 3;

apply (area:CONST_TOA_AREA && name:"Blessed crystal scarab (*") {
    VAR_BLESSED_CRYSTAL_SCARAB_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Silk dressing
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_SILK_DRESSING_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00e8cd1e";borderColor = "#00e8cd1e";textAccentColor = "#FF000000";menuTextColor = "#fff69c04";fontType = 3;

apply (area:CONST_TOA_AREA && name:"Silk dressing (*") {
    VAR_SILK_DRESSING_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Honey locust
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_HONEY_LOCUST_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00e8cd1e";borderColor = "#00e8cd1e";textAccentColor = "#FF000000";menuTextColor = "#fff69c04";fontType = 3;

apply (area:CONST_TOA_AREA && name:"Honey locust") {
    VAR_HONEY_LOCUST_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Neutralising potion
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_NEUTRALISING_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00e8cd1e";borderColor = "#00e8cd1e";textAccentColor = "#FF000000";menuTextColor = "#fff69c04";fontType = 3;

apply (area:CONST_TOA_AREA && name:"Neutralising potion") {
    VAR_NEUTRALISING_POTION_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Big banana
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_BIG_BANANA_CUSTOMSTYLE textColor = "#ffff00b0";backgroundColor = "#00cccc49";borderColor = "#00cccc49";textAccentColor = "#FF000000";lootbeamColor = "#ffff00b0";menuTextColor = "#ffdb8400";fontType = 3;showLootbeam = true;icon = Item(12397);

apply (area:CONST_TOA_AREA && name:"Big banana") {
    VAR_BIG_BANANA_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Eldritch ashes
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_ELDRITCH_ASHES_CUSTOMSTYLE textColor = "#ffff00b0";backgroundColor = "#00cccc49";borderColor = "#00cccc49";textAccentColor = "#FF000000";lootbeamColor = "#ffff00b0";menuTextColor = "#ffdb8400";fontType = 3;showLootbeam = true;sound = 0;icon = Item(12397);

apply (area:CONST_TOA_AREA && name:"Eldritch ashes") {
    VAR_ELDRITCH_ASHES_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Fang
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_FANG_CUSTOMSTYLE textColor = "#ffff00b0";backgroundColor = "#00cccc49";borderColor = "#00cccc49";textAccentColor = "#FF000000";lootbeamColor = "#ffff00b0";menuTextColor = "#ffdb8400";fontType = 3;showLootbeam = true;icon = Item(12397);

apply (area:CONST_TOA_AREA && name:"Fang") {
    VAR_FANG_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Scarab dung
group: Tombs of Amascut Styles
backgroundImage: Wardens
*/
#define VAR_SCARAB_DUNG_CUSTOMSTYLE textColor = "#ffff00b0";backgroundColor = "#00cccc49";borderColor = "#00cccc49";textAccentColor = "#FF000000";lootbeamColor = "#ffff00b0";menuTextColor = "#ffdb8400";fontType = 3;showLootbeam = true;icon = Item(12397);

apply (area:CONST_TOA_AREA && name:"Scarab dung") {
    VAR_SCARAB_DUNG_CUSTOMSTYLE
}


/*@ define:input:individual_item_styles
type: style
label: Smouldering gland
group: Tormented Demons Drop Styles
exampleItem: Smouldering gland
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_SMOULDERING_GLAND_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0059d4a9";borderColor = "#0059d4a9";textAccentColor = "#FF000000";menuTextColor = "#FF59D4A8";fontType = 3;icon = CurrentItem();

apply (name:"Smouldering gland") {
    VAR_MONSTERS_TORMENTED_DEMONS_SMOULDERING_GLAND_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Smouldering heart
group: Tormented Demons Drop Styles
exampleItem: Smouldering heart
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_SMOULDERING_HEART_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0018630b";borderColor = "#0018630b";textAccentColor = "#FF000000";menuTextColor = "#FF59D4A8";fontType = 3;icon = CurrentItem();

apply (name:"Smouldering heart") {
    VAR_MONSTERS_TORMENTED_DEMONS_SMOULDERING_HEART_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Smouldering pile of flesh
group: Tormented Demons Drop Styles
exampleItem: Smouldering pile of flesh
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_SMOULDERING_PILE_OF_FLESH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00614a17";borderColor = "#00614a17";textAccentColor = "#FF000000";menuTextColor = "#FF59D4A8";fontType = 3;icon = CurrentItem();

apply (name:"Smouldering pile of flesh") {
    VAR_MONSTERS_TORMENTED_DEMONS_SMOULDERING_PILE_OF_FLESH_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Tormented synapse
group: Tormented Demons Drop Styles
exampleItem: Tormented synapse
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_TORMENTED_SYNAPSE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Tormented synapse") {
    VAR_MONSTERS_TORMENTED_DEMONS_TORMENTED_SYNAPSE_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Burning claw
group: Tormented Demons Drop Styles
exampleItem: Burning claw
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_BURNING_CLAW_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Burning claw") {
    VAR_MONSTERS_TORMENTED_DEMONS_BURNING_CLAW_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Burning claws
group: Tormented Demons Drop Styles
exampleItem: Burning claws
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_BURNING_CLAW_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Burning claws") {
    VAR_MONSTERS_TORMENTED_DEMONS_BURNING_CLAW_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Emberlight
group: Tormented Demons Drop Styles
exampleItem: Emberlight
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_EMBERLIGHT_CUSTOMSTYLE textColor = "#fffff700";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#fffff700";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = true;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Emberlight") {
  VAR_MONSTERS_TORMENTED_DEMONS_EMBERLIGHT_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Purging staff
group: Tormented Demons Drop Styles
exampleItem: Purging staff
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_PURGING_STAFF_CUSTOMSTYLE textColor = "#fffff700";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#fffff700";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = true;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Purging staff") {
  VAR_MONSTERS_TORMENTED_DEMONS_PURGING_STAFF_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Scorching bow
group: Tormented Demons Drop Styles
exampleItem: Scorching bow
*/
#define VAR_MONSTERS_TORMENTED_DEMONS_SCORCHING_BOW_CUSTOMSTYLE textColor = "#fffff700";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#fffff700";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = true;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Scorching bow") {
  VAR_MONSTERS_TORMENTED_DEMONS_SCORCHING_BOW_CUSTOMSTYLE
}


/*@ define:input:individual_item_styles
type: style
label: Attack potion
group: Potions Styles
exampleItem: Attack potion(4)
*/
#define VAR_ATTACK_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Attack potion(*") {
    VAR_ATTACK_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Antipoison
group: Potions Styles
exampleItem: Antipoison(4)
*/
#define VAR_ANTIPOISON_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Antipoison(*") {
    VAR_ANTIPOISON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Strength potion
group: Potions Styles
exampleItem: Strength potion(4)
*/
#define VAR_STRENGTH_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Strength potion(*") {
    VAR_STRENGTH_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Serum 207
group: Potions Styles
exampleItem: Serum 207(4)
*/
#define VAR_SERUM_207_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Serum 207(*") {
    VAR_SERUM_207_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Compost potion
group: Potions Styles
exampleItem: Compost potion(4)
*/
#define VAR_COMPOST_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Compost potion(*") {
    VAR_COMPOST_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Restore potion
group: Potions Styles
exampleItem: Restore potion(4)
*/
#define VAR_RESTORE_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Restore potion(*") {
    VAR_RESTORE_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Energy potion
group: Potions Styles
exampleItem: Energy potion(4)
*/
#define VAR_ENERGY_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Energy potion(*") {
    VAR_ENERGY_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Defence potion
group: Potions Styles
exampleItem: Defence potion(4)
*/
#define VAR_DEFENCE_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Defence potion(*") {
    VAR_DEFENCE_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Agility potion
group: Potions Styles
exampleItem: Agility potion(4)
*/
#define VAR_AGILITY_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Agility potion(*") {
    VAR_AGILITY_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Combat potion
group: Potions Styles
exampleItem: Combat potion(4)
*/
#define VAR_COMBAT_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Combat potion(*") {
    VAR_COMBAT_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Prayer potion
group: Potions Styles
exampleItem: Prayer potion(4)
*/
#define VAR_PRAYER_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;icon = CurrentItem();

apply (name:"Prayer potion(*") {
    VAR_PRAYER_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Super attack
group: Potions Styles
exampleItem: Super attack(4)
*/
#define VAR_SUPER_ATTACK_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Super attack(*") {
    VAR_SUPER_ATTACK_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Superantipoison
group: Potions Styles
exampleItem: Superantipoison(4)
*/
#define VAR_SUPERANTIPOISON_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Superantipoison(*") {
    VAR_SUPERANTIPOISON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Fishing potion
group: Potions Styles
exampleItem: Fishing potion(4)
*/
#define VAR_FISHING_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Fishing potion(*") {
    VAR_FISHING_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Super energy
group: Potions Styles
exampleItem: Super energy(4)
*/
#define VAR_SUPER_ENERGY_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Super energy(*") {
    VAR_SUPER_ENERGY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Hunter potion
group: Potions Styles
exampleItem: Hunter potion(4)
*/
#define VAR_HUNTER_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Hunter potion(*") {
    VAR_HUNTER_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Goading potion
group: Potions Styles
exampleItem: Goading potion(4)
*/
#define VAR_GOADING_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Goading potion(*") {
    VAR_GOADING_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Super strength
group: Potions Styles
exampleItem: Super strength(4)
*/
#define VAR_SUPER_STRENGTH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Super strength(*") {
    VAR_SUPER_STRENGTH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Prayer regeneration potion
group: Potions Styles
exampleItem: Prayer regeneration potion(4)
*/
#define VAR_PRAYER_REGENERATION_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Prayer regeneration potion(*") {
    VAR_PRAYER_REGENERATION_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Super restore
group: Potions Styles
exampleItem: Super restore(4)
*/
#define VAR_SUPER_RESTORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;icon = CurrentItem();

apply (name:"Super restore(*") {
    VAR_SUPER_RESTORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Sanfew serum
group: Potions Styles
exampleItem: Sanfew serum(4)
*/
#define VAR_SANFEW_SERUM_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Sanfew serum(*") {
    VAR_SANFEW_SERUM_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Super defence
group: Potions Styles
exampleItem: Super defence(4)
*/
#define VAR_SUPER_DEFENCE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Super defence(*") {
    VAR_SUPER_DEFENCE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Antidote+
group: Potions Styles
exampleItem: Antidote+(4)
*/
#define VAR_ANTIDOTE_PLUS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Antidote+(*") {
    VAR_ANTIDOTE_PLUS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Antifire potion
group: Potions Styles
exampleItem: Antifire potion(4)
*/
#define VAR_ANTIFIRE_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Antifire potion(*") {
    VAR_ANTIFIRE_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Divine super attack potion
group: Potions Styles
exampleItem: Divine super attack potion(4)
*/
#define VAR_DIVINE_SUPER_ATTACK_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Divine super attack potion(*") {
    VAR_DIVINE_SUPER_ATTACK_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Divine super defence potion
group: Potions Styles
exampleItem: Divine super defence potion(4)
*/
#define VAR_DIVINE_SUPER_DEFENCE_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Divine super defence potion(*") {
    VAR_DIVINE_SUPER_DEFENCE_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Divine super strength potion
group: Potions Styles
exampleItem: Divine super strength potion(4)
*/
#define VAR_DIVINE_SUPER_STRENGTH_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Divine super strength potion(*") {
    VAR_DIVINE_SUPER_STRENGTH_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Ranging potion
group: Potions Styles
exampleItem: Ranging potion(4)
*/
#define VAR_RANGING_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;icon = CurrentItem();

apply (name:"Ranging potion(*") {
    VAR_RANGING_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Divine ranging potion
group: Potions Styles
exampleItem: Divine ranging potion(4)
*/
#define VAR_DIVINE_RANGING_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;icon = CurrentItem();

apply (name:"Divine ranging potion(*") {
    VAR_DIVINE_RANGING_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Magic potion
group: Potions Styles
exampleItem: Magic potion(4)
*/
#define VAR_MAGIC_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Magic potion(*") {
    VAR_MAGIC_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Stamina potion
group: Potions Styles
exampleItem: Stamina potion(4)
*/
#define VAR_STAMINA_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Stamina potion(*") {
    VAR_STAMINA_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Zamorak brew
group: Potions Styles
exampleItem: Zamorak brew(4)
*/
#define VAR_ZAMORAK_BREW_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Zamorak brew(*") {
    VAR_ZAMORAK_BREW_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Divine magic potion
group: Potions Styles
exampleItem: Divine magic potion(4)
*/
#define VAR_DIVINE_MAGIC_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Divine magic potion(*") {
    VAR_DIVINE_MAGIC_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Antidote++
group: Potions Styles
exampleItem: Antidote++(4)
*/
#define VAR_ANTIDOTE_PLUS_PLUS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Antidote++(*") {
    VAR_ANTIDOTE_PLUS_PLUS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Bastion potion
group: Potions Styles
exampleItem: Bastion potion(4)
*/
#define VAR_BASTION_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Bastion potion(*") {
    VAR_BASTION_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Battlemage potion
group: Potions Styles
exampleItem: Battlemage potion(4)
*/
#define VAR_BATTLEMAGE_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Battlemage potion(*") {
    VAR_BATTLEMAGE_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Saradomin brew
group: Potions Styles
exampleItem: Saradomin brew(4)
*/
#define VAR_SARADOMIN_BREW_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;icon = CurrentItem();

apply (name:"Saradomin brew(*") {
    VAR_SARADOMIN_BREW_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Extended antifire
group: Potions Styles
exampleItem: Extended antifire(4)
*/
#define VAR_EXTENDED_ANTIFIRE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Extended antifire(*") {
    VAR_EXTENDED_ANTIFIRE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Ancient brew
group: Potions Styles
exampleItem: Ancient brew(4)
*/
#define VAR_ANCIENT_BREW_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Ancient brew(*") {
    VAR_ANCIENT_BREW_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Divine bastion potion
group: Potions Styles
exampleItem: Divine bastion potion(4)
*/
#define VAR_DIVINE_BASTION_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Divine bastion potion(*") {
    VAR_DIVINE_BASTION_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Divine battlemage potion
group: Potions Styles
exampleItem: Divine battlemage potion(4)
*/
#define VAR_DIVINE_BATTLEMAGE_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Divine battlemage potion(*") {
    VAR_DIVINE_BATTLEMAGE_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Anti-venom
group: Potions Styles
exampleItem: Anti-venom(4)
*/
#define VAR_ANTI_VENOM_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Anti-venom(*") {
    VAR_ANTI_VENOM_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Menaphite remedy
group: Potions Styles
exampleItem: Menaphite remedy(4)
*/
#define VAR_MENAPHITE_REMEDY_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Menaphite remedy(*") {
    VAR_MENAPHITE_REMEDY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Super combat potion
group: Potions Styles
exampleItem: Super combat potion(4)
*/
#define VAR_SUPER_COMBAT_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;icon = CurrentItem();

apply (name:"Super combat potion(*") {
    VAR_SUPER_COMBAT_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Forgotten brew
group: Potions Styles
exampleItem: Forgotten brew(4)
*/
#define VAR_FORGOTTEN_BREW_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Forgotten brew(*") {
    VAR_FORGOTTEN_BREW_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Super antifire potion
group: Potions Styles
exampleItem: Super antifire potion(4)
*/
#define VAR_SUPER_ANTIFIRE_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Super antifire potion(*") {
    VAR_SUPER_ANTIFIRE_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Anti-venom+
group: Potions Styles
exampleItem: Anti-venom+(4)
*/
#define VAR_ANTI_VENOM_PLUS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Anti-venom+(*") {
    VAR_ANTI_VENOM_PLUS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Extended anti-venom+
group: Potions Styles
exampleItem: Extended anti-venom+(4)
*/
#define VAR_EXTENDED_ANTI_VENOM_PLUS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Extended anti-venom+(*") {
    VAR_EXTENDED_ANTI_VENOM_PLUS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Divine super combat potion
group: Potions Styles
exampleItem: Divine super combat potion(4)
*/
#define VAR_DIVINE_SUPER_COMBAT_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;icon = CurrentItem();

apply (name:"Divine super combat potion(*") {
    VAR_DIVINE_SUPER_COMBAT_POTION_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Extended super antifire
group: Potions Styles
exampleItem: Extended super antifire(4)
*/
#define VAR_EXTENDED_SUPER_ANTIFIRE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showDespawn = false;

apply (name:"Extended super antifire(*") {
    VAR_EXTENDED_SUPER_ANTIFIRE_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Anglerfish custom style
group: Fish Styles
exampleItem: Anglerfish
*/
#define VAR_ANGLERFISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Anglerfish") {
    VAR_ANGLERFISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Dark crab custom style
group: Fish Styles
exampleItem: Dark crab
*/
#define VAR_DARK_CRAB_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Dark crab") {
    VAR_DARK_CRAB_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Manta ray custom style
group: Fish Styles
exampleItem: Manta ray
*/
#define VAR_MANTA_RAY_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Manta ray") {
    VAR_MANTA_RAY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Sea turtle custom style
group: Fish Styles
exampleItem: Sea turtle
*/
#define VAR_SEA_TURTLE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Sea turtle") {
    VAR_SEA_TURTLE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Shark custom style
group: Fish Styles
exampleItem: Shark
*/
#define VAR_SHARK_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Shark") {
    VAR_SHARK_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Karambwan custom style
group: Fish Styles
exampleItem: Karambwan
*/
#define VAR_KARAMBWAN_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Cooked Karambwan") {
    VAR_KARAMBWAN_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Monkfish custom style
group: Fish Styles
exampleItem: Monkfish
*/
#define VAR_MONKFISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Monkfish") {
    VAR_MONKFISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Lava eel custom style
group: Fish Styles
exampleItem: Lava eel
*/
#define VAR_LAVA_EEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Lava eel") {
    VAR_LAVA_EEL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Swordfish custom style
group: Fish Styles
exampleItem: Swordfish
*/
#define VAR_SWORDFISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Swordfish") {
    VAR_SWORDFISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Bass custom style
group: Fish Styles
exampleItem: Bass
*/
#define VAR_BASS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Bass") {
    VAR_BASS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Lobster custom style
group: Fish Styles
exampleItem: Lobster
*/
#define VAR_LOBSTER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Lobster") {
    VAR_LOBSTER_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Rainbow fish custom style
group: Fish Styles
exampleItem: Rainbow fish
*/
#define VAR_RAINBOW_FISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Rainbow fish") {
    VAR_RAINBOW_FISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Cave eel custom style
group: Fish Styles
exampleItem: Cave eel
*/
#define VAR_CAVE_EEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Cave eel") {
    VAR_CAVE_EEL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Tuna custom style
group: Fish Styles
exampleItem: Tuna
*/
#define VAR_TUNA_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Tuna") {
    VAR_TUNA_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Salmon custom style
group: Fish Styles
exampleItem: Salmon
*/
#define VAR_SALMON_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Salmon") {
    VAR_SALMON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Slimy eel custom style
group: Fish Styles
exampleItem: Slimy eel
*/
#define VAR_SLIMY_EEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Slimy eel") {
    VAR_SLIMY_EEL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Pike custom style
group: Fish Styles
exampleItem: Pike
*/
#define VAR_PIKE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Pike") {
    VAR_PIKE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Cod custom style
group: Fish Styles
exampleItem: Cod
*/
#define VAR_COD_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Cod") {
    VAR_COD_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Trout custom style
group: Fish Styles
exampleItem: Trout
*/
#define VAR_TROUT_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Trout") {
    VAR_TROUT_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mackerel custom style
group: Fish Styles
exampleItem: Mackerel
*/
#define VAR_MACKEREL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Mackerel") {
    VAR_MACKEREL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Anchovies custom style
group: Fish Styles
exampleItem: Anchovies
*/
#define VAR_ANCHOVIES_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Anchovies") {
    VAR_ANCHOVIES_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Herring custom style
group: Fish Styles
exampleItem: Herring
*/
#define VAR_HERRING_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Herring") {
    VAR_HERRING_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Karambwanji custom style
group: Fish Styles
exampleItem: Karambwanji
*/
#define VAR_KARAMBWANJI_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Karambwanji") {
    VAR_KARAMBWANJI_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Sardine custom style
group: Fish Styles
exampleItem: Sardine
*/
#define VAR_SARDINE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Sardine") {
    VAR_SARDINE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Shrimp custom style
group: Fish Styles
exampleItem: Shrimp
*/
#define VAR_SHRIMP_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d9d8d2";borderColor = "#00d9d8d2";textAccentColor = "#FF000000";menuTextColor = "#ff02c3d6";fontType = 3;icon = CurrentItem();

apply (name:"Shrimp") {
    VAR_SHRIMP_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Logs custom style
group: Logs Styles
exampleItem: Logs
*/
#define VAR_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Logs") {
    VAR_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Oak logs custom style
group: Logs Styles
exampleItem: Oak logs
*/
#define VAR_OAK_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Oak logs") {
    VAR_OAK_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Willow logs custom style
group: Logs Styles
exampleItem: Willow logs
*/
#define VAR_WILLOW_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Willow logs") {
    VAR_WILLOW_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Maple logs custom style
group: Logs Styles
exampleItem: Maple logs
*/
#define VAR_MAPLE_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Maple logs") {
    VAR_MAPLE_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Yew logs custom style
group: Logs Styles
exampleItem: Yew logs
*/
#define VAR_YEW_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Yew logs") {
    VAR_YEW_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Magic logs custom style
group: Logs Styles
exampleItem: Magic logs
*/
#define VAR_MAGIC_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Magic logs") {
    VAR_MAGIC_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Redwood logs custom style
group: Logs Styles
exampleItem: Redwood logs
*/
#define VAR_REDWOOD_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Redwood logs") {
    VAR_REDWOOD_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Teak logs custom style
group: Logs Styles
exampleItem: Teak logs
*/
#define VAR_TEAK_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Teak logs") {
    VAR_TEAK_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mahogany logs custom style
group: Logs Styles
exampleItem: Mahogany logs
*/
#define VAR_MAHOGANY_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Mahogany logs") {
    VAR_MAHOGANY_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Achey tree logs custom style
group: Logs Styles
exampleItem: Achey tree logs
*/
#define VAR_ACHEY_TREE_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Achey tree logs") {
    VAR_ACHEY_TREE_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Arctic pine logs custom style
group: Logs Styles
exampleItem: Arctic pine logs
*/
#define VAR_ARCTIC_PINE_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Arctic pine logs") {
    VAR_ARCTIC_PINE_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Scrapey tree logs custom style
group: Logs Styles
exampleItem: Scrapey tree logs
*/
#define VAR_SCRAPEY_TREE_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Scrapey tree logs") {
    VAR_SCRAPEY_TREE_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Juniper logs custom style
group: Logs Styles
exampleItem: Juniper logs
*/
#define VAR_JUNIPER_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Juniper logs") {
    VAR_JUNIPER_LOGS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Bark custom style
group: Logs Styles
exampleItem: Bark
*/
#define VAR_BARK_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Bark") {
    VAR_BARK_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Blisterwood logs custom style
group: Logs Styles
exampleItem: Blisterwood logs
*/
#define VAR_BLISTERWOOD_LOGS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Blisterwood logs") {
    VAR_BLISTERWOOD_LOGS_CUSTOMSTYLE 
}



/*@ define:input:individual_item_styles
type: style
label: Copper ore custom style
group: Ores Styles
exampleItem: Copper ore
*/
#define VAR_COPPER_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"copper ore") {
    VAR_COPPER_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Tin ore custom style
group: Ores Styles
exampleItem: Tin ore
*/
#define VAR_TIN_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"tin ore") {
    VAR_TIN_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Iron ore custom style
group: Ores Styles
exampleItem: Iron ore
*/
#define VAR_IRON_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"iron ore") {
    VAR_IRON_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Silver ore custom style
group: Ores Styles
exampleItem: Silver ore
*/
#define VAR_SILVER_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"silver ore") {
    VAR_SILVER_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Coal custom style
group: Ores Styles
exampleItem: Coal
*/
#define VAR_COAL_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"coal") {
    VAR_COAL_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Gold ore custom style
group: Ores Styles
exampleItem: Gold ore
*/
#define VAR_GOLD_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"gold ore") {
    VAR_GOLD_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mithril ore custom style
group: Ores Styles
exampleItem: Mithril ore
*/
#define VAR_MITHRIL_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"mithril ore") {
    VAR_MITHRIL_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Adamantite ore custom style
group: Ores Styles
exampleItem: Adamantite ore
*/
#define VAR_ADAMANTITE_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"adamantite ore") {
    VAR_ADAMANTITE_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Runite ore custom style
group: Ores Styles
exampleItem: Runite ore
*/
#define VAR_RUNITE_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"runite ore") {
    VAR_RUNITE_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Daeyalt ore custom style
group: Ores Styles
exampleItem: Daeyalt ore
*/
#define VAR_DAEYALT_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"daeyalt ore") {
    VAR_DAEYALT_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Blasted ore custom style
group: Ores Styles
exampleItem: Blasted ore
*/
#define VAR_BLASTED_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"blasted ore") {
    VAR_BLASTED_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Blurite ore custom style
group: Ores Styles
exampleItem: Blurite ore
*/
#define VAR_BLURITE_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"blurite ore") {
    VAR_BLURITE_ORE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Lovakite ore custom style
group: Ores Styles
exampleItem: Lovakite ore
*/
#define VAR_LOVAKITE_ORE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"lovakite ore") {
    VAR_LOVAKITE_ORE_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Bronze bar custom style
group: Bars Styles
exampleItem: Bronze bar
*/
#define VAR_BRONZE_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Bronze bar") {
    VAR_BRONZE_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Iron bar custom style
group: Bars Styles
exampleItem: Iron bar
*/
#define VAR_IRON_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Iron bar") {
    VAR_IRON_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Steel bar custom style
group: Bars Styles
exampleItem: Steel bar
*/
#define VAR_STEEL_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Steel bar") {
    VAR_STEEL_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mithril bar custom style
group: Bars Styles
exampleItem: Mithril bar
*/
#define VAR_MITHRIL_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Mithril bar") {
    VAR_MITHRIL_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Adamantite bar custom style
group: Bars Styles
exampleItem: Adamantite bar
*/
#define VAR_ADAMANTITE_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Adamantite bar") {
    VAR_ADAMANTITE_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Runite bar custom style
group: Bars Styles
exampleItem: Runite bar
*/
#define VAR_RUNITE_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;showLootbeam = false;

apply (name:"Runite bar") {
    VAR_RUNITE_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Silver bar custom style
group: Bars Styles
exampleItem: Silver bar
*/
#define VAR_SILVER_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Silver bar") {
    VAR_SILVER_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Gold bar custom style
group: Bars Styles
exampleItem: Gold bar
*/
#define VAR_GOLD_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Gold bar") {
    VAR_GOLD_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Elemental metal custom style
group: Bars Styles
exampleItem: Elemental metal
*/
#define VAR_ELEMENTAL_METAL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Elemental metal") {
    VAR_ELEMENTAL_METAL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Primed bar custom style
group: Bars Styles
exampleItem: Primed bar
*/
#define VAR_PRIMED_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Primed bar") {
    VAR_PRIMED_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Primed mind bar custom style
group: Bars Styles
exampleItem: Primed mind bar
*/
#define VAR_PRIMED_MIND_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Primed mind bar") {
    VAR_PRIMED_MIND_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Blurite bar custom style
group: Bars Styles
exampleItem: Blurite bar
*/
#define VAR_BLURITE_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Blurite bar") {
    VAR_BLURITE_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Enchanted bar custom style
group: Bars Styles
exampleItem: Enchanted bar
*/
#define VAR_ENCHANTED_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Enchanted bar") {
    VAR_ENCHANTED_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Lovakite bar custom style
group: Bars Styles
exampleItem: Lovakite bar
*/
#define VAR_LOVAKITE_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"Lovakite bar") {
    VAR_LOVAKITE_BAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: "'Perfect' gold bar custom style"
group: Bars Styles
exampleItem: "'Perfect' gold bar"
*/
#define VAR_PERFECT_GOLD_BAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00d97d36";borderColor = "#00d97d36";textAccentColor = "#FF000000";menuTextColor = "#ffada8a8";fontType = 3;

apply (name:"'Perfect' gold bar") {
    VAR_PERFECT_GOLD_BAR_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Sapphire custom style
group: Gems Styles
exampleItem: Sapphire
*/
#define VAR_SAPPHIRE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:["Uncut sapphire",   "Sapphire", ]) {
    VAR_SAPPHIRE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Emerald custom style
group: Gems Styles
exampleItem: Emerald
*/
#define VAR_EMERALD_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:["Uncut emerald",   "Emerald", ]) {
    VAR_EMERALD_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Ruby custom style
group: Gems Styles
exampleItem: Ruby
*/
#define VAR_RUBY_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:["Uncut ruby",   "Ruby", ]) {
    VAR_RUBY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Diamond custom style
group: Gems Styles
exampleItem: Diamond
*/
#define VAR_DIAMOND_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:["Uncut diamond",   "Diamond", ]) {
    VAR_DIAMOND_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Opal custom style
group: Gems Styles
exampleItem: Opal
*/
#define VAR_OPAL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:["Uncut opal",   "Opal", ]) {
    VAR_OPAL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Jade custom style
group: Gems Styles
exampleItem: Jade
*/
#define VAR_JADE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:["Uncut jade",   "Jade", ]) {
    VAR_JADE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Red topaz custom style
group: Gems Styles
exampleItem: Red topaz
*/
#define VAR_RED_TOPAZ_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:["Uncut red topaz",   "Red topaz", ]) {
    VAR_RED_TOPAZ_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Dragonstone custom style
group: Gems Styles
exampleItem: Dragonstone
*/
#define VAR_DRAGONSTONE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:["Uncut dragonstone",   "Dragonstone", ]) {
    VAR_DRAGONSTONE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Onyx custom style
group: Gems Styles
exampleItem: Onyx
*/
#define VAR_ONYX_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:["Uncut onyx",   "Onyx", ]) {
    VAR_ONYX_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Air rune custom style
group: Runes Styles
exampleItem: Air rune
*/
#define VAR_AIR_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Air rune") {
    VAR_AIR_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Water rune custom style
group: Runes Styles
exampleItem: Water rune
*/
#define VAR_WATER_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Water rune") {
    VAR_WATER_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Earth rune custom style
group: Runes Styles
exampleItem: Earth rune
*/
#define VAR_EARTH_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Earth rune") {
    VAR_EARTH_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Fire rune custom style
group: Runes Styles
exampleItem: Fire rune
*/
#define VAR_FIRE_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Fire rune") {
    VAR_FIRE_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mind rune custom style
group: Runes Styles
exampleItem: Mind rune
*/
#define VAR_MIND_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Mind rune") {
    VAR_MIND_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Body rune custom style
group: Runes Styles
exampleItem: Body rune
*/
#define VAR_BODY_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Body rune") {
    VAR_BODY_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Cosmic rune custom style
group: Runes Styles
exampleItem: Cosmic rune
*/
#define VAR_COSMIC_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Cosmic rune") {
    VAR_COSMIC_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Chaos rune custom style
group: Runes Styles
exampleItem: Chaos rune
*/
#define VAR_CHAOS_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Chaos rune") {
    VAR_CHAOS_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Nature rune custom style
group: Runes Styles
exampleItem: Nature rune
*/
#define VAR_NATURE_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Nature rune") {
    VAR_NATURE_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Law rune custom style
group: Runes Styles
exampleItem: Law rune
*/
#define VAR_LAW_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Law rune") {
    VAR_LAW_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Death rune custom style
group: Runes Styles
exampleItem: Death rune
*/
#define VAR_DEATH_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Death rune") {
    VAR_DEATH_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Sunfire rune custom style
group: Runes Styles
exampleItem: Sunfire rune
*/
#define VAR_SUNFIRE_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Sunfire rune") {
    VAR_SUNFIRE_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Astral rune custom style
group: Runes Styles
exampleItem: Astral rune
*/
#define VAR_ASTRAL_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Astral rune") {
    VAR_ASTRAL_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Blood rune custom style
group: Runes Styles
exampleItem: Blood rune
*/
#define VAR_BLOOD_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Blood rune") {
    VAR_BLOOD_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Soul rune custom style
group: Runes Styles
exampleItem: Soul rune
*/
#define VAR_SOUL_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Soul rune") {
    VAR_SOUL_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Wrath rune custom style
group: Runes Styles
exampleItem: Wrath rune
*/
#define VAR_WRATH_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Wrath rune") {
    VAR_WRATH_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mist rune custom style
group: Runes Styles
exampleItem: Mist rune
*/
#define VAR_MIST_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Mist rune") {
    VAR_MIST_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Dust rune custom style
group: Runes Styles
exampleItem: Dust rune
*/
#define VAR_DUST_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Dust rune") {
    VAR_DUST_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mud rune custom style
group: Runes Styles
exampleItem: Mud rune
*/
#define VAR_MUD_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Mud rune") {
    VAR_MUD_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Smoke rune custom style
group: Runes Styles
exampleItem: Smoke rune
*/
#define VAR_SMOKE_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Smoke rune") {
    VAR_SMOKE_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Steam rune custom style
group: Runes Styles
exampleItem: Steam rune
*/
#define VAR_STEAM_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Steam rune") {
    VAR_STEAM_RUNE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Lava rune custom style
group: Runes Styles
exampleItem: Lava rune
*/
#define VAR_LAVA_RUNE_CUSTOMSTYLE textColor = "#ffffccf8";backgroundColor = "#00e0dede";borderColor = "#00e0dede";textAccentColor = "#FF000000";menuTextColor = "#ffffccf8";fontType = 3;

apply (name:"Lava rune") {
    VAR_LAVA_RUNE_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Guam leaf custom style
group: Herbs Styles
exampleItem: Guam leaf
*/
#define VAR_HERBS_GUAM_LEAF_CUSTOMSTYLE textColor = "#ff9ed9a2";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*guam leaf") {
    VAR_HERBS_GUAM_LEAF_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Marrentill custom style
group: Herbs Styles
exampleItem: Marrentill
*/
#define VAR_HERBS_MARRENTILL_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*marrentill") {
    VAR_HERBS_MARRENTILL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Tarromin custom style
group: Herbs Styles
exampleItem: Tarromin
*/
#define VAR_HERBS_TARROMIN_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*tarromin") {
    VAR_HERBS_TARROMIN_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Harralander custom style
group: Herbs Styles
exampleItem: Harralander
*/
#define VAR_HERBS_HARRALANDER_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*harralander") {
    VAR_HERBS_HARRALANDER_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Ranarr weed custom style
group: Herbs Styles
exampleItem: Ranarr weed
*/
#define VAR_HERBS_RANARR_WEED_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*ranarr weed") {
    VAR_HERBS_RANARR_WEED_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Toadflax custom style
group: Herbs Styles
exampleItem: Toadflax
*/
#define VAR_HERBS_TOADFLAX_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*toadflax") {
    VAR_HERBS_TOADFLAX_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Irit leaf custom style
group: Herbs Styles
exampleItem: Irit leaf
*/
#define VAR_HERBS_IRIT_LEAF_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*irit leaf") {
    VAR_HERBS_IRIT_LEAF_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Avantoe custom style
group: Herbs Styles
exampleItem: Avantoe
*/
#define VAR_HERBS_AVANTOE_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*avantoe") {
    VAR_HERBS_AVANTOE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Kwuarm custom style
group: Herbs Styles
exampleItem: Kwuarm
*/
#define VAR_HERBS_KWUARM_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*kwuarm") {
    VAR_HERBS_KWUARM_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Huasca custom style
group: Herbs Styles
exampleItem: Huasca
*/
#define VAR_HERBS_HUASCA_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*huasca") {
    VAR_HERBS_HUASCA_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Snapdragon custom style
group: Herbs Styles
exampleItem: Snapdragon
*/
#define VAR_HERBS_SNAPDRAGON_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*snapdragon") {
    VAR_HERBS_SNAPDRAGON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Cadantine custom style
group: Herbs Styles
exampleItem: Cadantine
*/
#define VAR_HERBS_CADANTINE_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*cadantine") {
    VAR_HERBS_CADANTINE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Lantadyme custom style
group: Herbs Styles
exampleItem: Lantadyme
*/
#define VAR_HERBS_LANTADYME_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*lantadyme") {
    VAR_HERBS_LANTADYME_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Dwarf weed custom style
group: Herbs Styles
exampleItem: Dwarf weed
*/
#define VAR_HERBS_DWARF_WEED_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*dwarf weed") {
    VAR_HERBS_DWARF_WEED_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Torstol custom style
group: Herbs Styles
exampleItem: Torstol
*/
#define VAR_HERBS_TORSTOL_CUSTOMSTYLE textColor = "#ffa1dea5";backgroundColor = "#0009540d";borderColor = "#0009540d";textAccentColor = "#FF000000";menuTextColor = "#ffa1dea5";fontType = 3;icon = CurrentItem();

apply (name:"*torstol") {
    VAR_HERBS_TORSTOL_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Raw shrimps custom style
group: Raw Fish Styles
exampleItem: Raw shrimps
*/
#define VAR_RAW_SHRIMPS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw shrimps") {
    VAR_RAW_SHRIMPS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw anchovies custom style
group: Raw Fish Styles
exampleItem: Raw anchovies
*/
#define VAR_RAW_ANCHOVIES_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw anchovies") {
    VAR_RAW_ANCHOVIES_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw guppy custom style
group: Raw Fish Styles
exampleItem: Raw guppy
*/
#define VAR_RAW_GUPPY_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw guppy") {
    VAR_RAW_GUPPY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw cavefish custom style
group: Raw Fish Styles
exampleItem: Raw cavefish
*/
#define VAR_RAW_CAVEFISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw cavefish") {
    VAR_RAW_CAVEFISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw tetra custom style
group: Raw Fish Styles
exampleItem: Raw tetra
*/
#define VAR_RAW_TETRA_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw tetra") {
    VAR_RAW_TETRA_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Frog spawn custom style
group: Raw Fish Styles
exampleItem: Frog spawn
*/
#define VAR_FROG_SPAWN_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Frog spawn") {
    VAR_FROG_SPAWN_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw monkfish custom style
group: Raw Fish Styles
exampleItem: Raw monkfish
*/
#define VAR_RAW_MONKFISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw monkfish") {
    VAR_RAW_MONKFISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Minnow custom style
group: Raw Fish Styles
exampleItem: Minnow
*/
#define VAR_MINNOW_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Minnow") {
    VAR_MINNOW_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw mackerel custom style
group: Raw Fish Styles
exampleItem: Raw mackerel
*/
#define VAR_RAW_MACKEREL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw mackerel") {
    VAR_RAW_MACKEREL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw cod custom style
group: Raw Fish Styles
exampleItem: Raw cod
*/
#define VAR_RAW_COD_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw cod") {
    VAR_RAW_COD_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw bass custom style
group: Raw Fish Styles
exampleItem: Raw bass
*/
#define VAR_RAW_BASS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw bass") {
    VAR_RAW_BASS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw catfish custom style
group: Raw Fish Styles
exampleItem: Raw catfish
*/
#define VAR_RAW_CATFISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw catfish") {
    VAR_RAW_CATFISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw sardine custom style
group: Raw Fish Styles
exampleItem: Raw sardine
*/
#define VAR_RAW_SARDINE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw sardine") {
    VAR_RAW_SARDINE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw herring custom style
group: Raw Fish Styles
exampleItem: Raw herring
*/
#define VAR_RAW_HERRING_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw herring") {
    VAR_RAW_HERRING_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw pike custom style
group: Raw Fish Styles
exampleItem: Raw pike
*/
#define VAR_RAW_PIKE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw pike") {
    VAR_RAW_PIKE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw slimy eel custom style
group: Raw Fish Styles
exampleItem: Raw slimy eel
*/
#define VAR_RAW_SLIMY_EEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw slimy eel") {
    VAR_RAW_SLIMY_EEL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw cave eel custom style
group: Raw Fish Styles
exampleItem: Raw cave eel
*/
#define VAR_RAW_CAVE_EEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw cave eel") {
    VAR_RAW_CAVE_EEL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw anglerfish custom style
group: Raw Fish Styles
exampleItem: Raw anglerfish
*/
#define VAR_RAW_ANGLERFISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw anglerfish") {
    VAR_RAW_ANGLERFISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Sacred eel custom style
group: Raw Fish Styles
exampleItem: Sacred eel
*/
#define VAR_SACRED_EEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Sacred eel") {
    VAR_SACRED_EEL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw trout custom style
group: Raw Fish Styles
exampleItem: Raw trout
*/
#define VAR_RAW_TROUT_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw trout") {
    VAR_RAW_TROUT_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw salmon custom style
group: Raw Fish Styles
exampleItem: Raw salmon
*/
#define VAR_RAW_SALMON_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw salmon") {
    VAR_RAW_SALMON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw rainbow fish custom style
group: Raw Fish Styles
exampleItem: Raw rainbow fish
*/
#define VAR_RAW_RAINBOW_FISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw rainbow fish") {
    VAR_RAW_RAINBOW_FISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw lava eel custom style
group: Raw Fish Styles
exampleItem: Raw lava eel
*/
#define VAR_RAW_LAVA_EEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw lava eel") {
    VAR_RAW_LAVA_EEL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Infernal eel custom style
group: Raw Fish Styles
exampleItem: Infernal eel
*/
#define VAR_INFERNAL_EEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Infernal eel") {
    VAR_INFERNAL_EEL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Leaping trout custom style
group: Raw Fish Styles
exampleItem: Leaping trout
*/
#define VAR_LEAPING_TROUT_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Leaping trout") {
    VAR_LEAPING_TROUT_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Leaping salmon custom style
group: Raw Fish Styles
exampleItem: Leaping salmon
*/
#define VAR_LEAPING_SALMON_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Leaping salmon") {
    VAR_LEAPING_SALMON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Leaping sturgeon custom style
group: Raw Fish Styles
exampleItem: Leaping sturgeon
*/
#define VAR_LEAPING_STURGEON_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Leaping sturgeon") {
    VAR_LEAPING_STURGEON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw tuna custom style
group: Raw Fish Styles
exampleItem: Raw tuna
*/
#define VAR_RAW_TUNA_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw tuna") {
    VAR_RAW_TUNA_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw swordfish custom style
group: Raw Fish Styles
exampleItem: Raw swordfish
*/
#define VAR_RAW_SWORDFISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw swordfish") {
    VAR_RAW_SWORDFISH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw shark custom style
group: Raw Fish Styles
exampleItem: Raw shark
*/
#define VAR_RAW_SHARK_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw shark") {
    VAR_RAW_SHARK_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw lobster custom style
group: Raw Fish Styles
exampleItem: Raw lobster
*/
#define VAR_RAW_LOBSTER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw lobster") {
    VAR_RAW_LOBSTER_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw dark crab custom style
group: Raw Fish Styles
exampleItem: Raw dark crab
*/
#define VAR_RAW_DARK_CRAB_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw dark crab") {
    VAR_RAW_DARK_CRAB_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Bluegill custom style
group: Raw Fish Styles
exampleItem: Bluegill
*/
#define VAR_BLUEGILL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Bluegill") {
    VAR_BLUEGILL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Common tench custom style
group: Raw Fish Styles
exampleItem: Common tench
*/
#define VAR_COMMON_TENCH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Common tench") {
    VAR_COMMON_TENCH_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Mottled eel custom style
group: Raw Fish Styles
exampleItem: Mottled eel
*/
#define VAR_MOTTLED_EEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Mottled eel") {
    VAR_MOTTLED_EEL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Greater siren custom style
group: Raw Fish Styles
exampleItem: Greater siren
*/
#define VAR_GREATER_SIREN_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Greater siren") {
    VAR_GREATER_SIREN_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw karambwan custom style
group: Raw Fish Styles
exampleItem: Raw karambwan
*/
#define VAR_RAW_KARAMBWAN_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw karambwan") {
    VAR_RAW_KARAMBWAN_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Sandworms custom style
group: Fishing Bait Styles
exampleItem: Sandworms
*/
#define VAR_SANDWORMS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Sandworms") {
    VAR_SANDWORMS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Fishing bait custom style
group: Fishing Bait Styles
exampleItem: Fishing bait
*/
#define VAR_FISHING_BAIT_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Fishing bait") {
    VAR_FISHING_BAIT_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Feather custom style
group: Fishing Bait Styles
exampleItem: Feather
*/
#define VAR_FEATHER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Feather") {
    VAR_FEATHER_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Stripy feather custom style
group: Fishing Bait Styles
exampleItem: Stripy feather
*/
#define VAR_STRIPY_FEATHER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Stripy feather") {
    VAR_STRIPY_FEATHER_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Dark fishing bait custom style
group: Fishing Bait Styles
exampleItem: Dark fishing bait
*/
#define VAR_DARK_FISHING_BAIT_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Dark fishing bait") {
    VAR_DARK_FISHING_BAIT_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: King worm custom style
group: Fishing Bait Styles
exampleItem: King worm
*/
#define VAR_KING_WORM_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"King worm") {
    VAR_KING_WORM_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Fish chunks custom style
group: Fishing Bait Styles
exampleItem: Fish chunks
*/
#define VAR_FISH_CHUNKS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Fish chunks") {
    VAR_FISH_CHUNKS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw karambwanji custom style
group: Fishing Bait Styles
exampleItem: Raw karambwanji
*/
#define VAR_RAW_KARAMBWANJI_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Raw karambwanji") {
    VAR_RAW_KARAMBWANJI_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Small fishing net custom style
group: Fishing Equipment Styles
exampleItem: Small fishing net
*/
#define VAR_SMALL_FISHING_NET_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Small fishing net") {
    VAR_SMALL_FISHING_NET_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Big fishing net custom style
group: Fishing Equipment Styles
exampleItem: Big fishing net
*/
#define VAR_BIG_FISHING_NET_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Big fishing net") {
    VAR_BIG_FISHING_NET_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Drift net custom style
group: Fishing Equipment Styles
exampleItem: Drift net
*/
#define VAR_DRIFT_NET_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Drift net") {
    VAR_DRIFT_NET_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Fishing rod custom style
group: Fishing Equipment Styles
exampleItem: Fishing rod
*/
#define VAR_FISHING_ROD_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Fishing rod") {
    VAR_FISHING_ROD_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Fly fishing rod custom style
group: Fishing Equipment Styles
exampleItem: Fly fishing rod
*/
#define VAR_FLY_FISHING_ROD_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Fly fishing rod") {
    VAR_FLY_FISHING_ROD_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Oily fishing rod custom style
group: Fishing Equipment Styles
exampleItem: Oily fishing rod
*/
#define VAR_OILY_FISHING_ROD_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Oily fishing rod") {
    VAR_OILY_FISHING_ROD_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Harpoon custom style
group: Fishing Equipment Styles
exampleItem: Harpoon
*/
#define VAR_HARPOON_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Harpoon") {
    VAR_HARPOON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Lobster pot custom style
group: Fishing Equipment Styles
exampleItem: Lobster pot
*/
#define VAR_LOBSTER_POT_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Lobster pot") {
    VAR_LOBSTER_POT_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Karambwan vessel custom style
group: Fishing Equipment Styles
exampleItem: Karambwan vessel
*/
#define VAR_KARAMBWAN_VESSEL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Karambwan vessel") {
    VAR_KARAMBWAN_VESSEL_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Abyssal pearls custom style
group: Currency Styles
exampleItem: Abyssal pearls
*/
#define VAR_ABYSSAL_PEARLS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Abyssal pearls") {
    VAR_ABYSSAL_PEARLS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Agility arena ticket custom style
group: Currency Styles
exampleItem: Agility arena ticket
*/
#define VAR_AGILITY_ARENA_TICKET_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Agility arena ticket") {
    VAR_AGILITY_ARENA_TICKET_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Anima-infused bark custom style
group: Currency Styles
exampleItem: Anima-infused bark
*/
#define VAR_ANIMA_INFUSED_BARK_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Anima-infused bark") {
    VAR_ANIMA_INFUSED_BARK_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Archery ticket custom style
group: Currency Styles
exampleItem: Archery ticket
*/
#define VAR_ARCHERY_TICKET_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Archery ticket") {
    VAR_ARCHERY_TICKET_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Barronite shards custom style
group: Currency Styles
exampleItem: Barronite shards
*/
#define VAR_BARRONITE_SHARDS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Barronite shards") {
    VAR_BARRONITE_SHARDS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Blood money custom style
group: Currency Styles
exampleItem: Blood money
*/
#define VAR_BLOOD_MONEY_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Blood money") {
    VAR_BLOOD_MONEY_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Brimhaven voucher custom style
group: Currency Styles
exampleItem: Brimhaven voucher
*/
#define VAR_BRIMHAVEN_VOUCHER_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Brimhaven voucher") {
    VAR_BRIMHAVEN_VOUCHER_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Castle wars ticket custom style
group: Currency Styles
exampleItem: Castle wars ticket
*/
#define VAR_CASTLE_WARS_TICKET_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Castle wars ticket") {
    VAR_CASTLE_WARS_TICKET_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Coins custom style
group: Currency Styles
exampleItem: Coins
*/
#define VAR_COINS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Coins") {
    VAR_COINS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Ecto-token custom style
group: Currency Styles
exampleItem: Ecto-token
*/
#define VAR_ECTO_TOKEN_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Ecto-token") {
    VAR_ECTO_TOKEN_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Frog token custom style
group: Currency Styles
exampleItem: Frog token
*/
#define VAR_FROG_TOKEN_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Frog token") {
    VAR_FROG_TOKEN_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Glistening tear custom style
group: Currency Styles
exampleItem: Glistening tear
*/
#define VAR_GLISTENING_TEAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Glistening tear") {
    VAR_GLISTENING_TEAR_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Golden nugget custom style
group: Currency Styles
exampleItem: Golden nugget
*/
#define VAR_GOLDEN_NUGGET_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Golden nugget") {
    VAR_GOLDEN_NUGGET_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Hallowed mark custom style
group: Currency Styles
exampleItem: Hallowed mark
*/
#define VAR_HALLOWED_MARK_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Hallowed mark") {
    VAR_HALLOWED_MARK_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Intelligence custom style
group: Currency Styles
exampleItem: Intelligence
*/
#define VAR_INTELLIGENCE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Intelligence") {
    VAR_INTELLIGENCE_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Mark of grace custom style
group: Currency Styles
exampleItem: Mark of grace
*/
#define VAR_MARK_OF_GRACE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Mark of grace") {
    VAR_MARK_OF_GRACE_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Mermaid's tear custom style
group: Currency Styles
exampleItem: Mermaid's tear
*/
#define VAR_MERMAIDS_TEAR_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Mermaid's tear") {
    VAR_MERMAIDS_TEAR_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Minnow custom style
group: Currency Styles
exampleItem: Minnow
*/
#define VAR_MINNOW_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Minnow") {
    VAR_MINNOW_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Molch pearl custom style
group: Currency Styles
exampleItem: Molch pearl
*/
#define VAR_MOLCH_PEARL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Molch pearl") {
    VAR_MOLCH_PEARL_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Mole claw custom style
group: Currency Styles
exampleItem: Mole claw
*/
#define VAR_MOLE_CLAW_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Mole claw") {
    VAR_MOLE_CLAW_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Mole skin custom style
group: Currency Styles
exampleItem: Mole skin
*/
#define VAR_MOLE_SKIN_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Mole skin") {
    VAR_MOLE_SKIN_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Nuggets custom style
group: Currency Styles
exampleItem: Nuggets
*/
#define VAR_NUGGETS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Nuggets") {
    VAR_NUGGETS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Numulite custom style
group: Currency Styles
exampleItem: Numulite
*/
#define VAR_NUMULITE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Numulite") {
    VAR_NUMULITE_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Paramaya ticket custom style
group: Currency Styles
exampleItem: Paramaya ticket
*/
#define VAR_PARAMAYA_TICKET_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Paramaya ticket") {
    VAR_PARAMAYA_TICKET_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Platinum token custom style
group: Currency Styles
exampleItem: Platinum token
*/
#define VAR_PLATINUM_TOKEN_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Platinum token") {
    VAR_PLATINUM_TOKEN_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Rare creature parts custom style
group: Currency Styles
exampleItem: Rare creature parts
*/
#define VAR_RARE_CREATURE_PARTS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Rare creature parts") {
    VAR_RARE_CREATURE_PARTS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Reward token credits custom style
group: Currency Styles
exampleItem: Reward token credits
*/
#define VAR_REWARD_TOKEN_CREDITS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Reward token credits") {
    VAR_REWARD_TOKEN_CREDITS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Shantay pass custom style
group: Currency Styles
exampleItem: Shantay pass
*/
#define VAR_SHANTAY_PASS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Shantay pass") {
    VAR_SHANTAY_PASS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Ship ticket custom style
group: Currency Styles
exampleItem: Ship ticket
*/
#define VAR_SHIP_TICKET_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Ship ticket") {
    VAR_SHIP_TICKET_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Stardust custom style
group: Currency Styles
exampleItem: Stardust
*/
#define VAR_STARDUST_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Stardust") {
    VAR_STARDUST_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Termites custom style
group: Currency Styles
exampleItem: Termites
*/
#define VAR_TERMITES_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Termites") {
    VAR_TERMITES_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Tokkul custom style
group: Currency Styles
exampleItem: Tokkul
*/
#define VAR_TOKKUL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Tokkul") {
    VAR_TOKKUL_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Trading sticks custom style
group: Currency Styles
exampleItem: Trading sticks
*/
#define VAR_TRADING_STICKS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Trading sticks") {
    VAR_TRADING_STICKS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Unidentified minerals custom style
group: Currency Styles
exampleItem: Unidentified minerals
*/
#define VAR_UNIDENTIFIED_MINERALS_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;

apply (name:"Unidentified minerals") {
    VAR_UNIDENTIFIED_MINERALS_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Warrior guild token custom style
group: Currency Styles
exampleItem: Warrior guild token
*/
#define VAR_WARRIOR_GUILD_TOKEN_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#0033c7cc";borderColor = "#0033c7cc";textAccentColor = "#FF000000";lootbeamColor = "#96ff0000";menuTextColor = "#ffff9900";fontType = 3;showLootbeam = false;showValue = false;showDespawn = false;notify = false;icon = CurrentItem();

apply (name:"Warrior guild token") {
    VAR_WARRIOR_GUILD_TOKEN_CUSTOMSTYLE
}


/*@ define:input:individual_item_styles
type: style
label: Crystal sceptre custom style
group: Gauntlet Styles
exampleItem: Crystal sceptre
*/
#define VAR_GAUNTLET_CRYSTAL_SCEPTRE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#5087735b";borderColor = "#FF657e7f";textAccentColor = "#FF000000";

apply (area:CONST_GAUNTLET_AREA && name:"* sceptre") {
    VAR_GAUNTLET_CRYSTAL_SCEPTRE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Crystal axe custom style
group: Gauntlet Styles
exampleItem: Crystal axe
*/
#define VAR_GAUNTLET_CRYSTAL_AXE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#5087735b";borderColor = "#FF00ff00";textAccentColor = "#FF000000";

apply (area:CONST_GAUNTLET_AREA && name:"* axe") {
    VAR_GAUNTLET_CRYSTAL_AXE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Crystal pickaxe custom style
group: Gauntlet Styles
exampleItem: Crystal pickaxe
*/
#define VAR_GAUNTLET_CRYSTAL_PICKAXE_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#5087735b";borderColor = "#FFff0000";textAccentColor = "#FF000000";

apply (area:CONST_GAUNTLET_AREA && name:"* pickaxe") {
    VAR_GAUNTLET_CRYSTAL_PICKAXE_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Crystal harpoon custom style
group: Gauntlet Styles
exampleItem: Crystal harpoon
*/
#define VAR_GAUNTLET_CRYSTAL_HARPOON_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#5087735b";borderColor = "#FF00ffff";textAccentColor = "#FF000000";

apply (area:CONST_GAUNTLET_AREA && name:"* harpoon") {
    VAR_GAUNTLET_CRYSTAL_HARPOON_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Pestle and mortar custom style
group: Gauntlet Styles
exampleItem: Pestle and mortar
*/
#define VAR_GAUNTLET_PESTLE_AND_MORTAR_CUSTOMSTYLE hideOverlay = true;

apply (area:CONST_GAUNTLET_AREA && name:"Pestle and mortar") {
    VAR_GAUNTLET_PESTLE_AND_MORTAR_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Teleport crystal custom style
group: Gauntlet Styles
exampleItem: Teleport crystal
*/
#define VAR_GAUNTLET_TELEPORT_CRYSTAL_CUSTOMSTYLE textColor = "#ffffe84f";backgroundColor = "#00000000";borderColor = "#00ffffff";textAccentColor = "#FF000000";menuTextColor = "#ffffe84f";fontType = 3;

apply (area:CONST_GAUNTLET_AREA && name:"*teleport crystal") {
    VAR_GAUNTLET_TELEPORT_CRYSTAL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Escape crystal custom style
group: Gauntlet Styles
exampleItem: Escape crystal
*/
#define VAR_GAUNTLET_ESCAPE_CRYSTAL_CUSTOMSTYLE hideOverlay = true;

apply (area:CONST_GAUNTLET_AREA && name:"*escape crystal") {
    VAR_GAUNTLET_ESCAPE_CRYSTAL_CUSTOMSTYLE 
}


/*@ define:input:individual_item_styles
type: style
label: Crystal shards custom style
group: Gauntlet Styles
exampleItem: Crystal shards
*/
#define VAR_GAUNTLET_CRYSTAL_SHARDS_CUSTOMSTYLE textColor = "#ff0bfab2";menuTextColor = "#ff0bfab2";fontType = 3;

apply (area:CONST_GAUNTLET_AREA && name:"* shards") {
    VAR_GAUNTLET_CRYSTAL_SHARDS_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Crystal dust custom style
group: Gauntlet Styles
exampleItem: Crystal dust
*/
#define VAR_GAUNTLET_CRYSTAL_DUST_CUSTOMSTYLE textColor = "#ff0bfab2";menuTextColor = "#ff0bfab2";fontType = 3;

apply (area:CONST_GAUNTLET_AREA && name:"Crystal dust") {
    VAR_GAUNTLET_CRYSTAL_DUST_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Vial custom style
group: Gauntlet Styles
exampleItem: Vial
*/
#define VAR_GAUNTLET_VIAL_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#50636165";borderColor = "#FFbeb8c2";textAccentColor = "#FF000000";menuTextColor = "#FFbeb8c2";

apply (area:CONST_GAUNTLET_AREA && name:"Vial") {
    VAR_GAUNTLET_VIAL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Water-filled vial custom style
group: Gauntlet Styles
exampleItem: Water-filled vial
*/
#define VAR_GAUNTLET_WATER_FILLED_VIAL_CUSTOMSTYLE textColor = "#FFa7a8c0";backgroundColor = "#00a6a7bf";borderColor = "#00b9b3bd";textAccentColor = "#FF000000";menuTextColor = "#FFa7a8c0";fontType = 3;

apply (area:CONST_GAUNTLET_AREA && name:"Water-filled vial") {
    VAR_GAUNTLET_WATER_FILLED_VIAL_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Grym leaf custom style
group: Gauntlet Styles
exampleItem: Grym leaf
*/
#define VAR_GAUNTLET_GRYM_LEAF_CUSTOMSTYLE textColor = "#ff34c33d";backgroundColor = "#00ffff00";borderColor = "#00005706";textAccentColor = "#FF000000";menuTextColor = "#ff34c33d";fontType = 3;icon = CurrentItem();

apply (area:CONST_GAUNTLET_AREA && name:"Grym leaf") {
    VAR_GAUNTLET_GRYM_LEAF_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Grym potion (unf) custom style
group: Gauntlet Styles
exampleItem: Grym potion (unf)
*/
#define VAR_GAUNTLET_GRYM_POTION_UNF_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#50bfbcbb";borderColor = "#FFffff00";textAccentColor = "#FF000000";menuTextColor = "#FFbfbcbb";

apply (area:CONST_GAUNTLET_AREA && name:"Grym potion (unf)") {
    VAR_GAUNTLET_GRYM_POTION_UNF_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Raw paddlefish custom style
group: Gauntlet Styles
exampleItem: Raw paddlefish
*/
#define VAR_GAUNTLET_RAW_PADDLEFISH_CUSTOMSTYLE textColor = "#ff00fff7";backgroundColor = "#0035cc7e";borderColor = "#0000f7ff";textAccentColor = "#FF000000";menuTextColor = "#ff00fff7";fontType = 3;icon = CurrentItem();

apply (area:CONST_GAUNTLET_AREA && name:"Egniol potion (*") {
    VAR_GAUNTLET_EGNIOL_POTION_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Weapon frame custom style
group: Gauntlet Styles
exampleItem: Weapon frame
*/
#define VAR_GAUNTLET_WEAPON_FRAME_CUSTOMSTYLE textColor = "#ffca5eeb";backgroundColor = "#0084608f";borderColor = "#0084608f";textAccentColor = "#FF000000";menuTextColor = "#ffca5eeb";fontType = 3;

apply (area:CONST_GAUNTLET_AREA && name:"Raw paddlefish") {
    VAR_GAUNTLET_RAW_PADDLEFISH_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Crystal spike custom style
group: Gauntlet Styles
exampleItem: Crystal spike
*/
#define VAR_GAUNTLET_CRYSTAL_SPIKE_CUSTOMSTYLE textColor = "#ffdc0000";backgroundColor = "#00ff0000";borderColor = "#00ff0000";textAccentColor = "#FF000000";menuTextColor = "#ffdc0000";fontType = 3;

apply (area:CONST_GAUNTLET_AREA && name:"Paddlefish") {
    VAR_GAUNTLET_PADDLEFISH_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Crystal orb custom style
group: Gauntlet Styles
exampleItem: Crystal orb
*/
#define VAR_GAUNTLET_CRYSTAL_ORB_CUSTOMSTYLE textColor = "#ff0089fa";backgroundColor = "#0000ffff";borderColor = "#0000ffff";textAccentColor = "#FF000000";lootbeamColor = "#ff0089fa";menuTextColor = "#ff0089fa";fontType = 3;showLootbeam = true;

apply (area:CONST_GAUNTLET_AREA && name:"Crystal paddlefish" || name:"Corrupted paddlefish") {
     VAR_GAUNTLET_CRYSTAL_PADDLEFISH_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Crystalline bowstring custom style
group: Gauntlet Styles
exampleItem: Crystalline bowstring
*/
#define VAR_GAUNTLET_CRYSTALLINE_BOWSTRING_CUSTOMSTYLE textColor = "#ff1e9e4d";backgroundColor = "#0000ff00";borderColor = "#0000ff00";textAccentColor = "#FF000000";lootbeamColor = "#ff1e9e4d";menuTextColor = "#ff1e9e4d";fontType = 3;showLootbeam = true;

apply (area:CONST_GAUNTLET_AREA && name:"Weapon frame") {
     VAR_GAUNTLET_WEAPON_FRAME_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Linum tirinum custom style
group: Gauntlet Styles
exampleItem: Linum tirinum
*/
#define VAR_GAUNTLET_LINUM_TIRINUM_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#00ffffff";borderColor = "#00ffffff";textAccentColor = "#FF000000";menuTextColor = "#FFffffff";fontType = 3;icon = CurrentItem();

apply (area:CONST_GAUNTLET_AREA && name:"* spike") {
    VAR_GAUNTLET_CRYSTAL_SPIKE_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Phren bark custom style
group: Gauntlet Styles
exampleItem: Phren bark
*/
#define VAR_GAUNTLET_PHREN_BARK_CUSTOMSTYLE textColor = "#ff9e672b";backgroundColor = "#0000ff00";borderColor = "#0000ff00";textAccentColor = "#FF000000";menuTextColor = "#ff9e672b";fontType = 3;icon = CurrentItem();

apply (area:CONST_GAUNTLET_AREA && name:"* orb") {
    VAR_GAUNTLET_CRYSTAL_ORB_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Crystal ore custom style
group: Gauntlet Styles
exampleItem: Crystal ore
*/
#define VAR_GAUNTLET_CRYSTAL_ORE_CUSTOMSTYLE textColor = "#ffed8383";backgroundColor = "#00ffffff";borderColor = "#00ff0000";textAccentColor = "#FF000000";menuTextColor = "#ffed8383";fontType = 3;icon = CurrentItem();

apply (area:CONST_GAUNTLET_AREA && name:"* bowstring") {
    VAR_GAUNTLET_CRYSTALLINE_BOWSTRING_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Egniol potion custom style
group: Gauntlet Styles
exampleItem: Egniol potion (3)
*/
#define VAR_GAUNTLET_EGNIOL_POTION_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#50c4aa96";borderColor = "#FFc4aa96";textAccentColor = "#FF000000";menuTextColor = "#FFc4aa96";

apply (area:CONST_GAUNTLET_AREA && name:"* halberd *") {
    VAR_GAUNTLET_CRYSTAL_HALBERD_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Paddlefish custom style
group: Gauntlet Styles
exampleItem: Paddlefish
*/
#define VAR_GAUNTLET_PADDLEFISH_CUSTOMSTYLE textColor = "#ff047c78";backgroundColor = "#0035cc7e";borderColor = "#0000f7ff";textAccentColor = "#FF000000";menuTextColor = "#ff047c78";fontType = 3;icon = CurrentItem();

apply (area:CONST_GAUNTLET_AREA && name:"* bow *") {
    VAR_GAUNTLET_CRYSTAL_BOW_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Crystal paddlefish custom style
group: Gauntlet Styles
exampleItem: Crystal paddlefish
*/
#define VAR_GAUNTLET_CRYSTAL_PADDLEFISH_CUSTOMSTYLE textColor = "#FFFFFFFF";backgroundColor = "#509d9d92";borderColor = "#FFa3c1c2";textAccentColor = "#FF000000";menuTextColor = "#FF9d9d92";

apply (area:CONST_GAUNTLET_AREA && name:"* staff *") {
    VAR_GAUNTLET_CRYSTAL_STAFF_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Crystal halberd custom style
group: Gauntlet Styles
exampleItem: Crystal halberd
*/
#define VAR_GAUNTLET_CRYSTAL_HALBERD_CUSTOMSTYLE 

apply (area:CONST_GAUNTLET_AREA && name:"Linum tirinum*") {
    VAR_GAUNTLET_LINUM_TIRINUM_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Crystal bow custom style
group: Gauntlet Styles
exampleItem: Crystal bow
*/
#define VAR_GAUNTLET_CRYSTAL_BOW_CUSTOMSTYLE 

apply (area:CONST_GAUNTLET_AREA && name:"Phren bark*") {
    VAR_GAUNTLET_PHREN_BARK_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Crystal staff custom style
group: Gauntlet Styles
exampleItem: Crystal staff
*/
#define VAR_GAUNTLET_CRYSTAL_STAFF_CUSTOMSTYLE 

apply (area:CONST_GAUNTLET_AREA && name:"* ore") {
    VAR_GAUNTLET_CRYSTAL_ORE_CUSTOMSTYLE
}

/*@ define:input:individual_item_styles
type: style
label: Crystal helm custom style
group: Gauntlet Styles
exampleItem: Crystal helm
*/
#define VAR_GAUNTLET_CRYSTAL_HELM_CUSTOMSTYLE 

apply (area:CONST_GAUNTLET_AREA && name:"* helm *") {
    VAR_GAUNTLET_CRYSTAL_HELM_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Crystal body custom style
group: Gauntlet Styles
exampleItem: Crystal body
*/
#define VAR_GAUNTLET_CRYSTAL_BODY_CUSTOMSTYLE 

apply (area:CONST_GAUNTLET_AREA && name:"* body *") {
    VAR_GAUNTLET_CRYSTAL_BODY_CUSTOMSTYLE 
}

/*@ define:input:individual_item_styles
type: style
label: Crystal legs custom style
group: Gauntlet Styles
exampleItem: Crystal legs
*/
#define VAR_GAUNTLET_CRYSTAL_LEGS_CUSTOMSTYLE 

apply (area:CONST_GAUNTLET_AREA && name:"* legs *") {
    VAR_GAUNTLET_CRYSTAL_LEGS_CUSTOMSTYLE 
}



/*@ define:module:final
hidden: true
name: final
*/

/* --- hiding and showing specific items --- */

apply (name:VAR_GLOBAL_HIDE) {
    hidden = true;
}
apply (name:VAR_GLOBAL_SHOW) {
    hidden = false;
}

/* --- sorting menu by value --- */

apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=0 && value:<10) {
    menuSort = 0;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=10 && value:<20) {
    menuSort = 1;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=20 && value:<30) {
    menuSort = 2;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=30 && value:<40) {
    menuSort = 3;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=40 && value:<50) {
    menuSort = 4;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=50 && value:<60) {
    menuSort = 5;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=60 && value:<70) {
    menuSort = 6;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=70 && value:<80) {
    menuSort = 7;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=80 && value:<90) {
    menuSort = 8;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=90 && value:<100) {
    menuSort = 9;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=100 && value:<200) {
    menuSort = 10;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=200 && value:<300) {
    menuSort = 11;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=300 && value:<400) {
    menuSort = 12;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=400 && value:<500) {
    menuSort = 13;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=500 && value:<600) {
    menuSort = 14;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=600 && value:<700) {
    menuSort = 15;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=700 && value:<800) {
    menuSort = 16;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=800 && value:<900) {
    menuSort = 17;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=900 && value:<1000) {
    menuSort = 18;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1000 && value:<2000) {
    menuSort = 19;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=2000 && value:<3000) {
    menuSort = 20;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=3000 && value:<4000) {
    menuSort = 21;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=4000 && value:<5000) {
    menuSort = 22;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=5000 && value:<6000) {
    menuSort = 23;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=6000 && value:<7000) {
    menuSort = 24;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=7000 && value:<8000) {
    menuSort = 25;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=8000 && value:<9000) {
    menuSort = 26;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=9000 && value:<10000) {
    menuSort = 27;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=10000 && value:<20000) {
    menuSort = 28;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=20000 && value:<30000) {
    menuSort = 29;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=30000 && value:<40000) {
    menuSort = 30;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=40000 && value:<50000) {
    menuSort = 31;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=50000 && value:<60000) {
    menuSort = 32;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=60000 && value:<70000) {
    menuSort = 33;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=70000 && value:<80000) {
    menuSort = 34;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=80000 && value:<90000) {
    menuSort = 35;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=90000 && value:<100000) {
    menuSort = 36;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=100000 && value:<200000) {
    menuSort = 37;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=200000 && value:<300000) {
    menuSort = 38;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=300000 && value:<400000) {
    menuSort = 39;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=400000 && value:<500000) {
    menuSort = 40;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=500000 && value:<600000) {
    menuSort = 41;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=600000 && value:<700000) {
    menuSort = 42;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=700000 && value:<800000) {
    menuSort = 43;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=800000 && value:<900000) {
    menuSort = 44;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=900000 && value:<1000000) {
    menuSort = 45;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1000000 && value:<2000000) {
    menuSort = 46;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=2000000 && value:<3000000) {
    menuSort = 47;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=3000000 && value:<4000000) {
    menuSort = 48;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=4000000 && value:<5000000) {
    menuSort = 49;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=5000000 && value:<6000000) {
    menuSort = 50;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=6000000 && value:<7000000) {
    menuSort = 51;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=7000000 && value:<8000000) {
    menuSort = 52;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=8000000 && value:<9000000) {
    menuSort = 53;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=9000000 && value:<10000000) {
    menuSort = 54;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=10000000 && value:<20000000) {
    menuSort = 55;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=20000000 && value:<30000000) {
    menuSort = 56;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=30000000 && value:<40000000) {
    menuSort = 57;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=40000000 && value:<50000000) {
    menuSort = 58;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=50000000 && value:<60000000) {
    menuSort = 59;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=60000000 && value:<70000000) {
    menuSort = 60;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=70000000 && value:<80000000) {
    menuSort = 61;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=80000000 && value:<90000000) {
    menuSort = 62;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=90000000 && value:<100000000) {
    menuSort = 63;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=100000000 && value:<200000000) {
    menuSort = 64;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=200000000 && value:<300000000) {
    menuSort = 65;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=300000000 && value:<400000000) {
    menuSort = 66;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=400000000 && value:<500000000) {
    menuSort = 67;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=500000000 && value:<600000000) {
    menuSort = 68;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=600000000 && value:<700000000) {
    menuSort = 69;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=700000000 && value:<800000000) {
    menuSort = 70;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=800000000 && value:<900000000) {
    menuSort = 71;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=900000000 && value:<1000000000) {
    menuSort = 72;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1000000000 && value:<1100000000) {
    menuSort = 73;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1100000000 && value:<1200000000) {
    menuSort = 74;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1200000000 && value:<1300000000) {
    menuSort = 75;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1300000000 && value:<1400000000) {
    menuSort = 76;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1400000000 && value:<1500000000) {
    menuSort = 77;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1500000000 && value:<1600000000) {
    menuSort = 78;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1600000000 && value:<1700000000) {
    menuSort = 79;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1700000000 && value:<1800000000) {
    menuSort = 80;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1800000000 && value:<1900000000) {
    menuSort = 81;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=1900000000 && value:<2000000000) {
    menuSort = 82;
}
apply ((VAR_SORTING_MENU_SORT_BY_VALUE || VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST) && value:>=2000000000) {
    menuSort = 83;
}

/* --- sorting menu by value with stackables first --- */

apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=0 && value:<10) {
    menuSort = 84;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=10 && value:<20) {
    menuSort = 85;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=20 && value:<30) {
    menuSort = 86;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=30 && value:<40) {
    menuSort = 87;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=40 && value:<50) {
    menuSort = 88;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=50 && value:<60) {
    menuSort = 89;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=60 && value:<70) {
    menuSort = 90;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=70 && value:<80) {
    menuSort = 91;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=80 && value:<90) {
    menuSort = 92;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=90 && value:<100) {
    menuSort = 93;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=100 && value:<200) {
    menuSort = 94;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=200 && value:<300) {
    menuSort = 95;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=300 && value:<400) {
    menuSort = 96;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=400 && value:<500) {
    menuSort = 97;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=500 && value:<600) {
    menuSort = 98;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=600 && value:<700) {
    menuSort = 99;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=700 && value:<800) {
    menuSort = 100;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=800 && value:<900) {
    menuSort = 101;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=900 && value:<1000) {
    menuSort = 102;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1000 && value:<2000) {
    menuSort = 103;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=2000 && value:<3000) {
    menuSort = 104;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=3000 && value:<4000) {
    menuSort = 105;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=4000 && value:<5000) {
    menuSort = 106;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=5000 && value:<6000) {
    menuSort = 107;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=6000 && value:<7000) {
    menuSort = 108;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=7000 && value:<8000) {
    menuSort = 109;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=8000 && value:<9000) {
    menuSort = 110;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=9000 && value:<10000) {
    menuSort = 111;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=10000 && value:<20000) {
    menuSort = 112;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=20000 && value:<30000) {
    menuSort = 113;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=30000 && value:<40000) {
    menuSort = 114;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=40000 && value:<50000) {
    menuSort = 115;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=50000 && value:<60000) {
    menuSort = 116;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=60000 && value:<70000) {
    menuSort = 117;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=70000 && value:<80000) {
    menuSort = 118;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=80000 && value:<90000) {
    menuSort = 119;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=90000 && value:<100000) {
    menuSort = 120;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=100000 && value:<200000) {
    menuSort = 121;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=200000 && value:<300000) {
    menuSort = 122;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=300000 && value:<400000) {
    menuSort = 123;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=400000 && value:<500000) {
    menuSort = 124;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=500000 && value:<600000) {
    menuSort = 125;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=600000 && value:<700000) {
    menuSort = 126;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=700000 && value:<800000) {
    menuSort = 127;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=800000 && value:<900000) {
    menuSort = 128;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=900000 && value:<1000000) {
    menuSort = 129;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1000000 && value:<2000000) {
    menuSort = 130;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=2000000 && value:<3000000) {
    menuSort = 131;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=3000000 && value:<4000000) {
    menuSort = 132;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=4000000 && value:<5000000) {
    menuSort = 133;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=5000000 && value:<6000000) {
    menuSort = 134;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=6000000 && value:<7000000) {
    menuSort = 135;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=7000000 && value:<8000000) {
    menuSort = 136;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=8000000 && value:<9000000) {
    menuSort = 137;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=9000000 && value:<10000000) {
    menuSort = 138;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=10000000 && value:<20000000) {
    menuSort = 139;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=20000000 && value:<30000000) {
    menuSort = 140;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=30000000 && value:<40000000) {
    menuSort = 141;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=40000000 && value:<50000000) {
    menuSort = 142;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=50000000 && value:<60000000) {
    menuSort = 143;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=60000000 && value:<70000000) {
    menuSort = 144;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=70000000 && value:<80000000) {
    menuSort = 145;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=80000000 && value:<90000000) {
    menuSort = 146;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=90000000 && value:<100000000) {
    menuSort = 147;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=100000000 && value:<200000000) {
    menuSort = 148;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=200000000 && value:<300000000) {
    menuSort = 149;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=300000000 && value:<400000000) {
    menuSort = 150;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=400000000 && value:<500000000) {
    menuSort = 151;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=500000000 && value:<600000000) {
    menuSort = 152;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=600000000 && value:<700000000) {
    menuSort = 153;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=700000000 && value:<800000000) {
    menuSort = 154;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=800000000 && value:<900000000) {
    menuSort = 155;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=900000000 && value:<1000000000) {
    menuSort = 156;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1000000000 && value:<1100000000) {
    menuSort = 157;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1100000000 && value:<1200000000) {
    menuSort = 158;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1200000000 && value:<1300000000) {
    menuSort = 159;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1300000000 && value:<1400000000) {
    menuSort = 160;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1400000000 && value:<1500000000) {
    menuSort = 161;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1500000000 && value:<1600000000) {
    menuSort = 162;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1600000000 && value:<1700000000) {
    menuSort = 163;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1700000000 && value:<1800000000) {
    menuSort = 164;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1800000000 && value:<1900000000) {
    menuSort = 165;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=1900000000 && value:<2000000000) {
    menuSort = 166;
}
apply (VAR_SORTING_MENU_SORT_BY_VALUE_STACKABLES_FIRST && (stackable:true || noted:true) && value:>=2000000000) {
    menuSort = 167;
}

/* --- handling menu sort for untradeables --- */

apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=0 && value:<10) {
    menuSort = 201;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=10 && value:<20) {
    menuSort = 202;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=20 && value:<30) {
    menuSort = 203;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=30 && value:<40) {
    menuSort = 204;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=40 && value:<50) {
    menuSort = 205;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=50 && value:<60) {
    menuSort = 206;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=60 && value:<70) {
    menuSort = 207;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=70 && value:<80) {
    menuSort = 208;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=80 && value:<90) {
    menuSort = 209;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=90 && value:<100) {
    menuSort = 210;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=100 && value:<200) {
    menuSort = 211;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=200 && value:<300) {
    menuSort = 212;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=300 && value:<400) {
    menuSort = 213;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=400 && value:<500) {
    menuSort = 214;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=500 && value:<600) {
    menuSort = 215;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=600 && value:<700) {
    menuSort = 216;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=700 && value:<800) {
    menuSort = 217;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=800 && value:<900) {
    menuSort = 218;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=900 && value:<1000) {
    menuSort = 219;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1000 && value:<2000) {
    menuSort = 220;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=2000 && value:<3000) {
    menuSort = 221;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=3000 && value:<4000) {
    menuSort = 222;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=4000 && value:<5000) {
    menuSort = 223;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=5000 && value:<6000) {
    menuSort = 224;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=6000 && value:<7000) {
    menuSort = 225;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=7000 && value:<8000) {
    menuSort = 226;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=8000 && value:<9000) {
    menuSort = 227;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=9000 && value:<10000) {
    menuSort = 228;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=10000 && value:<20000) {
    menuSort = 229;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=20000 && value:<30000) {
    menuSort = 230;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=30000 && value:<40000) {
    menuSort = 231;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=40000 && value:<50000) {
    menuSort = 232;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=50000 && value:<60000) {
    menuSort = 233;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=60000 && value:<70000) {
    menuSort = 234;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=70000 && value:<80000) {
    menuSort = 235;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=80000 && value:<90000) {
    menuSort = 236;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=90000 && value:<100000) {
    menuSort = 237;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=100000 && value:<200000) {
    menuSort = 238;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=200000 && value:<300000) {
    menuSort = 239;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=300000 && value:<400000) {
    menuSort = 240;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=400000 && value:<500000) {
    menuSort = 241;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=500000 && value:<600000) {
    menuSort = 242;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=600000 && value:<700000) {
    menuSort = 243;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=700000 && value:<800000) {
    menuSort = 244;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=800000 && value:<900000) {
    menuSort = 245;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=900000 && value:<1000000) {
    menuSort = 246;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1000000 && value:<2000000) {
    menuSort = 247;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=2000000 && value:<3000000) {
    menuSort = 248;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=3000000 && value:<4000000) {
    menuSort = 249;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=4000000 && value:<5000000) {
    menuSort = 250;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=5000000 && value:<6000000) {
    menuSort = 251;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=6000000 && value:<7000000) {
    menuSort = 252;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=7000000 && value:<8000000) {
    menuSort = 253;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=8000000 && value:<9000000) {
    menuSort = 254;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=9000000 && value:<10000000) {
    menuSort = 255;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=10000000 && value:<20000000) {
    menuSort = 256;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=20000000 && value:<30000000) {
    menuSort = 257;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=30000000 && value:<40000000) {
    menuSort = 258;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=40000000 && value:<50000000) {
    menuSort = 259;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=50000000 && value:<60000000) {
    menuSort = 260;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=60000000 && value:<70000000) {
    menuSort = 261;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=70000000 && value:<80000000) {
    menuSort = 262;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=80000000 && value:<90000000) {
    menuSort = 263;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=90000000 && value:<100000000) {
    menuSort = 264;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=100000000 && value:<200000000) {
    menuSort = 265;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=200000000 && value:<300000000) {
    menuSort = 266;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=300000000 && value:<400000000) {
    menuSort = 267;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=400000000 && value:<500000000) {
    menuSort = 268;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=500000000 && value:<600000000) {
    menuSort = 269;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=600000000 && value:<700000000) {
    menuSort = 270;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=700000000 && value:<800000000) {
    menuSort = 271;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=800000000 && value:<900000000) {
    menuSort = 272;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=900000000 && value:<1000000000) {
    menuSort = 273;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1000000000 && value:<1100000000) {
    menuSort = 274;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1100000000 && value:<1200000000) {
    menuSort = 275;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1200000000 && value:<1300000000) {
    menuSort = 276;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1300000000 && value:<1400000000) {
    menuSort = 277;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1400000000 && value:<1500000000) {
    menuSort = 278;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1500000000 && value:<1600000000) {
    menuSort = 279;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1600000000 && value:<1700000000) {
    menuSort = 280;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1700000000 && value:<1800000000) {
    menuSort = 281;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1800000000 && value:<1900000000) {
    menuSort = 282;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=1900000000 && value:<2000000000) {
    menuSort = 283;
}
apply (VAR_SORTING_MENU_SORT_UNTRADEABLE_FIRST && tradeable:false && value:>=2000000000) {
    menuSort = 284;
}

/* --- putting certain items first in the menu sorting --- */

apply (name:VAR_MENU_SORT_ITEMS_FIRST) {
    menuSort = 300;
}


/*@ define:module:constants
hidden: true
name: Constants
*/

#define CONST_ACCOUNT_TYPE_MAIN 0
#define CONST_ACCOUNT_TYPE_IRONMAN 1
#define CONST_ACCOUNT_TYPE_ULTIMATE_IRONMAN 2
#define CONST_ACCOUNT_TYPE_HARDCORE_IRONMAN 3
#define CONST_ACCOUNT_TYPE_GROUP_IRONMAN 4
#define CONST_ACCOUNT_TYPE_HARDCORE_GROUP_IRONMAN 5
#define CONST_ACCOUNT_TYPE_UNRANKED_GROUP_IRONMAN 6

#define CONST_COX_AREA [3200, 5120, 0, 3391, 5759, 2]

#define CONST_COX_OLM_AREA [3211, 5703, 0, 3254, 5761, 0]
#define CONST_COX_VASA_AREA [3263, 5279, 0, 3360, 5312, 0]
#define CONST_COX_SHAMANS_AREA [3263, 5247, 0, 3362, 5279, 0]
#define CONST_COX_MUTADILE_AREA [3263, 5309, 1, 3360, 5344, 1]
#define CONST_COX_TEKTON_AREA [3263, 5278, 1, 3361, 5311, 1]
#define CONST_COX_TIGHTROPE_AREA [3263, 5341, 1, 3361, 5375, 1]
#define CONST_COX_ICE_DEMON_AREA [3263, 5341, 0, 3361, 5375, 0]
#define CONST_COX_THIEVING_AREA [3263, 5374, 0, 3360, 5408, 0]

#define CONST_TOB_AREA [3153, 4233, 0, 3322, 4479, 0]

#define CONST_TOA_AREA [3515, 5126, 0, 3965, 5432, 0]

#define CONST_GOD_WARS_DUNGEON_AREA [2816, 5184, 0, 2943, 5375, 3]
#define CONST_COMMANDER_ZILYANA_AREA [2884, 5257, 0, 2908, 5276, 0]
#define CONST_GENERAL_GRAARDOR_AREA [2863, 5350, 2, 2877, 5373, 2]
#define CONST_KREEARRA_AREA [2820, 5295, 2, 2843, 5309, 2]
#define CONST_KRIL_TSUTSAROTH_AREA [2917, 5317, 2, 2941, 5332, 2]
#define CONST_NEX_AREA [2900, 5188, 0, 2943, 5218, 0]

#define CONST_AMOXLIATL_AREA [1347, 4493, 0, 1388, 4530, 0]

#define CONST_MUSPAH_AREA [2831, 4242, 0, 2862, 4275, 0]
#define CONST_THE_WHISPERER_AREA [2631, 6337, 0, 2682, 6394, 0]
#define CONST_VARDORVIS_AREA [1122, 3411, 0, 1137, 3426, 0]
#define CONST_DUKE_SUCELLUS_AREA [3027, 6432, 0, 3052, 6460, 0]
#define CONST_THE_LEVIATHAN_AREA [2068, 6360, 0, 2095, 6386, 0]

#define CONST_YAMA_AREA [1485, 10063, 0, 1524, 10092, 0]

#define CONST_ANCIENT_GUTHIXIAN_TEMPLE_AREA [4020, 4350, 0, 4163, 4484, 0]

#define CONST_GAUNTLET_AREA [1856, 5632, 0, 1983, 5695, 3]

#define CONST_LAST_MAN_STANDING_DESERT_ISLAND_AREA [3391, 5758, 0, 3521, 5889, 3]
#define CONST_LAST_MAN_STANDING_WILD_VARROCK_AREA [3457, 6017, 0, 3646, 6205, 3]

#define CONST_SLAYER_WILDERNESS_SLAYER_CAVE_AREA [3323, 10044, 0, 3458, 10178, 0]
#define CONST_SLAYER_HYDRAS_AREA [1291, 10221, 0, 1341, 10279, 0]
#define CONST_SLAYER_SMOKE_DEVILS_AREA [2376, 9408, 0, 2432, 9472, 0]
#define CONST_SLAYER_ARAXYTES_AREA [3650, 9793, 0, 3716, 9870, 0]
#define CONST_SLAYER_DARK_BEASTS_MOURNER_TUNNELS_AREA [1979, 4629, 0, 2043, 4678, 0]
#define CONST_SLAYER_DARK_BEASTS_IORWERTH_DUNGEON_1_AREA [3151, 12415, 0, 3182, 12439, 0]
#define CONST_SLAYER_DARK_BEASTS_IORWERTH_DUNGEON_2_AREA [3200, 12381, 0, 3243, 12407, 0]
#define CONST_SLAYER_CAVE_KRAKEN_AREA [2238, 9983, 0, 2304, 10022, 0]
#define CONST_SLAYER_ABYSSAL_DEMONS_ABYSSAL_AREA_AREA [3007, 4865, 0, 3070, 4926, 0]
#define CONST_SLAYER_ABYSSAL_DEMONS_CATACOMBS_CENTER_AREA [1667, 10049, 0, 1685, 10065, 0]
#define CONST_SLAYER_ABYSSAL_DEMONS_CATACOMBS_NORTH_AREA [1667, 10083, 0, 1681, 10102, 0]
#define CONST_SLAYER_ABYSSAL_DEMONS_SLAYER_TOWER_TOP_AREA [3404, 3555, 2, 3431, 3581, 2]
#define CONST_SLAYER_ABYSSAL_DEMONS_SLAYER_TOWER_BASEMENT_AREA [3429, 9953, 3, 3449, 9977, 3]
#define CONST_SLAYER_ABYSSAL_DEMONS_WILDERNESS_SLAYER_CAVE_AREA [3331, 10151, 0, 3353, 10174, 0]
#define CONST_SLAYER_DRAKES_AREA [1297, 10224, 1, 1363, 10260, 1]
#define CONST_SLAYER_NECHRYAEL_SLAYER_TOWER_TOP_AREA [3431, 3555, 2, 3453, 3580, 2]
#define CONST_SLAYER_NECHRYAEL_SLAYER_TOWER_BASEMENT_AREA [3399, 9977, 3, 3429, 9954, 3]
#define CONST_SLAYER_GREATER_NECHRYAEL_CATACOMBS_AREA [1689, 10087, 0, 1712, 10075, 0]
#define CONST_SLAYER_GREATER_NECHRYAEL_IORWERTH_NORTH_AREA [3216, 12449, 0, 3241, 12469, 0]
#define CONST_SLAYER_GREATER_NECHRYAEL_IORWERTH_SOUTH_AREA [3213, 12410, 0, 3233, 12432, 0]
#define CONST_SLAYER_GREATER_NECHRYAEL_WILDERNESS_SLAYER_CAVE_AREA [3329, 10095, 0, 3345, 10120, 0]
#define CONST_SLAYER_GARGOYLES_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_SKELETAL_WYVERNS_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_KURASKS_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_FOSSIL_ISLAND_WYVERNS_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_DUST_DEVILS_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_WYRMS_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_CAVE_HORRORS_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_ZYGOMITES_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_WARPED_CREATURES_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_TUROTHS_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_JELLIES_AREA [0000, 0000, 0, 0000, 0000, 0]
#define CONST_SLAYER_BLOODVELDS_AREA [0000, 0000, 0, 0000, 0000, 0]

#define CONST_PRIF_SPAWN_AREA [3238, 6066, 0, 3284, 6102, 0]
#define CONST_FALADOR_SPAWN_AREA [2958, 3335, 0, 2983, 3355, 0]
#define CONST_EDGEVILLE_NETTLES_AREA [3088, 3468, 0, 3092, 3470, 0]
#define CONST_EDGEVILLE_MONASTERY_SECOND_FLOOR_AREA [3042, 3480, 1, 3062, 3501, 1]
#define CONST_ARDY_MARKET_CHEST_AREA [2672, 3305, 0, 2678, 3312, 0]
#define CONST_COLO_LOBBY_AREA [1794, 9479, 0, 1856, 9538, 0]
#define CONST_LUMBRIDGE_BASEMENT_CAVE_EXIT_AREA [3206, 9600, 0, 3237, 9628, 0]



#define CONST_GLOBAL_TRADEABLE_NON_TRADEABLE_ITEMS [     "1/2 anchovy pizza",     "1/2 meat pizza",     "1/2 pineapple pizza",     "1/2 plain pizza",     "2/3 cake",     "2/3 chocolate cake",     "Adamant fire arrow",     "Air rune pack",     "Amethyst fire arrow",     "An empty box",     "Anchovy paste",     "Apples(1)",     "Apples(2)",     "Apples(3)",     "Apples(4)",     "Astronomy book",     "Bailing bucket",     "Bananas(1)",     "Bananas(2)",     "Bananas(3)",     "Bananas(4)",     "Bandages",     "Barricade",     "Basket pack",     "Black mask (1)",     "Black mask (10)",     "Black mask (2)",     "Black mask (3)",     "Black mask (4)",     "Black mask (5)",     "Black mask (6)",     "Black mask (7)",     "Black mask (8)",     "Black mask (9)",     "Black satchel",     "Blue flowers",     "Broken pole",     "Bronze fire arrow",     "Bruised banana",     "Bucket of rubble",     "Burnt anglerfish",     "Burnt bat",     "Burnt batta",     "Burnt beast meat",     "Burnt bird meat",     "Burnt bread",     "Burnt cake",     "Burnt cave eel",     "Burnt chicken",     "Burnt crunchies",     "Burnt curry",     "Burnt dark crab",     "Burnt eel",     "Burnt egg",     "Burnt fish",     "Burnt fish",     "Burnt fish",     "Burnt fish",     "Burnt fish",     "Burnt fish",     "Burnt gnomebowl",     "Burnt jubbly",     "Burnt karambwan",     "Burnt lobster",     "Burnt manta ray",     "Burnt meat",     "Burnt monkfish",     "Burnt mushroom",     "Burnt onion",     "Burnt oomlie",     "Burnt oomlie wrap",     "Burnt pie",     "Burnt pizza",     "Burnt potato",     "Burnt rabbit",     "Burnt rainbow fish",     "Burnt sea turtle",     "Burnt shark",     "Burnt shrimp",     "Burnt snail",     "Burnt spider (stick)",     "Burnt stew",     "Burnt sweetcorn",     "Burnt swordfish",     "Cadarn lineage",     "Cat training medal",     "Chaos rune pack",     "Chaotic handegg",     "Chocolate slice",     "Climbing rope",     "Coconut shell",     "Coins",     "Cooked chicken",     "Cooked meat",     "Crate",     "Crushed gem",     "Crystal singing for beginners",     "Damp egg",     "Damp tinderbox",     "Dragon fire arrow",     "Earth rune pack",     "Empty oyster",     "Explosive potion",     "Feather pack",     "Field ration",     "Fire rune pack",     "Flyer",     "Fossilised Dung",     "Glassblowing book",     "Gold satchel",     "Green satchel",     "Ground bat bones",     "Guthix balance (unf)",     "Half a admiral pie",     "Half a apple pie",     "Half a botanical pie",     "Half a dragonfruit pie",     "Half a fish pie",     "Half a garden pie",     "Half a meat pie",     "Half a mud pie",     "Half a mushroom pie",     "Half a redberry pie",     "Half a summer pie",     "Half a wild pie",     "Half certificate (left)",     "Half certificate (right)",     "Half coconut",     "Holy handegg",     "Incomplete pizza",     "Iron fire arrow",     "Iron sickle",     "Mind rune pack",     "Miscellaneous key",     "Mithril fire arrow",     "Mud",     "Muddy rock",     "Newcomer map",     "Newspaper",     "Old wool",     "Oranges(1)",     "Oranges(2)",     "Oranges(3)",     "Oranges(4)",     "Part admiral pie",     "Part fish pie",     "Part garden pie",     "Part mud pie",     "Part summer pie",     "Part wild pie",     "Peaceful handegg",     "Pete's candlestick",     "Phoenix crossbow",     "Plain satchel",     "Plant pot pack",     "Platinum token",     "Potion",     "Raw beef",     "Raw chicken",     "Raw swamp paste",     "Red flowers",     "Red satchel",     "Rock",     "Rock",     "Rotten food",     "Rotten tomato",     "Ruined chompy",     "Ruined herb tea",     "Rune fire arrow",     "Rune satchel",     "Sack pack",     "Sample bottle",     "Shayzien supply crate",     "Slice of cake",     "Smashed glass",     "Smelly sock",     "Spare controls",     "Spider on shaft",     "Spooky egg",     "Steel fire arrow",     "Strawberries(1)",     "Strawberries(2)",     "Strawberries(3)",     "Strawberries(4)",     "Strip of cloth",     "Sulphur",     "Tankard",     "Tea leaves",     "Tile",     "Tomatoes(1)",     "Tomatoes(2)",     "Tomatoes(3)",     "Tomatoes(4)",     "Toolkit",     "Tzhaar air rune pack",     "Tzhaar earth rune pack",     "Tzhaar fire rune pack",     "Tzhaar water rune pack",     "Ugthanki kebab",     "Uncooked pizza",     "Unfinished broad bolt pack",     "Washing bowl",     "Water rune pack",     "Water-filled vial pack",     "Weapon store key", ]

#define CONST_FARMING_SEEDS_ALLOTMENT_LIST [   "Potato seed",   "Onion seed",   "Cabbage seed",   "Tomato seed",   "Sweetcorn seed",   "Strawberry seed",   "Watermelon seed",   "Snape grass seed", ]

#define CONST_FARMING_SEEDS_FLOWER_LIST [   "Marigold seed",   "Rosemary seed",   "Nasturtium seed",   "Woad seed",   "Limpwurt seed",   "White lily seed", ]

#define CONST_FARMING_SEEDS_HERB_LIST [   "Guam seed",   "Marrentill seed",   "Tarromin seed",   "Harralander seed",   "Ranarr seed",   "Toadflax seed",   "Irit seed",   "Avantoe seed",   "Kwuarm seed",   "Snapdragon seed",   "Huasca seed",   "Cadantine seed",   "Lantadyme seed",   "Dwarf weed seed",   "Torstol seed", ]

#define CONST_FARMING_SEEDS_HOPS_LIST [   "Barley seed",   "Hammerstone seed",   "Asgarnian seed",   "Jute seed",   "Yanillian seed",   "Krandorian seed",   "Wildblood seed", ]

#define CONST_FARMING_SEEDS_BUSH_LIST [   "Redberry seed",   "Cadavaberry seed",   "Dwellberry seed",   "Jangerberry seed",   "Whiteberry seed",   "Poison ivy seed", ]

#define CONST_FARMING_SEEDS_TREE_LIST [   "Acorn",   "Willow seed",   "Maple seed",   "Yew seed",   "Magic seed", ]

#define CONST_FARMING_SEEDS_FRUIT_TREE_LIST [   "Apple seed",   "Banana seed",   "Orange seed",   "Curry seed",   "Pineapple seed",   "Papaya seed",   "Palm tree seed",   "Dragonfruit seed", ]

#define CONST_FARMING_SEEDS_SPECIAL_TREE_LIST [   "Teak seed",   "Mahogany seed",   "Calquat tree seed",   "Crystal acorn",   "Spirit seed",   "Celastrus seed",   "Redwood tree seed", ]

#define CONST_FARMING_SEEDS_SPECIAL_LIST [   "Seaweed spore",   "Grape seed",   "Mushroom spore",   "Belladonna seed",   "Hespori seed",   "Cactus seed",   "Potato cactus seed", ]

#define CONST_FARMING_SEEDS_ANIMA_LIST [   "Kronos seed",   "Iasor seed",   "Attas seed", ]

#define CONST_CURRENCY_LIST [   "Abyssal pearls",   "Agility arena ticket",   "Anima-infused bark",   "Archery ticket",   "Barronite shards",   "Blood money",   "Brimhaven voucher",   "Castle wars ticket",   "Coins",   "Ecto-token",   "Frog token",   "Glistening tear",   "Golden nugget",   "Hallowed mark",   "Intelligence",   "Mark of grace",   "Mermaid's tear",   "Minnow",   "Molch pearl",   "Mole claw",   "Mole skin",   "Nuggets",   "Numulite",   "Paramaya ticket",   "Platinum token",   "Rare creature parts",   "Reward token credits",   "Shantay pass",   "Ship ticket",   "Stardust",   "Termites",   "Tokkul",   "Trading sticks",   "Unidentified minerals",   "Warrior guild token", ]

#define CONST_FISHING_EQUIPMENT_LIST [   "Small fishing net",   "Big fishing net",   "Drift net",   "Fishing rod",   "Fly fishing rod",   "Oily fishing rod",   "Harpoon",   "Lobster pot",   "Karambwan vessel", ]

#define CONST_FISHING_BAIT_LIST [   "Sandworms",   "Fishing bait",   "Feather",   "Stripy feather",   "Dark fishing bait",   "King worm",   "Fish chunks",   "Raw karambwanji", ]

#define CONST_FISHING_RAW_FISH_LIST [   "Raw shrimps",   "Raw anchovies",   "Raw guppy",   "Raw cavefish",   "Raw tetra",   "Frog spawn",   "Raw monkfish",   "Minnow",   "Raw mackerel",   "Raw cod",   "Raw bass",   "Raw catfish",   "Raw sardine",   "Raw herring",   "Raw pike",   "Raw slimy eel",   "Raw cave eel",   "Raw anglerfish",   "Sacred eel",   "Raw trout",   "Raw salmon",   "Raw rainbow fish",   "Raw lava eel",   "Infernal eel",   "Leaping trout",   "Leaping salmon",   "Leaping sturgeon",   "Raw tuna",   "Raw swordfish",   "Raw shark",   "Raw lobster",   "Raw dark crab",   "Bluegill",   "Common tench",   "Mottled eel",   "Greater siren",   "Raw karambwan", ]

#define CONST_ALL_HERBS [   "*guam leaf",   "*marrentill",   "*tarromin",   "*harralander",   "*ranarr weed",   "*toadflax",   "*irit leaf",   "*avantoe",   "*kwuarm",   "*huasca",   "*snapdragon",   "*cadantine",   "*lantadyme",   "*dwarf weed",   "*torstol", ]

#define CONST_HUNTER_FOODS_LIST [   "Cooked wild kebbit",   "Cooked larupia",   "Cooked barb-tailed kebbit",   "Cooked graahk",   "Cooked kyatt",   "Cooked pyre fox",   "Cooked sunlight antelope",   "Cooked dashing kebbit",   "Cooked moonlight antelope", ]

#define CONST_FISH_FOODS_LIST [   "Shrimp",   "Sardine",   "Karambwanji",   "Herring",   "Anchovies",   "Mackerel",   "Trout",   "Cod",   "Pike",   "Slimy eel",   "Salmon",   "Tuna",   "Rainbow fish",   "Cave eel",   "Lobster",   "Bass",   "Swordfish",   "Lava eel",   "Monkfish",   "Cooked karambwan",   "Shark",   "Sea turtle",   "Manta ray",   "Anglerfish",   "Dark crab", ]

#define CONST_BRONZE_ONE_HANDED_MELEE_WEAPONS [   "Bronze dagger",   "Bronze axe",   "Bronze mace",   "Bronze sword",   "Bronze pickaxe",   "Bronze scimitar",   "Bronze hasta",   "Bronze longsword",   "Bronze warhammer",   "Bronze battleaxe", ]

#define CONST_BRONZE_TWO_HANDED_MELEE_WEAPONS [   "Bronze claws",   "Bronze spear",   "Bronze halberd",   "Bronze 2h sword", ]

#define CONST_BRONZE_RANGED_WEAPONS [   "Bronze crossbow", ]

#define CONST_BRONZE_AMMO [   "Bronze dart",   "Bronze knife",   "Bronze thrownaxe",   "Bronze arrow",   "Bronze bolts",   "Bronze brutal",   "Bronze javelin", ]

#define CONST_BRONZE_ARMOUR [   "Bronze boots",   "Bronze gloves",   "Bronze defender",   "Bronze med helm",   "Bronze full helm",   "Bronze sq shield",   "Bronze platelegs",   "Bronze plateskirt",   "Bronze kiteshield",   "Bronze chainbody",   "Bronze platebody", ]

#define CONST_BRONZE_TRIMMED_ARMOUR [   "Bronze full helm (t)",   "Bronze platebody (t)",   "Bronze platelegs (t)",   "Bronze kiteshield (t)",   "Bronze plateskirt (t)", ]

#define CONST_BRONZE_GOLD_TRIMMED_ARMOUR [   "Bronze full helm (g)",   "Bronze platebody (g)",   "Bronze platelegs (g)",   "Bronze kiteshield (g)",   "Bronze plateskirt (g)", ]

#define CONST_BRONZE_OTHER [   "Bronze Nails",   "Bronze Javelin heads",   "Bronze Arrowtips",   "Bronze Dart tips",   "Bronze Unfinished bolts", ]

#define CONST_IRON_ONE_HANDED_MELEE_WEAPONS [   "Iron dagger",   "Iron axe",   "Iron mace",   "Iron sword",   "Iron pickaxe",   "Iron scimitar",   "Iron hasta",   "Iron longsword",   "Iron warhammer",   "Iron battleaxe", ]

#define CONST_IRON_TWO_HANDED_MELEE_WEAPONS [   "Iron claws",   "Iron spear",   "Iron halberd",   "Iron 2h sword", ]

#define CONST_IRON_RANGED_WEAPONS [   "Iron crossbow", ]

#define CONST_IRON_AMMO [   "Iron dart",   "Iron knife",   "Iron thrownaxe",   "Iron arrow",   "Iron bolts",   "Iron brutal",   "Iron javelin", ]

#define CONST_IRON_ARMOUR [   "Iron boots",   "Iron gloves",   "Iron defender",   "Iron med helm",   "Iron full helm",   "Iron sq shield",   "Iron platelegs",   "Iron plateskirt",   "Iron kiteshield",   "Iron chainbody",   "Iron platebody", ]

#define CONST_IRON_TRIMMED_ARMOUR [   "Iron full helm (t)",   "Iron platebody (t)",   "Iron platelegs (t)",   "Iron kiteshield (t)",   "Iron plateskirt (t)", ]

#define CONST_IRON_GOLD_TRIMMED_ARMOUR [   "Iron full helm (g)",   "Iron platebody (g)",   "Iron platelegs (g)",   "Iron kiteshield (g)",   "Iron plateskirt (g)", ]

#define CONST_IRON_OTHER [   "Iron Nails",   "Iron Javelin heads",   "Iron Arrowtips",   "Iron Dart tips",   "Iron Unfinished bolts",   "Oil lantern frame",   "Cooking spit", ]

#define CONST_STEEL_ONE_HANDED_MELEE_WEAPONS [   "Steel dagger",   "Steel axe",   "Steel mace",   "Steel sword",   "Steel pickaxe",   "Steel scimitar",   "Steel hasta",   "Steel longsword",   "Steel warhammer",   "Steel battleaxe", ]

#define CONST_STEEL_TWO_HANDED_MELEE_WEAPONS [   "Steel claws",   "Steel spear",   "Steel halberd",   "Steel 2h sword", ]

#define CONST_STEEL_RANGED_WEAPONS [   "Steel crossbow", ]

#define CONST_STEEL_AMMO [   "Steel dart",   "Steel knife",   "Steel thrownaxe",   "Steel arrow",   "Steel bolts",   "Steel brutal",   "Steel javelin", ]

#define CONST_STEEL_ARMOUR [   "Steel boots",   "Steel gloves",   "Steel defender",   "Steel med helm",   "Steel full helm",   "Steel sq shield",   "Steel platelegs",   "Steel plateskirt",   "Steel kiteshield",   "Steel chainbody",   "Steel platebody", ]

#define CONST_STEEL_TRIMMED_ARMOUR [   "Steel full helm (t)",   "Steel platebody (t)",   "Steel platelegs (t)",   "Steel kiteshield (t)",   "Steel plateskirt (t)", ]

#define CONST_STEEL_GOLD_TRIMMED_ARMOUR [   "Steel full helm (g)",   "Steel platebody (g)",   "Steel platelegs (g)",   "Steel kiteshield (g)",   "Steel plateskirt (g)", ]

#define CONST_STEEL_OTHER [   "Steel Nails",   "Steel Javelin heads",   "Steel Arrowtips",   "Steel Dart tips",   "Steel Unfinished bolts",   "Steel studs", ]

#define CONST_BLACK_ONE_HANDED_MELEE_WEAPONS [   "Black dagger",   "Black pickaxe",   "Black axe",   "Black sword",   "Black mace",   "Black scimitar",   "Black longsword",   "Black warhammer",   "Black battleaxe", ]

#define CONST_BLACK_TWO_HANDED_MELEE_WEAPONS [   "Black claws",   "Black spear",   "Black halberd",   "Black 2h sword", ]

#define CONST_BLACK_RANGED_WEAPONS [ ]

#define CONST_BLACK_AMMO [   "Black dart",   "Black knife",   "Black brutal", ]

#define CONST_BLACK_ARMOUR [   "Black gloves",   "Black boots",   "Black defender",   "Black med helm",   "Black full helm",   "Black sq shield",   "Black kiteshield",   "Black platelegs",   "Black plateskirt",   "Black chainbody",   "Black platebody", ]

#define CONST_BLACK_TRIMMED_ARMOUR [   "Black full helm (t)",   "Black platebody (t)",   "Black platelegs (t)",   "Black kiteshield (t)",   "Black plateskirt (t)", ]

#define CONST_BLACK_GOLD_TRIMMED_ARMOUR [   "Black full helm (g)",   "Black platebody (g)",   "Black platelegs (g)",   "Black kiteshield (g)",   "Black plateskirt (g)", ]

#define CONST_BLACK_OTHER [   "Black Nails",   "Elite black full helm",   "Elite black platelegs",   "Elite black platebody", ]

#define CONST_BLACK_HERALDIC_ARMOUR [   "Black helm (h1)",   "Black helm (h2)",   "Black helm (h3)",   "Black helm (h4)",   "Black helm (h5)",   "Black platebody (h1)",   "Black platebody (h2)",   "Black platebody (h3)",   "Black platebody (h4)",   "Black platebody (h5)",   "Black shield (h1)",   "Black shield (h2)",   "Black shield (h3)",   "Black shield (h4)",   "Black shield (h5)", ]

#define CONST_MITHRIL_ONE_HANDED_MELEE_WEAPONS [   "Mithril dagger",   "Mithril axe",   "Mithril mace",   "Mithril sword",   "Mithril pickaxe",   "Mithril scimitar",   "Mithril hasta",   "Mithril longsword",   "Mithril warhammer",   "Mithril battleaxe", ]

#define CONST_MITHRIL_TWO_HANDED_MELEE_WEAPONS [   "Mithril claws",   "Mithril spear",   "Mithril halberd",   "Mithril 2h sword", ]

#define CONST_MITHRIL_RANGED_WEAPONS [   "Mithril crossbow", ]

#define CONST_MITHRIL_AMMO [   "Mithril dart",   "Mithril knife",   "Mithril thrownaxe",   "Mithril arrow",   "Mithril bolts",   "Mithril brutal",   "Mithril javelin", ]

#define CONST_MITHRIL_ARMOUR [   "Mithril boots",   "Mithril gloves",   "Mithril defender",   "Mithril med helm",   "Mithril full helm",   "Mithril sq shield",   "Mithril platelegs",   "Mithril plateskirt",   "Mithril kiteshield",   "Mithril chainbody",   "Mithril platebody", ]

#define CONST_MITHRIL_TRIMMED_ARMOUR [   "Mithril full helm (t)",   "Mithril platebody (t)",   "Mithril platelegs (t)",   "Mithril kiteshield (t)",   "Mithril plateskirt (t)", ]

#define CONST_MITHRIL_GOLD_TRIMMED_ARMOUR [   "Mithril full helm (g)",   "Mithril platebody (g)",   "Mithril platelegs (g)",   "Mithril kiteshield (g)",   "Mithril plateskirt (g)", ]

#define CONST_MITHRIL_OTHER [   "Mithril Nails",   "Mithril Javelin heads",   "Mithril Arrowtips",   "Mithril Dart tips",   "Mithril Unfinished bolts",   "Mith grapple tip",   "Mith grapple", ]

#define CONST_ADAMANT_ONE_HANDED_MELEE_WEAPONS [   "Adamant dagger",   "Adamant axe",   "Adamant mace",   "Adamant cane",   "Adamant sword",   "Adamant pickaxe",   "Adamant scimitar",   "Adamant hasta",   "Adamant longsword",   "Adamant warhammer",   "Adamant battleaxe", ]

#define CONST_ADAMANT_TWO_HANDED_MELEE_WEAPONS [   "Adamant claws",   "Adamant spear",   "Adamant halberd",   "Adamant 2h sword", ]

#define CONST_ADAMANT_RANGED_WEAPONS [   "Adamant crossbow", ]

#define CONST_ADAMANT_AMMO [   "Adamant dart",   "Adamant knife",   "Adamant thrownaxe",   "Adamant arrow",   "Adamant bolts",   "Adamant brutal",   "Adamant javelin", ]

#define CONST_ADAMANT_ARMOUR [   "Adamant boots",   "Adamant gloves",   "Adamant defender",   "Adamant med helm",   "Adamant full helm",   "Adamant sq shield",   "Adamant platelegs",   "Adamant plateskirt",   "Adamant kiteshield",   "Adamant chainbody",   "Adamant platebody", ]

#define CONST_ADAMANT_TRIMMED_ARMOUR [   "Adamant full helm (t)",   "Adamant platebody (t)",   "Adamant platelegs (t)",   "Adamant kiteshield (t)",   "Adamant plateskirt (t)", ]

#define CONST_ADAMANT_GOLD_TRIMMED_ARMOUR [   "Adamant full helm (g)",   "Adamant platebody (g)",   "Adamant platelegs (g)",   "Adamant kiteshield (g)",   "Adamant plateskirt (g)", ]

#define CONST_ADAMANT_OTHER [   "Adamant Nails",   "Adamant Javelin heads",   "Adamant Arrowtips",   "Adamant Dart tips",   "Adamant Unfinished bolts", ]

#define CONST_ADAMANT_HERALDIC_ARMOUR [   "Adamant helm (h1)",   "Adamant helm (h2)",   "Adamant helm (h3)",   "Adamant helm (h4)",   "Adamant helm (h5)",   "Adamant platebody (h1)",   "Adamant platebody (h2)",   "Adamant platebody (h3)",   "Adamant platebody (h4)",   "Adamant platebody (h5)",   "Adamant shield (h1)",   "Adamant shield (h2)",   "Adamant shield (h3)",   "Adamant shield (h4)",   "Adamant shield (h5)", ]

#define CONST_RUNE_ONE_HANDED_MELEE_WEAPONS [   "Rune dagger",   "Rune axe",   "Rune mace",   "Rune sword",   "Rune pickaxe",   "Rune scimitar",   "Rune hasta",   "Rune longsword",   "Rune warhammer",   "Rune battleaxe", ]

#define CONST_RUNE_TWO_HANDED_MELEE_WEAPONS [   "Rune claws",   "Rune spear",   "Rune halberd",   "Rune 2h sword", ]

#define CONST_RUNE_RANGED_WEAPONS [   "Rune crossbow", ]

#define CONST_RUNE_AMMO [   "Rune dart",   "Rune knife",   "Rune thrownaxe",   "Rune arrow",   "Rune bolts",   "Rune brutal",   "Rune javelin", ]

#define CONST_RUNE_ARMOUR [   "Rune boots",   "Rune gloves",   "Rune defender",   "Rune med helm",   "Rune full helm",   "Rune sq shield",   "Rune platelegs",   "Rune plateskirt",   "Rune kiteshield",   "Rune chainbody",   "Rune platebody", ]

#define CONST_RUNE_TRIMMED_ARMOUR [   "Rune full helm (t)",   "Rune platebody (t)",   "Rune platelegs (t)",   "Rune kiteshield (t)",   "Rune plateskirt (t)", ]

#define CONST_RUNE_GOLD_TRIMMED_ARMOUR [   "Rune full helm (g)",   "Rune platebody (g)",   "Rune platelegs (g)",   "Rune kiteshield (g)",   "Rune plateskirt (g)", ]

#define CONST_RUNE_OTHER [   "Rune Nails",   "Rune Javelin heads",   "Rune Arrowtips",   "Rune Dart tips",   "Rune Unfinished bolts", ]

#define CONST_RUNE_HERALDIC_ARMOUR [   "Rune helm (h1)",   "Rune helm (h2)",   "Rune helm (h3)",   "Rune helm (h4)",   "Rune helm (h5)",   "Rune platebody (h1)",   "Rune platebody (h2)",   "Rune platebody (h3)",   "Rune platebody (h4)",   "Rune platebody (h5)",   "Rune shield (h1)",   "Rune shield (h2)",   "Rune shield (h3)",   "Rune shield (h4)",   "Rune shield (h5)", ]

#define CONST_RUNE_GILDED [   "Gilded med helm",   "Gilded full helm",   "Gilded chainbody",   "Gilded platebody",   "Gilded platelegs",   "Gilded plateskirt",   "Gilded boots",   "Gilded defender",   "Gilded sq shield",   "Gilded kiteshield",   "Gilded hasta",   "Gilded spear",   "Gilded scimitar",   "Gilded 2h sword", ]

#define CONST_RUNE_ANCIENT_TRIMMED_ARMOUR [   "Ancient full helm",   "Ancient platebody",   "Ancient platelegs",   "Ancient kiteshield",   "Ancient plateskirt", ]

#define CONST_RUNE_ARMADYL_TRIMMED_ARMOUR [   "Armadyl full helm",   "Armadyl platebody",   "Armadyl platelegs",   "Armadyl kiteshield",   "Armadyl plateskirt", ]

#define CONST_RUNE_BANDOS_TRIMMED_ARMOUR [   "Bandos full helm",   "Bandos platebody",   "Bandos platelegs",   "Bandos kiteshield",   "Bandos plateskirt", ]

#define CONST_RUNE_GUTHIX_TRIMMED_ARMOUR [   "Guthix full helm",   "Guthix platebody",   "Guthix platelegs",   "Guthix kiteshield",   "Guthix plateskirt", ]

#define CONST_RUNE_SARADOMIN_TRIMMED_ARMOUR [   "Saradomin full helm",   "Saradomin platebody",   "Saradomin platelegs",   "Saradomin kiteshield",   "Saradomin plateskirt", ]

#define CONST_RUNE_ZAMORAK_TRIMMED_ARMOUR [   "Zamorak full helm",   "Zamorak platebody",   "Zamorak platelegs",   "Zamorak kiteshield",   "Zamorak plateskirt", ]

#define CONST_DRAGON_ONE_HANDED_MELEE_WEAPONS [   "Dragon dagger",   "Dragon axe",   "Dragon pickaxe",   "Dragon harpoon",   "Dragon mace",   "Dragon cane",   "Dragon hasta",   "Dragon sword",   "Dragon scimitar",   "Dragon longsword",   "Dragon warhammer",   "Dragon battleaxe", ]

#define CONST_DRAGON_TWO_HANDED_MELEE_WEAPONS [   "Dragon claws",   "Dragon spear",   "Dragon halberd",   "Dragon 2h sword", ]

#define CONST_DRAGON_RANGED_WEAPONS [   "Dragon crossbow", ]

#define CONST_DRAGON_AMMO [   "Dragon knife",   "Dragon dart",   "Dragon thrownaxe",   "Dragon arrow",   "Dragon bolts",   "Dragon javelin", ]

#define CONST_DRAGON_ARMOUR [   "Dragon med helm",   "Dragon full helm",   "Dragon chainbody",   "Dragon platebody",   "Dragon platelegs",   "Dragon plateskirt",   "Dragon gloves",   "Dragon boots",   "Dragon sq shield",   "Dragon kiteshield",   "Dragon defender", ]

#define CONST_LAST_MAN_STANDING_STARTER_GEAR_LIST [   "Abyssal whip",   "Ahrim's staff",   "Amulet of glory",   "Ancient staff",   "Barrows gloves",   "Berserker helm",   "Berserker ring",   "Black d'hide body",   "Black d'hide chaps",   "Climbing boots",   "Diamond bolts (e)",   "Dragon dagger",   "Dragon defender",   "Dragon scimitar",   "Ghostly hood",   "Ghostly robe (bottom)",   "Ghostly robe (top)",   "Helm of neitiznot",   "Imbued guthix cape",   "Imbued saradomin cape",   "Imbued zamorak cape",   "Mithril gloves",   "Mystic robe bottom",   "Mystic robe bottom (dark)",   "Mystic robe bottom (light)",   "Mystic robe top",   "Mystic robe top (dark)",   "Mystic robe top (light)",   "Occult necklace",   "Rune crossbow",   "Rune defender",   "Rune platelegs",   "Spirit shield",   "Tome of fire",   "Unholy book",  ]

#define CONST_LAST_MAN_STANDING_AMMO_LIST [   "Atlatl dart",   "Diamond bolts (e)",   "Dragon arrows",   "Dragon javelins",   "Dragon knife",   "Morrigan's javelin",   "Opal dragon bolts (e)", ]

#define CONST_BONES_LIST [   "Bones",   "Wolf bones",   "Burnt bones",   "Monkey bones",   "Bat bones",   "Big bones",   "Jogre bones",   "Wyrmling bones",   "Zogre bones",   "Shaikahan bones",   "Babydragon bones",   "Wyrm bones",   "Wyvern bones",   "Dragon bones",   "Drake bones",   "Fayrg bones",   "Lava dragon bones",   "Raurg bones",   "Hydra bones",   "Dagannoth bones",   "Ourg bones",   "Superior dragon bones",   "Bleached bones",   "Small zombie monkey bones",   "Large zombie monkey bones",   "Small ninja monkey bones",   "Medium ninja monkey bones",   "Gorilla bones",   "Bearded gorilla bones", ]

#define CONST_ASHES_LIST [   "Fiendish ashes",   "Vile ashes",   "Malicious ashes",   "Abyssal ashes",   "Infernal ashes", ]

#define CONST_SHADES_REMAINS_LIST [   "Loar remains",   "Phrin remains",   "Riyl remains",   "Asyn remains",   "Fiyr remains",   "Urium remains", ]

#define CONST_ENSOULED_HEAD_LIST [   "Ensouled goblin head",   "Ensouled monkey head",   "Ensouled imp head",   "Ensouled minotaur head",   "Ensouled scorpion head",   "Ensouled bear head",   "Ensouled unicorn head",   "Ensouled dog head",   "Ensouled chaos druid head",   "Ensouled giant head",   "Ensouled ogre head",   "Ensouled elf head",   "Ensouled troll head",   "Ensouled horror head",   "Ensouled kalphite head",   "Ensouled dagannoth head",   "Ensouled bloodveld head",   "Ensouled tzHaar head",   "Ensouled demon head",   "Ensouled hellhound head",   "Ensouled aviansie head",   "Ensouled abyssal head",   "Ensouled dragon head", ]

#define CONST_RUNE_NAMES [   "Air rune",   "Mind rune",   "Water rune",   "Earth rune",   "Fire rune",   "Body rune",   "Cosmic rune",   "Chaos rune",   "Nature rune",   "Law rune",   "Death rune",   "Sunfire rune",   "Astral rune",   "Blood rune",   "Soul rune",   "Wrath rune",   "Mist rune",   "Dust rune",   "Mud rune",   "Smoke rune",   "Steam rune",   "Lava rune", ]

#define CONST_SECONDARIES_LIST [   "Eye of newt",   "Unicorn horn dust",   "Limpwurt root",   "Volcanic ash",   "Red spiders' eggs",   "Chocolate dust",   "White berries",   "Toad's legs",   "Goat horn dust",   "Snape grass",   "Mort myre fungus",   "Kebbit teeth dust",   "Dragon scale dust",   "Nail beast nails",   "Yew roots",   "Wine of zamorak",   "Potato cactus",   "Jangerberries",   "Magic roots",   "Crushed nest",   "Poison ivy berries",   "Nihil dust",   "Lily of the sands",   "Aldarium",   "Araxyte venom sack", ]

#define CONST_AMMO_STANDARD_ARROWS_LIST [   "Bronze Arrow*",   "Iron Arrow*",   "Steel Arrow*",   "Mithril Arrow*",   "Adamant Arrow*",   "Rune Arrow*",   "Amethyst Arrow*",   "Dragon Arrow*",   "Bronze fire arrow",   "Iron fire arrow",   "Steel fire arrow",   "Mithril fire arrow",   "Adamant fire arrow",   "Rune fire arrow",   "Amethyst fire arrow",   "Dragon fire arrow", ]

#define CONST_AMMO_DARTS_LIST [   "Bronze dart*",   "Iron dart*",   "Steel dart*",   "Black dart*",   "Mithril dart*",   "Adamant dart*",   "Rune dart*",   "Amethyst dart*",   "Dragon dart*",   "Atlatl dart", ]

#define CONST_AMMO_BOLTS_LIST [   "Bronze bolts*",   "Blurite bolts*",   "Silver bolts*",   "Iron bolts*",   "Steel bolts*",   "Mithril bolts*",   "Adamant bolts*",   "Runite bolts*",   "Dragon bolts*", ]

#define CONST_AMMO_BOLTS_E_LIST [   "Opal bolts (e)",   "Jade bolts (e)",   "Pearl bolts (e)",   "Topaz bolts (e)",   "Sapphire bolts (e)",   "Emerald bolts (e)",   "Ruby bolts (e)",   "Diamond bolts (e)",   "Dragonstone bolts (e)",   "Onyx bolts (e)", ]

#define CONST_AMMO_DRAGON_BOLTS_E_LIST [   "Opal dragon bolts (e)",   "Jade dragon bolts (e)",   "Pearl dragon bolts (e)",   "Topaz dragon bolts (e)",   "Sapphire dragon bolts (e)",   "Emerald dragon bolts (e)",   "Ruby dragon bolts (e)",   "Diamond dragon bolts (e)",   "Dragonstone dragon bolts (e)",   "Onyx dragon bolts (e)", ]

#define CONST_AMMO_JAVELINS_LIST [   "Bronze javelin*",   "Iron javelin*",   "Steel javelin*",   "Mithril javelin*",   "Adamant javelin*",   "Rune javelin*",   "Amethyst javelin*",   "Dragon javelin*", ]

#define CONST_AMMO_SPECIAL_BOLTS_LIST [   "Moonlight antler bolts",   "Sunlight antler bolts",   "Kebbit bolts",   "Long kebbit bolts",   "Broad bolts",   "Amethyst broad bolts",   "Barbed bolts",   "Bone bolts", ]

#define CONST_AMMO_BRUTAL_ARROWS_LIST [   "Bronze brutal",   "Iron brutal",   "Steel brutal",   "Black brutal",   "Mithril brutal",   "Adamant brutal",   "Rune brutal", ]

#define CONST_AMMO_SPECIAL_ARROWS_LIST [   "Training Arrow",   "Ogre Arrow",   "Ice Arrow",   "Broad Arrow", ]
